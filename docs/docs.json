{
	"id": 0,
	"name": "Stacks.js 1.4.1 Library Reference",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "auth",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/auth\n\nConstruct and decode authentication requests for Stacks apps. \n\nThis package provides the auth logic used by the [Stacks Connect](https://github.com/blockstack/ux/tree/master/packages/connect) library. If you're looking to integrate Stacks authentication into your web app, Stacks Connect provides a simple API and built-in user interface. See the [authentication tutorial](https://docs.blockstack.org/authentication/building-todo-app). \n\n## Installation\n\n```\nnpm install @stacks/auth\n```\n\n## Usage\n\n### Generating an authentication request\n\n```typescript\nimport { UserSession, makeAuthRequest, AppConfig } from '@stacks/auth'\n```\n\nThe app domain is the URL to your website/app. This is how the Stacks authentication system identifies apps and determines what credentials to provide. Changing the app domain is equivalent to changing the app. Note that you also need to have a valid manifest.json file at the domain.\n\n```typescript\nconst appDomain = 'https://www.myapp.com';\n```\n\nNext we set the basic permissions for your app to read and store user data. If your app will allow users to share data with other users, you will need an additional `publish_data` permission. We will also initiate a `UserSession` object using the configuration.\n\n```typescript\nconst appConfig = new AppConfig(['store_write'], appDomain);\nconst userSession = new UserSession({ appConfig });\n```\n\nThe authentication payloads are encrypted during transit, the encryption key generated below provides this\n\n```typescript\nconst transitKey = userSession.generateAndStoreTransitKey();\n```\n\nThe Stacks auth process will open a compatible Stacks authenticator or browser extension to perform the authentication. So you will need to provide a redirect URL which the authenticator or extension can redirect to with the authentication payload. This page should process the authentication payload. \n\n```typescript\nconst redirectUri = 'https://www.myapp.com/auth';\n```\n\nSet the location of your app manifest file. This file contains information about your app that is shown to the user during authentication.\n\n```typescript\nconst manifestUri = 'https://www.myapp.com/manifest.json';\n```\n\nFinally generate the authentication request payload:\n\n```typescript\nconst authRequest = userSession.makeAuthRequest(\n  transitKey,\n  redirectUri,\n  manifestUri\n);\n```\n\nThe resulting payload can now be passed to a compatible Stacks authenticator or browser extension. If you are using Stacks connect, this is performed automatically. \n\nIf you would like to implement a Stacks authenticator, check out the reference implementation of the [Stacks browser extension](https://github.com/blockstack/ux/tree/master/packages/app).\n\n### Handling an authentication response payload\n\nAfter an authenticator has processed your app's request, and the user has granted permission, the resulting response will be passed back to your app via the URL set in your `redirectUri`.\n\nBelow, we use `userSession.isSignInPending` to determine if there is an incoming authentication response. If detected, the `userSession.handlePendingSignIn` method will process the response and provide a `userData` object containing the user's identity, BNS username and profile information.\n\n```typescript\nif (userSession.isSignInPending()) {\n  userSession.handlePendingSignIn().then((userData) => {\n    // Do something with userData\n  });\n}\n```\n\n### Checking if the user is signed in\n\nUse the `userSession.isUserSignedIn` method to check if the user is already authenticated. If so, we can retrieve the user's profile data using `userSession.loadUserData`.\n\n```typescript\nif (userSession.isUserSignedIn()) {\n  const userData = userSession.loadUserData();\n}\n```\n\n### Sign out\n\nTo sign the user out simply call the `userSession.signUserOut` method.\n\n```typescript\nuserSession.signUserOut();\n```\n\n### Data encryption\n\nStacks authentication also provides an easy way to encrypt the user's data. If you are using the [`@stacks/storage`](https://github.com/blockstack/stacks.js/tree/master/packages/storage) package, encryption is automatically enabled. If you would like to perform encryption outside of storage you can use the `userSession.encryptContent` and `userSession.decryptContent` methods.\n\n```typescript\nconst message = 'My secret message';\nconst cipherText = await userSession.encryptContent(message);\nconst plainText = await userSession.decryptContent(cipherText);\n```\n\nNote that encryption here uses the user's private key associated with your app only. If you need to share this data with another app or other users, you should use the equivalent methods from `@stacks/encryption` and provide a custom private key.\n"
			},
			"originalName": "auth/src/appConfig",
			"children": [
				{
					"id": 4547,
					"name": "ProfileLookupOptions",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 90
				},
				{
					"id": 4548,
					"name": "UserData",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 163
				},
				{
					"id": 4531,
					"name": "UserSession",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/auth/src/index.ts",
							"line": 17,
							"character": 20
						}
					],
					"target": 177
				},
				{
					"id": 4546,
					"name": "lookupProfile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 87
				},
				{
					"id": 4516,
					"name": "makeAuthRequest",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/auth/src/index.ts",
							"line": 2,
							"character": 24
						}
					],
					"target": 55
				},
				{
					"id": 29,
					"name": "AuthScope",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Non-exhaustive list of common permission scopes."
					},
					"children": [
						{
							"id": 32,
							"name": "email",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Request the user's email if available."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/constants.ts",
									"line": 40,
									"character": 7
								}
							],
							"defaultValue": "\"email\""
						},
						{
							"id": 31,
							"name": "publish_data",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Publish data so that other users of the app can discover and interact with the user.\nThe user's files stored on Gaia hub are made visible to others via the `apps` property in the\nuserâ€™s `profile.json` file."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/constants.ts",
									"line": 36,
									"character": 14
								}
							],
							"defaultValue": "\"publish_data\""
						},
						{
							"id": 30,
							"name": "store_write",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "Read and write data to the user's Gaia hub in an app-specific storage bucket.\nThis is the default scope."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/constants.ts",
									"line": 30,
									"character": 13
								}
							],
							"defaultValue": "\"store_write\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								32,
								31,
								30
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/auth/src/constants.ts",
							"line": 25,
							"character": 27
						}
					]
				},
				{
					"id": 2,
					"name": "AppConfig",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "Configuration data for the current app.",
						"text": "On browser platforms, creating an instance of this\nclass without any arguments will use\n`window.location.origin` as the app domain.\nOn non-browser platforms, you need to\nspecify an app domain as the second argument.\n\n"
					},
					"children": [
						{
							"id": 3,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4,
									"name": "new AppConfig",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"comment": {},
									"parameters": [
										{
											"id": 5,
											"name": "scopes",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "permissions this app is requesting"
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 6,
											"name": "appDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the app domain"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 7,
											"name": "redirectPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "path on app domain to redirect users to after authentication"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										},
										{
											"id": 8,
											"name": "manifestPath",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "path relative to app domain of app's manifest file"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "'/manifest.json'"
										},
										{
											"id": 9,
											"name": "coreNode",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "override the default or user selected core node"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 10,
											"name": "authenticatorURL",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the web-based fall back authenticator\n([[DEFAULT_BLOCKSTACK_HOST]])\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"id": 2,
										"name": "AppConfig"
									}
								}
							]
						},
						{
							"id": 11,
							"name": "appDomain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Blockstack apps are uniquely identified by their app domain."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 19,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 16,
							"name": "authenticatorURL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The URL of a web-based Blockstack Authenticator to use in the event\nthe user doesn't have Blockstack installed on their machine. If this\nis not specified, the current default in this library will be used."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 57,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15,
							"name": "coreNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The URL of Blockstack core node to use for this app. If this is\n`null`, the core node specified by the user or default core node\nwill be used."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 49,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14,
							"name": "manifestPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path relative to app domain of app's manifest file.",
								"text": "This file needs to have CORS headers set so that it can be fetched\nfrom any origin. Typically this means return the header `Access-Control-Allow-Origin: *`.\n\n"
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 41,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13,
							"name": "redirectPath",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Path on app domain to redirect users to after authentication. The\nauthentication response token will be postpended in a query."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 32,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12,
							"name": "scopes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "An array of string representing permissions requested by the app."
							},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 25,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 19,
							"name": "manifestURI",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 98,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 20,
									"name": "manifestURI",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The location of the app's manifest file.",
										"returns": "- URI\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 17,
							"name": "redirectURI",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/appConfig.ts",
									"line": 90,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 18,
									"name": "redirectURI",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The location to which the authenticator should\nredirect the user.",
										"returns": "- URI\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								11,
								16,
								15,
								14,
								13,
								12
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								19,
								17
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/auth/src/appConfig.ts",
							"line": 14,
							"character": 22
						}
					]
				},
				{
					"id": 127,
					"name": "SessionDataStore",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"comment": {
						"shortText": "An abstract class representing the SessionDataStore interface."
					},
					"children": [
						{
							"id": 128,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 129,
									"name": "new SessionDataStore",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 130,
											"name": "sessionOptions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 104,
												"name": "SessionOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 127,
										"name": "SessionDataStore"
									}
								}
							]
						},
						{
							"id": 136,
							"name": "deleteSessionData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/sessionStore.ts",
									"line": 26,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 137,
									"name": "deleteSessionData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 131,
							"name": "getSessionData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/sessionStore.ts",
									"line": 17,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 132,
									"name": "getSessionData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SessionData"
									}
								}
							]
						},
						{
							"id": 133,
							"name": "setSessionData",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/auth/src/sessionStore.ts",
									"line": 22,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 134,
									"name": "setSessionData",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 135,
											"name": "_session",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SessionData"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								128
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								136,
								131,
								133
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/auth/src/sessionStore.ts",
							"line": 9,
							"character": 29
						}
					]
				},
				{
					"id": 104,
					"name": "SessionOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 105,
							"name": "coreNode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/sessionData.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 108,
							"name": "etags",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/sessionData.ts",
									"line": 12,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "EtagMap"
							}
						},
						{
							"id": 109,
							"name": "localStorageKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/sessionData.ts",
									"line": 13,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 110,
							"name": "storeOptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/sessionData.ts",
									"line": 14,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 111,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 112,
											"name": "localStorageKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/auth/src/sessionData.ts",
													"line": 15,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												112
											]
										}
									]
								}
							}
						},
						{
							"id": 107,
							"name": "transitKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/sessionData.ts",
									"line": 11,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 106,
							"name": "userData",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/auth/src/sessionData.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 163,
								"name": "UserData"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								105,
								108,
								109,
								110,
								107,
								106
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/auth/src/sessionData.ts",
							"line": 8,
							"character": 31
						}
					]
				},
				{
					"id": 24,
					"name": "DEFAULT_BLOCKSTACK_HOST",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "This constant is used in the [[redirectToSignInWithAuthRequest]]"
					},
					"sources": [
						{
							"fileName": "packages/auth/src/constants.ts",
							"line": 12,
							"character": 36
						}
					],
					"type": {
						"type": "literal",
						"value": "https://browser.blockstack.org/auth"
					},
					"defaultValue": "'https://browser.blockstack.org/auth'"
				},
				{
					"id": 25,
					"name": "DEFAULT_PROFILE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"shortText": "Default user profile object"
					},
					"sources": [
						{
							"fileName": "packages/auth/src/constants.ts",
							"line": 17,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 26,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 28,
									"name": "@context",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'http://schema.org'"
								},
								{
									"id": 27,
									"name": "@type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'Person'"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										28,
										27
									]
								}
							]
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						4547,
						4548,
						4531,
						4546,
						4516
					]
				},
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						29
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2,
						127
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						104
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						24,
						25
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/auth/src/appConfig.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 256,
			"name": "bns",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# `@stacks/bns`\n\nA package for interacting with the [BNS contract](https://explorer.stacks.co/txid/SP000000000000000000002Q6VF78.bns?chain=mainnet)\non the Stacks blockchain.\n\n## What is BNS?\nThe [Blockchain Naming System](https://docs.blockstack.org/build-apps/references/bns)\n(BNS) is a network system that binds Stacks usernames to off-chain\nstate without relying on any central points of control.\n\n## Installation\n```\nnpm install --save @stacks/bns\n```\n\n## Example Usage\n\n```typescript\nimport { canRegisterName } from '@stacks/bns';\nimport { StacksTestnet } from '@stacks/network';\n\nconst network = new StacksMainnet();\n\nconst fullyQualifiedName = 'name.id';\nconst result = await canRegisterName({ fullyQualifiedName, network });\n```\n\n```typescript\nimport { buildRegisterNameTX } from '@stacks/bns';\nimport { StacksTestnet } from '@stacks/network';\n\nconst network = new StacksMainnet();\n\nconst name = 'name.id';\nconst salt =  'example-salt'\nconst zonefile =  'example-zonefile'\nconst publicKey = 'SPF0324DSC4K505TP6A8C7GAK4R95E38TGNZP7RE'\n\n// construct an unsigned bns register-name transaction\nconst unsignedTX = await buildRegisterNameTX({ name, salt, zonefile, publicKey, network });\n```\n"
			},
			"originalName": "bns/src",
			"children": [
				{
					"id": 297,
					"name": "BnsContractAddress",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isConst": true
					},
					"children": [
						{
							"id": 298,
							"name": "mainnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 31,
									"character": 9
								}
							],
							"defaultValue": "\"SP000000000000000000002Q6VF78\""
						},
						{
							"id": 299,
							"name": "testnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 32,
									"character": 9
								}
							],
							"defaultValue": "\"ST000000000000000000002AMW42H\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								298,
								299
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 30,
							"character": 36
						}
					]
				},
				{
					"id": 321,
					"name": "BnsContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 326,
							"name": "attachment",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 69,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 323,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 66,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ClarityValue"
								}
							}
						},
						{
							"id": 322,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 65,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 325,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 68,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 324,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 67,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								326,
								323,
								322,
								325,
								324
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 64,
							"character": 39
						}
					]
				},
				{
					"id": 327,
					"name": "BnsReadOnlyOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 329,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 88,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ClarityValue"
								}
							}
						},
						{
							"id": 328,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 87,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 331,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 90,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 330,
							"name": "senderAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 89,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								329,
								328,
								331,
								330
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 86,
							"character": 35
						}
					]
				},
				{
					"id": 332,
					"name": "CanRegisterNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Can register name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name (\"name.namespace\") to check",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 333,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 111,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 334,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 112,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								333,
								334
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 110,
							"character": 39
						}
					]
				},
				{
					"id": 338,
					"name": "GetNamePriceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Get name price options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name (\"name.namespace\") to get the price of",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 339,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 211,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 340,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 212,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								339,
								340
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 210,
							"character": 36
						}
					]
				},
				{
					"id": 335,
					"name": "GetNamespacePriceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Get namespace price options",
						"tags": [
							{
								"tag": "param",
								"text": "the namespace to get the price of",
								"param": "namespace"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 336,
							"name": "namespace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 160,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 337,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 161,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								336,
								337
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 159,
							"character": 41
						}
					]
				},
				{
					"id": 355,
					"name": "ImportNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Namespace name import options",
						"tags": [
							{
								"tag": "param",
								"text": "the namespace to import name into",
								"param": "namespace"
							},
							{
								"tag": "param",
								"text": "the name to import",
								"param": "name"
							},
							{
								"tag": "param",
								"text": "the address to register the name to",
								"param": "beneficiary"
							},
							{
								"tag": "param",
								"text": "the zonefile hash to register",
								"param": "zonefileHash"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 358,
							"name": "beneficiary",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 393,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 357,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 392,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 356,
							"name": "namespace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 391,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 361,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 396,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 360,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 395,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 359,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 394,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								358,
								357,
								356,
								361,
								360,
								359
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 390,
							"character": 34
						}
					]
				},
				{
					"id": 366,
					"name": "PreorderNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Preorder name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to preorder including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "salt used to generate the preorder name hash",
								"param": "salt"
							},
							{
								"tag": "param",
								"text": "amount of STX to burn for the registration",
								"param": "stxToBurn"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 367,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 484,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 371,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 488,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 370,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 487,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 368,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 485,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 369,
							"name": "stxToBurn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 486,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								367,
								371,
								370,
								368,
								369
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 483,
							"character": 36
						}
					]
				},
				{
					"id": 341,
					"name": "PreorderNamespaceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Preorder namespace options",
						"tags": [
							{
								"tag": "param",
								"text": "the namespace to preorder",
								"param": "namespace"
							},
							{
								"tag": "param",
								"text": "salt used to generate the preorder namespace hash",
								"param": "salt"
							},
							{
								"tag": "param",
								"text": "amount of STX to burn for the registration",
								"param": "stxToBurn"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 342,
							"name": "namespace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 268,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 346,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 272,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 345,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 271,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 343,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 344,
							"name": "stxToBurn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 270,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								342,
								346,
								345,
								343,
								344
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 267,
							"character": 41
						}
					]
				},
				{
					"id": 300,
					"name": "PriceFunction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 303,
							"name": "b1",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 44,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 312,
							"name": "b10",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 53,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 313,
							"name": "b11",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 54,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 314,
							"name": "b12",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 55,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 315,
							"name": "b13",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 56,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 316,
							"name": "b14",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 57,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 317,
							"name": "b15",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 58,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 318,
							"name": "b16",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 59,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 304,
							"name": "b2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 45,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 305,
							"name": "b3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 306,
							"name": "b4",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 307,
							"name": "b5",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 308,
							"name": "b6",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 309,
							"name": "b7",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 50,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 310,
							"name": "b8",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 311,
							"name": "b9",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 301,
							"name": "base",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 42,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 302,
							"name": "coefficient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 43,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 320,
							"name": "noVowelDiscount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 61,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 319,
							"name": "nonAlphaDiscount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 60,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								303,
								312,
								313,
								314,
								315,
								316,
								317,
								318,
								304,
								305,
								306,
								307,
								308,
								309,
								310,
								311,
								301,
								302,
								320,
								319
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 41,
							"character": 30
						}
					]
				},
				{
					"id": 362,
					"name": "ReadyNamespaceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Ready namespace options",
						"tags": [
							{
								"tag": "param",
								"text": "the namespace to ready",
								"param": "namespace"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 363,
							"name": "namespace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 442,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 365,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 444,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 364,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 443,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								363,
								365,
								364
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 441,
							"character": 38
						}
					]
				},
				{
					"id": 372,
					"name": "RegisterNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Register name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to preorder including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "salt used to generate the preorder name hash",
								"param": "salt"
							},
							{
								"tag": "param",
								"text": "the zonefile to register with the name",
								"param": "zonefile"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 373,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 536,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 377,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 540,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 376,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 539,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 374,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 537,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 375,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 538,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								373,
								377,
								376,
								374,
								375
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 535,
							"character": 36
						}
					]
				},
				{
					"id": 393,
					"name": "RenewNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Renew name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to renew including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "amount of STX to burn for the registration",
								"param": "stxToBurn"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "optionally choose a new owner address",
								"param": "newOwnerAddress"
							},
							{
								"tag": "param",
								"text": "optionally update the zonefile hash",
								"param": "zonefileHash"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 394,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 749,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 397,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 752,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 398,
							"name": "newOwnerAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 753,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 396,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 751,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 395,
							"name": "stxToBurn",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 750,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 399,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 754,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								394,
								397,
								398,
								396,
								395,
								399
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 748,
							"character": 33
						}
					]
				},
				{
					"id": 347,
					"name": "RevealNamespaceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Reveal namespace options",
						"tags": [
							{
								"tag": "param",
								"text": "the namespace to reveal",
								"param": "namespace"
							},
							{
								"tag": "param",
								"text": "salt used to generate the preorder namespace hash",
								"param": "salt"
							},
							{
								"tag": "param",
								"text": "an object containing the price function for the namespace",
								"param": "priceFunction"
							},
							{
								"tag": "param",
								"text": "the number of blocks name registrations are valid for in the namespace",
								"param": "lifeTime"
							},
							{
								"tag": "param",
								"text": "the STX address used for name imports",
								"param": "namespaceImportAddress"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 351,
							"name": "lifetime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 320,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 348,
							"name": "namespace",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 317,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 352,
							"name": "namespaceImportAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 321,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 354,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 323,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 350,
							"name": "priceFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 319,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 300,
								"name": "PriceFunction"
							}
						},
						{
							"id": 353,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 322,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 349,
							"name": "salt",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 318,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								351,
								348,
								352,
								354,
								350,
								353,
								349
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 316,
							"character": 39
						}
					]
				},
				{
					"id": 389,
					"name": "RevokeNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Revoke name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to revoke including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 390,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 703,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 392,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 705,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 391,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 704,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								390,
								392,
								391
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 702,
							"character": 34
						}
					]
				},
				{
					"id": 383,
					"name": "TransferNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Transfer name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to transfer including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "the recipient address of the name transfer",
								"param": "newOwnerAddress"
							},
							{
								"tag": "param",
								"text": "the optional zonefile to register with the name",
								"param": "zonefile"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 384,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 641,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 387,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 644,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 385,
							"name": "newOwnerAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 642,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 386,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 643,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 388,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 645,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								384,
								387,
								385,
								386,
								388
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 640,
							"character": 36
						}
					]
				},
				{
					"id": 378,
					"name": "UpdateNameOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Update name options",
						"tags": [
							{
								"tag": "param",
								"text": "the fully qualified name to update including the\n                                       namespace (myName.id)",
								"param": "fullyQualifiedName"
							},
							{
								"tag": "param",
								"text": "the zonefile to register with the name",
								"param": "zonefile"
							},
							{
								"tag": "param",
								"text": "the private key to sign the transaction",
								"param": "publicKey"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network to use\n",
								"param": "network"
							}
						]
					},
					"children": [
						{
							"id": 379,
							"name": "fullyQualifiedName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 592,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 382,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 595,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 381,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 594,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 380,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/bns/src/index.ts",
									"line": 593,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								379,
								382,
								381,
								380
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 591,
							"character": 34
						}
					]
				},
				{
					"id": 296,
					"name": "BNS_CONTRACT_NAME",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 28,
							"character": 30
						}
					],
					"type": {
						"type": "literal",
						"value": "bns"
					},
					"defaultValue": "'bns'"
				},
				{
					"id": 408,
					"name": "bufferCVFromString",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/bns/src/utils.ts",
							"line": 33,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 409,
							"name": "bufferCVFromString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 410,
									"name": "string",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BufferCV"
							}
						}
					]
				},
				{
					"id": 272,
					"name": "buildImportNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 409,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 273,
							"name": "buildImportNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a namespace name import transaction.\nAn optional step in namespace registration.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 274,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 355,
										"name": "ImportNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 278,
					"name": "buildPreorderNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 502,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "buildPreorderNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name preorder transaction.\nFirst step in registering a name. This transaction does not reveal the name that is\nabout to be registered. And it sets the amount of STX to be burned for the registration.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 280,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 366,
										"name": "PreorderNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 266,
					"name": "buildPreorderNamespaceTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 286,
							"character": 46
						}
					],
					"signatures": [
						{
							"id": 267,
							"name": "buildPreorderNamespaceTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a namespace preorder transaction.\nFirst step in registering a namespace. This transaction does not reveal the namespace that is\nabout to be registered. And it sets the amount of STX to be burned for the registration.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 268,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 341,
										"name": "PreorderNamespaceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 275,
					"name": "buildReadyNamespaceTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 458,
							"character": 43
						}
					],
					"signatures": [
						{
							"id": 276,
							"name": "buildReadyNamespaceTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a ready namespace transaction.\nFinal step in namespace registration. This completes the namespace registration and\nmakes the namespace available for name registrations.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 277,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 362,
										"name": "ReadyNamespaceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 281,
					"name": "buildRegisterNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 553,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 282,
							"name": "buildRegisterNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name registration transaction.\nSecond and final step in registering a name.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 283,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 372,
										"name": "RegisterNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 293,
					"name": "buildRenewNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 767,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 294,
							"name": "buildRenewNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name renew transaction.\nThis renews a name registration.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 295,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 393,
										"name": "RenewNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 269,
					"name": "buildRevealNamespaceTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 336,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 270,
							"name": "buildRevealNamespaceTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a namespace reveal transaction.\nSecond step in registering a namespace.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 271,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 347,
										"name": "RevealNamespaceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 290,
					"name": "buildRevokeNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 718,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 291,
							"name": "buildRevokeNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name revoke transaction.\nThis revokes a name registration.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 292,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 389,
										"name": "RevokeNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 287,
					"name": "buildTransferNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 662,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 288,
							"name": "buildTransferNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name transfer transaction.\nThis changes the owner of the registered name.",
								"text": "Since the underlying NFT will be transferred,\nyou will be required to add a post-condition to this\ntransaction before broadcasting it.\n\nResolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 289,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 383,
										"name": "TransferNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 284,
					"name": "buildUpdateNameTx",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 608,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 285,
							"name": "buildUpdateNameTx",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a name update transaction.\nThis changes the zonefile for the registered name.",
								"text": "Resolves to the generated StacksTransaction\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 286,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 378,
										"name": "UpdateNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 257,
					"name": "canRegisterName",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 123,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 258,
							"name": "canRegisterName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Check if name can be registered",
								"returns": "that resolves to true if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 259,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 332,
										"name": "CanRegisterNameOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 401,
					"name": "decodeFQN",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/utils.ts",
							"line": 6,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 402,
							"name": "decodeFQN",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 403,
									"name": "fqdn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 404,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 405,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/bns/src/utils.ts",
													"line": 9,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 406,
											"name": "namespace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/bns/src/utils.ts",
													"line": 10,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 407,
											"name": "subdomain",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/bns/src/utils.ts",
													"line": 11,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												405,
												406,
												407
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/bns/src/utils.ts",
											"line": 8,
											"character": 2
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 263,
					"name": "getNamePrice",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 223,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 264,
							"name": "getNamePrice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get price of name registration in microstacks",
								"returns": "that resolves to a BN object number of microstacks if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 265,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 338,
										"name": "GetNamePriceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BN"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 260,
					"name": "getNamespacePrice",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/bns/src/index.ts",
							"line": 172,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 261,
							"name": "getNamespacePrice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Get price of namespace registration in microstacks",
								"returns": "that resolves to a BN object number of microstacks if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 262,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 335,
										"name": "GetNamespacePriceOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BN"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 414,
					"name": "getZonefileHash",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/bns/src/utils.ts",
							"line": 37,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 415,
							"name": "getZonefileHash",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 416,
									"name": "zonefile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 411,
					"name": "uintCVFromBN",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/bns/src/utils.ts",
							"line": 35,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 412,
							"name": "uintCVFromBN",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 413,
									"name": "int",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BN"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "UIntCV"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						297
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						321,
						327,
						332,
						338,
						335,
						355,
						366,
						341,
						300,
						362,
						372,
						393,
						347,
						389,
						383,
						378
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						296
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						408,
						272,
						278,
						266,
						275,
						281,
						293,
						269,
						290,
						287,
						284,
						257,
						401,
						263,
						260,
						414,
						411
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/bns/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 417,
			"name": "cli",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/cli\n\nCommand line interface to interact with auth, storage and Stacks transactions.\n\n## Installation\n\n```\nnpm install @stacks/cli\n```\n\n## Usage\n\nSee [documentation](https://docs.blockstack.org/references/stacks-cli)\n"
			},
			"originalName": "cli/src/argparse",
			"children": [
				{
					"id": 750,
					"name": "CLINetworkAdapter",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 751,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 752,
									"name": "new CLINetworkAdapter",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 753,
											"name": "network",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BlockstackNetwork"
											}
										},
										{
											"id": 754,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 723,
												"name": "CLI_NETWORK_OPTS"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								}
							]
						},
						{
							"id": 755,
							"name": "consensusHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 49,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 756,
							"name": "feeRate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 50,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 760,
							"name": "gracePeriod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 54,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 764,
							"name": "legacyNetwork",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 58,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "BlockstackNetwork"
							}
						},
						{
							"id": 757,
							"name": "namespaceBurnAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 51,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 762,
							"name": "nodeAPIUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 56,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 763,
							"name": "optAlwaysCoerceAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 57,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 758,
							"name": "priceToPay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 52,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 759,
							"name": "priceUnits",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 53,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 761,
							"name": "receiveFeesPeriod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 809,
							"name": "broadcastTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 317,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 810,
									"name": "broadcastTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 811,
											"name": "tx",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 812,
							"name": "broadcastZoneFile",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 321,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 813,
									"name": "broadcastZoneFile",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 814,
											"name": "zonefile",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 815,
											"name": "txid",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 802,
							"name": "coerceAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 309,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 803,
									"name": "coerceAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 804,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 772,
							"name": "coerceMainnetAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 106,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 773,
									"name": "coerceMainnetAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 774,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 805,
							"name": "getAccountHistoryPage",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 313,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 806,
									"name": "getAccountHistoryPage",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 807,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 808,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 795,
							"name": "getBlockchainNameRecord",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 254,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 796,
									"name": "getBlockchainNameRecord",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 797,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 777,
							"name": "getConsensusHash",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 132,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 778,
									"name": "getConsensusHash",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 775,
							"name": "getFeeRate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 120,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 776,
									"name": "getFeeRate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 779,
							"name": "getGracePeriod",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 140,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 780,
									"name": "getGracePeriod",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 798,
							"name": "getNameHistory",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 277,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 799,
									"name": "getNameHistory",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 800,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 801,
											"name": "page",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												],
												"name": "Record"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 792,
							"name": "getNameInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 234,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 793,
									"name": "getNameInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 794,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 737,
												"name": "NameInfoType"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 781,
							"name": "getNamePrice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 147,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 782,
									"name": "getNamePrice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 783,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 734,
												"name": "PriceType"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 816,
							"name": "getNamesOwned",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 325,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 817,
									"name": "getNamesOwned",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 818,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 787,
							"name": "getNamespaceBurnAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 193,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 788,
									"name": "getNamespaceBurnAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 789,
											"name": "namespace",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 790,
											"name": "useCLI",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "true"
										},
										{
											"id": 791,
											"name": "receiveFeesPeriod",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "-1"
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 784,
							"name": "getNamespacePrice",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 170,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 785,
									"name": "getNamespacePrice",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 786,
											"name": "namespaceID",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 734,
												"name": "PriceType"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 765,
							"name": "isMainnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 94,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 766,
									"name": "isMainnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 767,
							"name": "isTestnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 98,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 768,
									"name": "isTestnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 769,
							"name": "setCoerceMainnetAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 102,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 770,
									"name": "setCoerceMainnetAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 771,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								751
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								755,
								756,
								760,
								764,
								757,
								762,
								763,
								758,
								759,
								761
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								809,
								812,
								802,
								772,
								805,
								795,
								777,
								775,
								779,
								798,
								792,
								781,
								816,
								787,
								784,
								765,
								767,
								769
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 48,
							"character": 30
						}
					]
				},
				{
					"id": 976,
					"name": "MultiSigKeySigner",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 977,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 978,
									"name": "new MultiSigKeySigner",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 979,
											"name": "redeemScript",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 980,
											"name": "privateKeys",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 976,
										"name": "MultiSigKeySigner"
									},
									"overwrites": {
										"type": "reference",
										"name": "CLITransactionSigner.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CLITransactionSigner.constructor"
							}
						},
						{
							"id": 992,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 58,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CLITransactionSigner.address"
							}
						},
						{
							"id": 993,
							"name": "isComplete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 59,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CLITransactionSigner.isComplete"
							}
						},
						{
							"id": 983,
							"name": "m",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 85,
									"character": 3
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 982,
							"name": "privateKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 84,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 981,
							"name": "redeemScript",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 83,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 984,
							"name": "getAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 107,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 985,
									"name": "getAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"name": "CLITransactionSigner.getAddress"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CLITransactionSigner.getAddress"
							}
						},
						{
							"id": 986,
							"name": "signTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 111,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 987,
									"name": "signTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 988,
											"name": "txIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TransactionBuilder"
											}
										},
										{
											"id": 989,
											"name": "signingIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"name": "CLITransactionSigner.signTransaction"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CLITransactionSigner.signTransaction"
							}
						},
						{
							"id": 990,
							"name": "signerVersion",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 121,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 991,
									"name": "signerVersion",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"overwrites": {
										"type": "reference",
										"name": "CLITransactionSigner.signerVersion"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CLITransactionSigner.signerVersion"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								977
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								992,
								993,
								983,
								982,
								981
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								984,
								986,
								990
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 82,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CLITransactionSigner"
						}
					]
				},
				{
					"id": 962,
					"name": "NullSigner",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 963,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 964,
									"name": "new NullSigner",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 965,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "''"
										}
									],
									"type": {
										"type": "reference",
										"id": 962,
										"name": "NullSigner"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CLITransactionSigner.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CLITransactionSigner.constructor"
							}
						},
						{
							"id": 966,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 58,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CLITransactionSigner.address"
							}
						},
						{
							"id": 967,
							"name": "isComplete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 59,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CLITransactionSigner.isComplete"
							}
						},
						{
							"id": 968,
							"name": "getAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 66,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 969,
									"name": "getAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CLITransactionSigner.getAddress"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CLITransactionSigner.getAddress"
							}
						},
						{
							"id": 970,
							"name": "signTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 70,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 971,
									"name": "signTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 972,
											"name": "_txIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TransactionBuilder"
											}
										},
										{
											"id": 973,
											"name": "_signingIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CLITransactionSigner.signTransaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CLITransactionSigner.signTransaction"
							}
						},
						{
							"id": 974,
							"name": "signerVersion",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 75,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 975,
									"name": "signerVersion",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "CLITransactionSigner.signerVersion"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "CLITransactionSigner.signerVersion"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								963
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								966,
								967
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								968,
								970,
								974
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 80,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CLITransactionSigner"
						}
					]
				},
				{
					"id": 1020,
					"name": "SafetyError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1021,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1022,
									"name": "new SafetyError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1023,
											"name": "safetyErrors",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AnyJson"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1020,
										"name": "SafetyError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						},
						{
							"id": 1024,
							"name": "safetyErrors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 214,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "AnyJson"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1021
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1024
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 213,
							"character": 24
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				},
				{
					"id": 994,
					"name": "SegwitP2SHKeySigner",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 995,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 996,
									"name": "new SegwitP2SHKeySigner",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 997,
											"name": "redeemScript",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 998,
											"name": "witnessScript",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 999,
											"name": "m",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1000,
											"name": "privateKeys",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 994,
										"name": "SegwitP2SHKeySigner"
									},
									"overwrites": {
										"type": "reference",
										"name": "CLITransactionSigner.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CLITransactionSigner.constructor"
							}
						},
						{
							"id": 1018,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 58,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CLITransactionSigner.address"
							}
						},
						{
							"id": 1019,
							"name": "isComplete",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 59,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "CLITransactionSigner.isComplete"
							}
						},
						{
							"id": 1004,
							"name": "m",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 130,
									"character": 3
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1003,
							"name": "privateKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 129,
									"character": 13
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1001,
							"name": "redeemScript",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 127,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 1002,
							"name": "witnessScript",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 128,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						},
						{
							"id": 1007,
							"name": "findUTXO",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 150,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 1008,
									"name": "findUTXO",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1009,
											"name": "txIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TransactionBuilder"
											}
										},
										{
											"id": 1010,
											"name": "signingIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1011,
											"name": "utxos",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 957,
													"name": "UTXO"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 957,
										"name": "UTXO"
									}
								}
							]
						},
						{
							"id": 1005,
							"name": "getAddress",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 146,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 1006,
									"name": "getAddress",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"name": "CLITransactionSigner.getAddress"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CLITransactionSigner.getAddress"
							}
						},
						{
							"id": 1012,
							"name": "signTransaction",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 171,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 1013,
									"name": "signTransaction",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1014,
											"name": "txIn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TransactionBuilder"
											}
										},
										{
											"id": 1015,
											"name": "signingIndex",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									},
									"overwrites": {
										"type": "reference",
										"name": "CLITransactionSigner.signTransaction"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CLITransactionSigner.signTransaction"
							}
						},
						{
							"id": 1016,
							"name": "signerVersion",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 208,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1017,
									"name": "signerVersion",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"overwrites": {
										"type": "reference",
										"name": "CLITransactionSigner.signerVersion"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "CLITransactionSigner.signerVersion"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								995
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1018,
								1019,
								1004,
								1003,
								1001,
								1002
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1007,
								1005,
								1012,
								1016
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 126,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "CLITransactionSigner"
						}
					]
				},
				{
					"id": 491,
					"name": "CLI_CONFIG_TYPE",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 498,
							"name": "bitcoindPassword",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 68,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 497,
							"name": "bitcoindUsername",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 67,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 492,
							"name": "blockstackAPIUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 62,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 493,
							"name": "blockstackNodeUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 63,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 494,
							"name": "broadcastServiceUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 64,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 496,
							"name": "logConfig",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 66,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 484,
								"name": "CLI_LOG_CONFIG_TYPE"
							}
						},
						{
							"id": 495,
							"name": "utxoServiceUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 65,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								498,
								497,
								492,
								493,
								494,
								496,
								495
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 61,
							"character": 32
						}
					]
				},
				{
					"id": 484,
					"name": "CLI_LOG_CONFIG_TYPE",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 489,
							"name": "colorize",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 57,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 486,
							"name": "handleExceptions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 54,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 490,
							"name": "json",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 58,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 485,
							"name": "level",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 53,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 488,
							"name": "stringify",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 56,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 487,
							"name": "timestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 55,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								489,
								486,
								490,
								485,
								488,
								487
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 52,
							"character": 36
						}
					]
				},
				{
					"id": 723,
					"name": "CLI_NETWORK_OPTS",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 731,
							"name": "altAPIUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 20,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 732,
							"name": "altTransactionBroadcasterUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 21,
									"character": 30
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 724,
							"name": "consensusHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 13,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 725,
							"name": "feeRate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 14,
									"character": 9
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 730,
							"name": "gracePeriod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 19,
									"character": 13
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 726,
							"name": "namespaceBurnAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 15,
									"character": 22
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 733,
							"name": "nodeAPIUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 22,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 727,
							"name": "priceToPay",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 16,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 728,
							"name": "priceUnits",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 17,
									"character": 12
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 729,
							"name": "receiveFeesPeriod",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								731,
								732,
								724,
								725,
								730,
								726,
								733,
								727,
								728,
								729
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 12,
							"character": 33
						}
					]
				},
				{
					"id": 514,
					"name": "CheckArgsFailType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 517,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 3295,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 516,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 3294,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 515,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 3293,
									"character": 9
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						},
						{
							"id": 518,
							"name": "usage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 3296,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								517,
								516,
								515,
								518
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3292,
							"character": 34
						}
					]
				},
				{
					"id": 510,
					"name": "CheckArgsSuccessType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 513,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 3289,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 512,
							"name": "command",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 3288,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 511,
							"name": "success",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/argparse.ts",
									"line": 3287,
									"character": 9
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								513,
								512,
								511
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3286,
							"character": 37
						}
					]
				},
				{
					"id": 1029,
					"name": "ClarityFunctionArg",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1030,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 797,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1031,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 798,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "ClarityAbiType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1030,
								1031
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 796,
							"character": 35
						}
					]
				},
				{
					"id": 1025,
					"name": "IDAppKeys",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1027,
							"name": "appPrivateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 758,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1028,
							"name": "mnemonic",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 759,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1026,
							"name": "ownerPrivateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 757,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1027,
								1028,
								1026
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 756,
							"character": 26
						}
					]
				},
				{
					"id": 548,
					"name": "NamedIdentityType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 550,
							"name": "idAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/auth.ts",
									"line": 68,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 552,
							"name": "index",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/auth.ts",
									"line": 70,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 549,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/auth.ts",
									"line": 67,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 551,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/auth.ts",
									"line": 69,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 553,
							"name": "profile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/auth.ts",
									"line": 72,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						},
						{
							"id": 554,
							"name": "profileUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/auth.ts",
									"line": 73,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								550,
								552,
								549,
								551,
								553,
								554
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 66,
							"character": 34
						}
					]
				},
				{
					"id": 734,
					"name": "PriceType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 736,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 27,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 735,
							"name": "units",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 26,
									"character": 7
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "BTC"
									},
									{
										"type": "literal",
										"value": "STACKS"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								736,
								735
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 25,
							"character": 26
						}
					]
				},
				{
					"id": 957,
					"name": "UTXO",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 959,
							"name": "confirmations",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 52,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 960,
							"name": "tx_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 53,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 961,
							"name": "tx_output_n",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 54,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 958,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/cli/src/utils.ts",
									"line": 51,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								959,
								960,
								961,
								958
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 50,
							"character": 21
						}
					]
				},
				{
					"id": 560,
					"name": "WhoisInfoType",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 561,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 131,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 563,
							"name": "block_renewed_at",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 133,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 562,
							"name": "blockchain",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 132,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 564,
							"name": "did",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 134,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 565,
							"name": "expire_block",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 135,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 566,
							"name": "grace_period",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 136,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 567,
							"name": "last_transaction_height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 137,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 568,
							"name": "last_txid",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 138,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 569,
							"name": "owner_address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 139,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 570,
							"name": "owner_script",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 140,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 571,
							"name": "renewal_deadline",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 141,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 572,
							"name": "resolver",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 142,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 573,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 143,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 574,
							"name": "zonefile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 144,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 575,
							"name": "zonefile_hash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/cli/src/cli.ts",
									"line": 145,
									"character": 15
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								561,
								563,
								562,
								564,
								565,
								566,
								567,
								568,
								569,
								570,
								571,
								572,
								573,
								574,
								575
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 130,
							"character": 30
						}
					]
				},
				{
					"id": 707,
					"name": "AppKeyInfoType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 48,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 708,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 709,
									"name": "keyInfo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 49,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 710,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 712,
													"name": "address",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/cli/src/keys.ts",
															"line": 51,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 711,
													"name": "privateKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/cli/src/keys.ts",
															"line": 50,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														712,
														711
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 49,
													"character": 10
												}
											]
										}
									}
								},
								{
									"id": 713,
									"name": "legacyKeyInfo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 53,
											"character": 15
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 714,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 716,
													"name": "address",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/cli/src/keys.ts",
															"line": 55,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 715,
													"name": "privateKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/cli/src/keys.ts",
															"line": 54,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														716,
														715
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 53,
													"character": 16
												}
											]
										}
									}
								},
								{
									"id": 717,
									"name": "ownerKeyIndex",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 57,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										709,
										713,
										717
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 48,
									"character": 28
								}
							]
						}
					}
				},
				{
					"id": 737,
					"name": "NameInfoType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 30,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 738,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 739,
									"name": "address",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 31,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 740,
									"name": "blockchain",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 32,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 741,
									"name": "did",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 33,
											"character": 5
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 742,
									"name": "expire_block",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 34,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 743,
									"name": "grace_period",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 35,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 744,
									"name": "last_txid",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 36,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 745,
									"name": "renewal_deadline",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 37,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 746,
									"name": "resolver",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 38,
											"character": 10
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 747,
									"name": "status",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 39,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 748,
									"name": "zonefile",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 40,
											"character": 10
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 749,
									"name": "zonefile_hash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/cli/src/network.ts",
											"line": 41,
											"character": 15
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										739,
										740,
										741,
										742,
										743,
										744,
										745,
										746,
										747,
										748,
										749
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/cli/src/network.ts",
									"line": 30,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 686,
					"name": "OwnerKeyInfoType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 24,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 687,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 691,
									"name": "idAddress",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 28,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 690,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 27,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 688,
									"name": "privateKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 25,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 689,
									"name": "version",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 26,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										691,
										690,
										688,
										689
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 24,
									"character": 30
								}
							]
						}
					}
				},
				{
					"id": 692,
					"name": "PaymentKeyInfoType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 31,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 693,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 695,
									"name": "address",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 33,
											"character": 9
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 696,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 697,
													"name": "BTC",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/cli/src/keys.ts",
															"line": 34,
															"character": 7
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 698,
													"name": "STACKS",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/cli/src/keys.ts",
															"line": 35,
															"character": 10
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														697,
														698
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 33,
													"character": 10
												}
											]
										}
									}
								},
								{
									"id": 699,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 37,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 694,
									"name": "privateKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 32,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										695,
										699,
										694
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 31,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 700,
					"name": "StacksKeyInfoType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 40,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 701,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 703,
									"name": "address",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 42,
											"character": 9
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 704,
									"name": "btcAddress",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 43,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 706,
									"name": "index",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 45,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 702,
									"name": "privateKey",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 41,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 705,
									"name": "wif",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/cli/src/keys.ts",
											"line": 44,
											"character": 5
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										703,
										704,
										706,
										702,
										705
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/cli/src/keys.ts",
									"line": 40,
									"character": 31
								}
							]
						}
					}
				},
				{
					"id": 466,
					"name": "ADDRESS_CHARS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 9,
							"character": 26
						}
					],
					"type": {
						"type": "literal",
						"value": "[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{1,35}"
					},
					"defaultValue": "'[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{1,35}'"
				},
				{
					"id": 468,
					"name": "ADDRESS_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 13,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 483,
					"name": "BOOLEAN_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 50,
							"character": 28
						}
					],
					"type": {
						"type": "literal",
						"value": "^(0|1|true|false)$"
					},
					"defaultValue": "'^(0|1|true|false)$'"
				},
				{
					"id": 467,
					"name": "C32_ADDRESS_CHARS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 11,
							"character": 30
						}
					],
					"type": {
						"type": "literal",
						"value": "[0123456789ABCDEFGHJKMNPQRSTVWXYZ]+"
					},
					"defaultValue": "'[0123456789ABCDEFGHJKMNPQRSTVWXYZ]+'"
				},
				{
					"id": 503,
					"name": "CLI_ARGS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 133,
							"character": 21
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 504,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 507,
									"name": "additionalProperties",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 506,
									"name": "properties",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CLI_PROP"
									},
									"defaultValue": "..."
								},
								{
									"id": 508,
									"name": "strict",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 505,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'object'"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										507,
										506,
										508,
										505
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 499,
					"name": "DEFAULT_CONFIG_PATH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 108,
							"character": 32
						}
					],
					"type": {
						"type": "literal",
						"value": "~/.blockstack-cli.conf"
					},
					"defaultValue": "'~/.blockstack-cli.conf'"
				},
				{
					"id": 500,
					"name": "DEFAULT_CONFIG_REGTEST_PATH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 109,
							"character": 40
						}
					],
					"type": {
						"type": "literal",
						"value": "~/.blockstack-cli-regtest.conf"
					},
					"defaultValue": "'~/.blockstack-cli-regtest.conf'"
				},
				{
					"id": 501,
					"name": "DEFAULT_CONFIG_TESTNET_PATH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 110,
							"character": 40
						}
					],
					"type": {
						"type": "literal",
						"value": "~/.blockstack-cli-testnet.conf"
					},
					"defaultValue": "'~/.blockstack-cli-testnet.conf'"
				},
				{
					"id": 502,
					"name": "DEFAULT_MAX_ID_SEARCH_INDEX",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 112,
							"character": 40
						}
					],
					"type": {
						"type": "literal",
						"value": 256
					},
					"defaultValue": "256"
				},
				{
					"id": 685,
					"name": "DERIVATION_PATH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 22,
							"character": 28
						}
					],
					"type": {
						"type": "literal",
						"value": "m/44'/5757'/0'/0/0"
					},
					"defaultValue": "\"m/44'/5757'/0'/0/0\""
				},
				{
					"id": 469,
					"name": "ID_ADDRESS_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 15,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 478,
					"name": "INT_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 40,
							"character": 24
						}
					],
					"type": {
						"type": "literal",
						"value": "^-?[0-9]+$"
					},
					"defaultValue": "'^-?[0-9]+$'"
				},
				{
					"id": 465,
					"name": "NAMESPACE_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 7,
							"character": 30
						}
					],
					"type": {
						"type": "literal",
						"value": "^([0-9a-z_-]{1,19})$"
					},
					"defaultValue": "'^([0-9a-z_-]{1,19})$'"
				},
				{
					"id": 464,
					"name": "NAME_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 5,
							"character": 25
						}
					],
					"type": {
						"type": "literal",
						"value": "^([0-9a-z_.+-]{3,37})$"
					},
					"defaultValue": "'^([0-9a-z_.+-]{3,37})$'"
				},
				{
					"id": 474,
					"name": "PRIVATE_KEY_MULTISIG_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 29,
							"character": 41
						}
					],
					"type": {
						"type": "literal",
						"value": "^([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$"
					},
					"defaultValue": "'^([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$'"
				},
				{
					"id": 473,
					"name": "PRIVATE_KEY_NOSIGN_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 26,
							"character": 39
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 471,
					"name": "PRIVATE_KEY_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 20,
							"character": 32
						}
					],
					"type": {
						"type": "literal",
						"value": "^([0-9a-f]{64,66})$"
					},
					"defaultValue": "'^([0-9a-f]{64,66})$'"
				},
				{
					"id": 476,
					"name": "PRIVATE_KEY_PATTERN_ANY",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 36,
							"character": 36
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 475,
					"name": "PRIVATE_KEY_SEGWIT_P2SH_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 32,
							"character": 44
						}
					],
					"type": {
						"type": "literal",
						"value": "^segwit:p2sh:([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$"
					},
					"defaultValue": "'^segwit:p2sh:([0-9]+),([0-9a-f]{64,66},)*([0-9a-f]{64,66})$'"
				},
				{
					"id": 472,
					"name": "PRIVATE_KEY_UNCOMPRESSED_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 23,
							"character": 45
						}
					],
					"type": {
						"type": "literal",
						"value": "^([0-9a-f]{64})$"
					},
					"defaultValue": "'^([0-9a-f]{64})$'"
				},
				{
					"id": 477,
					"name": "PUBLIC_KEY_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 38,
							"character": 31
						}
					],
					"type": {
						"type": "literal",
						"value": "^([0-9a-f]{66,130})$"
					},
					"defaultValue": "'^([0-9a-f]{66,130})$'"
				},
				{
					"id": 541,
					"name": "SIGNIN_CSS",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 22,
							"character": 23
						}
					],
					"type": {
						"type": "literal",
						"value": "\nh1 { \n  font-family: monospace; \n  font-size: 24px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 700; \n  line-height: 26.4px; \n} \nh3 { \n  font-family: monospace; \n  font-size: 14px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 700; \n  line-height: 15.4px; \n}\np { \n  font-family: monospace; \n  font-size: 14px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 400; \n  line-height: 20px; \n}\nb {\n  background-color: #e8e8e8;\n}\npre { \n  font-family: monospace; \n  font-size: 13px; \n  font-style: normal; \n  font-variant: normal; \n  font-weight: 400; \n  line-height: 18.5714px;\n}"
					},
					"defaultValue": "..."
				},
				{
					"id": 543,
					"name": "SIGNIN_DESC",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 60,
							"character": 24
						}
					],
					"type": {
						"type": "literal",
						"value": "<p>Sign-in request for <b>\"{appName}\"</b></p>"
					},
					"defaultValue": "'<p>Sign-in request for <b>\"{appName}\"</b></p>'"
				},
				{
					"id": 546,
					"name": "SIGNIN_FMT_ID",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 63,
							"character": 26
						}
					],
					"type": {
						"type": "literal",
						"value": "<p><a href=\"{authRedirect}\">{idAddress}</a> (anonymous)</p>"
					},
					"defaultValue": "'<p><a href=\"{authRedirect}\">{idAddress}</a> (anonymous)</p>'"
				},
				{
					"id": 545,
					"name": "SIGNIN_FMT_NAME",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 62,
							"character": 28
						}
					],
					"type": {
						"type": "literal",
						"value": "<p><a href=\"{authRedirect}\">{blockstackID}</a> ({idAddress})</p>"
					},
					"defaultValue": "'<p><a href=\"{authRedirect}\">{blockstackID}</a> ({idAddress})</p>'"
				},
				{
					"id": 547,
					"name": "SIGNIN_FOOTER",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 64,
							"character": 26
						}
					],
					"type": {
						"type": "literal",
						"value": "</body></html>"
					},
					"defaultValue": "'</body></html>'"
				},
				{
					"id": 542,
					"name": "SIGNIN_HEADER",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 59,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 544,
					"name": "SIGNIN_SCOPES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 61,
							"character": 26
						}
					],
					"type": {
						"type": "literal",
						"value": "<p>Requested scopes: <b>\"{appScopes}\"</b></p>"
					},
					"defaultValue": "'<p>Requested scopes: <b>\"{appScopes}\"</b></p>'"
				},
				{
					"id": 470,
					"name": "STACKS_ADDRESS_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 17,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 683,
					"name": "STRENGTH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 20,
							"character": 21
						}
					],
					"type": {
						"type": "literal",
						"value": 128
					},
					"defaultValue": "128"
				},
				{
					"id": 684,
					"name": "STX_WALLET_COMPATIBLE_SEED_STRENGTH",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 21,
							"character": 48
						}
					],
					"type": {
						"type": "literal",
						"value": 256
					},
					"defaultValue": "256"
				},
				{
					"id": 481,
					"name": "SUBDOMAIN_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 46,
							"character": 30
						}
					],
					"type": {
						"type": "literal",
						"value": "^([0-9a-z_+-]{1,37}).([0-9a-z_.+-]{3,37})$"
					},
					"defaultValue": "'^([0-9a-z_+-]{1,37}).([0-9a-z_.+-]{3,37})$'"
				},
				{
					"id": 482,
					"name": "TXID_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 48,
							"character": 25
						}
					],
					"type": {
						"type": "literal",
						"value": "^([0-9a-f]{64})$"
					},
					"defaultValue": "'^([0-9a-f]{64})$'"
				},
				{
					"id": 480,
					"name": "URL_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 44,
							"character": 24
						}
					],
					"type": {
						"type": "literal",
						"value": "^http[s]?://.+$"
					},
					"defaultValue": "'^http[s]?://.+$'"
				},
				{
					"id": 509,
					"name": "USAGE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 2757,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 479,
					"name": "ZONEFILE_HASH_PATTERN",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 42,
							"character": 34
						}
					],
					"type": {
						"type": "literal",
						"value": "^([0-9a-f]{40})$"
					},
					"defaultValue": "'^([0-9a-f]{40})$'"
				},
				{
					"id": 576,
					"name": "testables",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1923,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 577,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 578,
											"name": "addressConvert",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 579,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 580,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 581,
																	"name": "network",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 750,
																		"name": "CLINetworkAdapter"
																	}
																},
																{
																	"id": 582,
																	"name": "args",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																],
																"name": "Promise"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												578
											]
										}
									]
								}
							}
						]
					},
					"defaultValue": "..."
				},
				{
					"id": 558,
					"name": "CLIMain",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 1764,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 559,
							"name": "CLIMain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 437,
					"name": "CLIOptAsBool",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3161,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 438,
							"name": "CLIOptAsBool",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 439,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CLI_OPTS"
									}
								},
								{
									"id": 440,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 433,
					"name": "CLIOptAsString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3151,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 434,
							"name": "CLIOptAsString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 435,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CLI_OPTS"
									}
								},
								{
									"id": 436,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 441,
					"name": "CLIOptAsStringArray",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3179,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 442,
							"name": "CLIOptAsStringArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 443,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CLI_OPTS"
									}
								},
								{
									"id": 444,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					]
				},
				{
					"id": 835,
					"name": "JSONStringify",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 385,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 836,
							"name": "JSONStringify",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 837,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AnyJson"
									}
								},
								{
									"id": 838,
									"name": "stderr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 946,
					"name": "answerToClarityValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 866,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 947,
							"name": "answerToClarityValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 948,
									"name": "answer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 949,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1029,
										"name": "ClarityFunctionArg"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 939,
					"name": "argToPrompt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 801,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 940,
							"name": "argToPrompt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 941,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1029,
										"name": "ClarityFunctionArg"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "InquirerPrompt"
							}
						}
					]
				},
				{
					"id": 876,
					"name": "broadcastTransactionAndZoneFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 511,
							"character": 53
						}
					],
					"signatures": [
						{
							"id": 877,
							"name": "broadcastTransactionAndZoneFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 878,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 879,
									"name": "tx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 880,
									"name": "zonefile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 881,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 883,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "'Failed to broadcast zone file'"
														},
														{
															"id": 882,
															"name": "status",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "false"
														},
														{
															"id": 884,
															"name": "txid",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																883,
																882,
																884
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 885,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 888,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "undefined"
															},
															"defaultValue": "..."
														},
														{
															"id": 886,
															"name": "status",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "true"
														},
														{
															"id": 887,
															"name": "txid",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																888,
																886,
																887
															]
														}
													]
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 889,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 891,
															"name": "error",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "'Caught exception sending transaction or zone file'"
														},
														{
															"id": 892,
															"name": "message",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															},
															"defaultValue": "..."
														},
														{
															"id": 893,
															"name": "stacktrace",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															},
															"defaultValue": "..."
														},
														{
															"id": 890,
															"name": "status",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"defaultValue": "false"
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																891,
																892,
																893,
																890
															]
														}
													]
												}
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 849,
					"name": "canonicalPrivateKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 431,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 850,
							"name": "canonicalPrivateKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 851,
									"name": "privkey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 457,
					"name": "checkArgs",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3299,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 458,
							"name": "checkArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 459,
									"name": "argList",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 510,
										"name": "CheckArgsSuccessType"
									},
									{
										"type": "reference",
										"id": 514,
										"name": "CheckArgsFailType"
									}
								]
							}
						}
					]
				},
				{
					"id": 858,
					"name": "checkUrl",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 457,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 859,
							"name": "checkUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 860,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 832,
					"name": "decodePrivateKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 350,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 833,
							"name": "decodePrivateKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 834,
									"name": "serializedPrivateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CLITransactionSigner"
									}
								]
							}
						}
					]
				},
				{
					"id": 636,
					"name": "decryptBackupPhrase",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/encrypt.ts",
							"line": 9,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 637,
							"name": "decryptBackupPhrase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 638,
									"name": "dataBuffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								},
								{
									"id": 639,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 632,
					"name": "encryptBackupPhrase",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/encrypt.ts",
							"line": 5,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 633,
							"name": "encryptBackupPhrase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 634,
									"name": "plaintextBuffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 635,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 669,
					"name": "extractAppKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 267,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 670,
							"name": "extractAppKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 671,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 672,
									"name": "appKeyInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 673,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 674,
													"name": "keyInfo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/cli/src/keys.ts",
															"line": 270,
															"character": 11
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 675,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 677,
																	"name": "address",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/cli/src/keys.ts",
																			"line": 270,
																			"character": 42
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 676,
																	"name": "privateKey",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/cli/src/keys.ts",
																			"line": 270,
																			"character": 25
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		677,
																		676
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/cli/src/keys.ts",
																	"line": 270,
																	"character": 12
																}
															]
														}
													}
												},
												{
													"id": 678,
													"name": "legacyKeyInfo",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/cli/src/keys.ts",
															"line": 271,
															"character": 17
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 679,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 681,
																	"name": "address",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/cli/src/keys.ts",
																			"line": 271,
																			"character": 48
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 680,
																	"name": "privateKey",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/cli/src/keys.ts",
																			"line": 271,
																			"character": 31
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		681,
																		680
																	]
																}
															],
															"sources": [
																{
																	"fileName": "packages/cli/src/keys.ts",
																	"line": 271,
																	"character": 18
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														674,
														678
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/cli/src/keys.ts",
													"line": 269,
													"character": 13
												}
											]
										}
									}
								},
								{
									"id": 682,
									"name": "appAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 656,
					"name": "findIdentityIndex",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 177,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 657,
							"name": "findIdentityIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 658,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 659,
									"name": "mnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 660,
									"name": "idAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 661,
									"name": "maxIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 588,
					"name": "gaiaAuth",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/data.ts",
							"line": 85,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 589,
							"name": "gaiaAuth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 590,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 591,
									"name": "appPrivateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 592,
									"name": "hubUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 593,
									"name": "ownerPrivateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "UserData"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 594,
					"name": "gaiaConnect",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/data.ts",
							"line": 114,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 595,
							"name": "gaiaConnect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 596,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 597,
									"name": "gaiaHubUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 598,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 599,
									"name": "ownerPrivateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "GaiaHubConfig"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 600,
					"name": "gaiaUploadProfile",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/data.ts",
							"line": 221,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 601,
							"name": "gaiaUploadProfile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 602,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 603,
									"name": "gaiaHubURL",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 604,
									"name": "gaiaData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 605,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 606,
									"name": "blockstackID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 607,
					"name": "gaiaUploadProfileAll",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/data.ts",
							"line": 251,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 608,
							"name": "gaiaUploadProfileAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 609,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 610,
									"name": "gaiaUrls",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 611,
									"name": "gaiaData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 612,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 613,
									"name": "blockstackID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 614,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 615,
													"name": "dataUrls",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/data.ts",
															"line": 257,
															"character": 21
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 616,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/data.ts",
															"line": 257,
															"character": 46
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														615,
														616
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/cli/src/data.ts",
													"line": 257,
													"character": 11
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 950,
					"name": "generateExplorerTxPageUrl",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 897,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 951,
							"name": "generateExplorerTxPageUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 952,
									"name": "txid",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 953,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 662,
					"name": "getApplicationKeyInfo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 219,
							"character": 43
						}
					],
					"signatures": [
						{
							"id": 663,
							"name": "getApplicationKeyInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 664,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 665,
									"name": "mnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 666,
									"name": "idAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 667,
									"name": "appDomain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 668,
									"name": "idIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 707,
										"name": "AppKeyInfoType"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 914,
					"name": "getBackupPhrase",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 660,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 915,
							"name": "getBackupPhrase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 916,
									"name": "backupPhraseOrCiphertext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 917,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 429,
					"name": "getCLIOpts",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3094,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 430,
							"name": "getCLIOpts",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 431,
									"name": "argv",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 432,
									"name": "opts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'deitUxC:F:B:P:D:G:N:H:T:I:m:M:X:u:p:'"
								}
							],
							"type": {
								"type": "reference",
								"name": "CLI_OPTS"
							}
						}
					]
				},
				{
					"id": 445,
					"name": "getCommandArgs",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3194,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 446,
							"name": "getCommandArgs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 447,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 448,
									"name": "argsList",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 449,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 452,
													"name": "arguments",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													},
													"defaultValue": "..."
												},
												{
													"id": 451,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "..."
												},
												{
													"id": 450,
													"name": "status",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														452,
														451,
														450
													]
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 453,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 455,
													"name": "arguments",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													"defaultValue": "..."
												},
												{
													"id": 456,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "undefined"
													},
													"defaultValue": "..."
												},
												{
													"id": 454,
													"name": "status",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														455,
														456,
														454
													]
												}
											]
										}
									}
								]
							}
						}
					]
				},
				{
					"id": 626,
					"name": "getGaiaAddressFromProfile",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/data.ts",
							"line": 343,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 627,
							"name": "getGaiaAddressFromProfile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 628,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 629,
									"name": "profile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 630,
									"name": "appOrigin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 623,
					"name": "getGaiaAddressFromURL",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/data.ts",
							"line": 330,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 624,
							"name": "getGaiaAddressFromURL",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 625,
									"name": "appUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 921,
					"name": "getIDAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 719,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 922,
							"name": "getIDAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 923,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 924,
									"name": "nameOrIDAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 930,
					"name": "getIDAppKeys",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 762,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 931,
							"name": "getIDAppKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 932,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 933,
									"name": "nameOrIDAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 934,
									"name": "appOrigin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 935,
									"name": "mnemonicOrCiphertext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1025,
										"name": "IDAppKeys"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 556,
					"name": "getMaxIDSearchIndex",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/cli.ts",
							"line": 126,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 557,
							"name": "getMaxIDSearchIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 894,
					"name": "getNameInfoEasy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 556,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 895,
							"name": "getNameInfoEasy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 896,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 897,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 737,
												"name": "NameInfoType"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 719,
					"name": "getNetwork",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/network.ts",
							"line": 333,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 720,
							"name": "getNetwork",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 721,
									"name": "configData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 491,
										"name": "CLI_CONFIG_TYPE"
									}
								},
								{
									"id": 722,
									"name": "regTest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BlockstackNetwork"
							}
						}
					]
				},
				{
					"id": 925,
					"name": "getOwnerKeyFromIDAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 736,
							"character": 46
						}
					],
					"signatures": [
						{
							"id": 926,
							"name": "getOwnerKeyFromIDAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 927,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 928,
									"name": "mnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 929,
									"name": "idAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 642,
					"name": "getOwnerKeyInfo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 81,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 643,
							"name": "getOwnerKeyInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 644,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 645,
									"name": "mnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 646,
									"name": "index",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 647,
									"name": "version",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'v0.10-current'"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 686,
										"name": "OwnerKeyInfoType"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 648,
					"name": "getPaymentKeyInfo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 108,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 649,
							"name": "getPaymentKeyInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 650,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 651,
									"name": "mnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 692,
										"name": "PaymentKeyInfoType"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 842,
					"name": "getPrivateKeyAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 406,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 843,
							"name": "getPrivateKeyAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 844,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 845,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "CLITransactionSigner"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 839,
					"name": "getPublicKeyFromPrivateKey",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 397,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 840,
							"name": "getPublicKeyFromPrivateKey",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 841,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 652,
					"name": "getStacksWalletKeyInfo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/keys.ts",
							"line": 135,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 653,
							"name": "getStacksWalletKeyInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 654,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 655,
									"name": "mnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 700,
										"name": "StacksKeyInfoType"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 907,
					"name": "getpass",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 632,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 908,
							"name": "getpass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 909,
									"name": "promptStr",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 910,
									"name": "cb",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 911,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/cli/src/utils.ts",
													"line": 632,
													"character": 46
												}
											],
											"signatures": [
												{
													"id": 912,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 913,
															"name": "passwd",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 524,
					"name": "handleAuth",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 367,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 525,
							"name": "handleAuth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 526,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 527,
									"name": "mnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 528,
									"name": "gaiaHubUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 529,
									"name": "profileGaiaHub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 530,
									"name": "port",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 531,
									"name": "req",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "express.Request"
									}
								},
								{
									"id": 532,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "express.Response"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 533,
					"name": "handleSignIn",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 590,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 534,
							"name": "handleSignIn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 535,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 536,
									"name": "mnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 537,
									"name": "appGaiaHub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 538,
									"name": "profileGaiaHub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 539,
									"name": "req",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "express.Request"
									}
								},
								{
									"id": 540,
									"name": "res",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "express.Response"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 820,
					"name": "hasKeys",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 227,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 821,
							"name": "hasKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 822,
									"name": "signer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "CLITransactionSigner"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 855,
					"name": "hash160",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 449,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 856,
							"name": "hash160",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 857,
									"name": "buff",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 846,
					"name": "isSubdomain",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 423,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 847,
							"name": "isSubdomain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 848,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 954,
					"name": "isTestnetAddress",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 905,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 955,
							"name": "isTestnetAddress",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 956,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 460,
					"name": "loadConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3383,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 461,
							"name": "loadConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Load the config file and return a config dict.\nIf no config file exists, then return the default config.",
								"tags": [
									{
										"tag": "configpath",
										"text": "(string) the path to the config file."
									},
									{
										"tag": "networktype",
										"text": "(sring) 'mainnet', 'regtest', or 'testnet'\n"
									}
								]
							},
							"parameters": [
								{
									"id": 462,
									"name": "configFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 463,
									"name": "networkType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 491,
								"name": "CLI_CONFIG_TYPE"
							}
						}
					]
				},
				{
					"id": 520,
					"name": "loadNamedIdentities",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/auth.ts",
							"line": 262,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 521,
							"name": "loadNamedIdentities",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 522,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 523,
									"name": "mnemonic",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 548,
											"name": "NamedIdentityType"
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 420,
					"name": "makeAllCommandsHelp",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 2990,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 421,
							"name": "makeAllCommandsHelp",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 418,
					"name": "makeAllCommandsList",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 2959,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 419,
							"name": "makeAllCommandsList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 584,
					"name": "makeAssociationToken",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/data.ts",
							"line": 63,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 585,
							"name": "makeAssociationToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 586,
									"name": "appPrivateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 587,
									"name": "identityKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 422,
					"name": "makeCommandUsageString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3013,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 423,
							"name": "makeCommandUsageString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 424,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 865,
					"name": "makeDIDConfiguration",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 481,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 866,
							"name": "makeDIDConfiguration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 867,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 868,
									"name": "blockstackID",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 869,
									"name": "domain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 870,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 871,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 872,
													"name": "entries",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 486,
															"character": 20
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 873,
																"name": "__type",
																"kind": 65536,
																"kindString": "Type literal",
																"flags": {},
																"children": [
																	{
																		"id": 874,
																		"name": "did",
																		"kind": 1024,
																		"kindString": "Property",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "packages/cli/src/utils.ts",
																				"line": 486,
																				"character": 27
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	},
																	{
																		"id": 875,
																		"name": "jwt",
																		"kind": 1024,
																		"kindString": "Property",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "packages/cli/src/utils.ts",
																				"line": 486,
																				"character": 40
																			}
																		],
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"kind": 1024,
																		"children": [
																			874,
																			875
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "packages/cli/src/utils.ts",
																		"line": 486,
																		"character": 21
																	}
																]
															}
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														872
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/cli/src/utils.ts",
													"line": 486,
													"character": 11
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 861,
					"name": "makeProfileJWT",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 474,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 862,
							"name": "makeProfileJWT",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 863,
									"name": "profileData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								},
								{
									"id": 864,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 936,
					"name": "makePromptsFromArgList",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 788,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 937,
							"name": "makePromptsFromArgList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 938,
									"name": "expectedArgs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1029,
											"name": "ClarityFunctionArg"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "InquirerPrompt"
								}
							}
						}
					]
				},
				{
					"id": 425,
					"name": "makeUsageString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3044,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 426,
							"name": "makeUsageString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 617,
					"name": "makeZoneFileFromGaiaUrl",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/data.ts",
							"line": 296,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 618,
							"name": "makeZoneFileFromGaiaUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 619,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 620,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 621,
									"name": "gaiaHubUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 622,
									"name": "ownerKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 918,
					"name": "mkdirs",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 688,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 919,
							"name": "mkdirs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 920,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 898,
					"name": "nameLookup",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 578,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 899,
							"name": "nameLookup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 900,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 750,
										"name": "CLINetworkAdapter"
									}
								},
								{
									"id": 901,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 902,
									"name": "includeProfile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 903,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 904,
													"name": "profile",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 582,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 905,
													"name": "profileUrl",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 582,
															"character": 37
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 906,
													"name": "zonefile",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/cli/src/utils.ts",
															"line": 582,
															"character": 56
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														904,
														905,
														906
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/cli/src/utils.ts",
													"line": 582,
													"character": 11
												}
											]
										}
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 942,
					"name": "parseClarityFunctionArgAnswers",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 853,
							"character": 46
						}
					],
					"signatures": [
						{
							"id": 943,
							"name": "parseClarityFunctionArgAnswers",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 944,
									"name": "answers",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 945,
									"name": "expectedArgs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1029,
											"name": "ClarityFunctionArg"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "ClarityValue"
								}
							}
						}
					]
				},
				{
					"id": 826,
					"name": "parseMultiSigKeys",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 256,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 827,
							"name": "parseMultiSigKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 828,
									"name": "serializedPrivateKeys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 976,
								"name": "MultiSigKeySigner"
							}
						}
					]
				},
				{
					"id": 823,
					"name": "parseNullSigner",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 241,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 824,
							"name": "parseNullSigner",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 825,
									"name": "addrString",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 962,
								"name": "NullSigner"
							}
						}
					]
				},
				{
					"id": 829,
					"name": "parseSegwitP2SHKeys",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 294,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 830,
							"name": "parseSegwitP2SHKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 831,
									"name": "serializedPrivateKeys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 994,
								"name": "SegwitP2SHKeySigner"
							}
						}
					]
				},
				{
					"id": 427,
					"name": "printUsage",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/argparse.ts",
							"line": 3079,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 428,
							"name": "printUsage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 852,
					"name": "sumUTXOs",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/cli/src/utils.ts",
							"line": 442,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 853,
							"name": "sumUTXOs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 854,
									"name": "utxos",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 957,
											"name": "UTXO"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						750,
						976,
						962,
						1020,
						994
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						491,
						484,
						723,
						514,
						510,
						1029,
						1025,
						548,
						734,
						957,
						560
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						707,
						737,
						686,
						692,
						700
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						466,
						468,
						483,
						467,
						503,
						499,
						500,
						501,
						502,
						685,
						469,
						478,
						465,
						464,
						474,
						473,
						471,
						476,
						475,
						472,
						477,
						541,
						543,
						546,
						545,
						547,
						542,
						544,
						470,
						683,
						684,
						481,
						482,
						480,
						509,
						479,
						576
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						558,
						437,
						433,
						441,
						835,
						946,
						939,
						876,
						849,
						457,
						858,
						832,
						636,
						632,
						669,
						656,
						588,
						594,
						600,
						607,
						950,
						662,
						914,
						429,
						445,
						626,
						623,
						921,
						930,
						556,
						894,
						719,
						925,
						642,
						648,
						842,
						839,
						652,
						907,
						524,
						533,
						820,
						855,
						846,
						954,
						460,
						520,
						420,
						418,
						584,
						422,
						865,
						861,
						936,
						425,
						617,
						918,
						898,
						942,
						826,
						823,
						829,
						427,
						852
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/cli/src/argparse.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1032,
			"name": "common",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/common\n\nCommon utilities used by Stacks.js packages.\n\n## Installation\n\n```\nnpm install @stacks/common\n```\n"
			},
			"originalName": "common/src/config",
			"children": [
				{
					"id": 4589,
					"name": "Buffer",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/common/src/utils.ts",
							"line": 16,
							"character": 40
						}
					],
					"target": 1356
				},
				{
					"id": 4581,
					"name": "getBase64OutputLength",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1326
				},
				{
					"id": 1040,
					"name": "ChainID",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 1042,
							"name": "Mainnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/constants.ts",
									"line": 3,
									"character": 9
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 1041,
							"name": "Testnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/constants.ts",
									"line": 2,
									"character": 9
								}
							],
							"defaultValue": "2147483648"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1042,
								1041
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/common/src/constants.ts",
							"line": 1,
							"character": 12
						}
					]
				},
				{
					"id": 1043,
					"name": "TransactionVersion",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 1044,
							"name": "Mainnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/constants.ts",
									"line": 7,
									"character": 9
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 1045,
							"name": "Testnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/constants.ts",
									"line": 8,
									"character": 9
								}
							],
							"defaultValue": "128"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								1044,
								1045
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/common/src/constants.ts",
							"line": 6,
							"character": 23
						}
					]
				},
				{
					"id": 1188,
					"name": "HubErrorDetails",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1189,
							"name": "message",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/common/src/errors.ts",
									"line": 217,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1190,
							"name": "statusCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/errors.ts",
									"line": 218,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1191,
							"name": "statusText",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/common/src/errors.ts",
									"line": 219,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1189,
								1190,
								1191
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/common/src/errors.ts",
							"line": 216,
							"character": 32
						}
					],
					"indexSignature": {
						"id": 1192,
						"name": "__index",
						"kind": 8192,
						"kindString": "Index signature",
						"flags": {},
						"parameters": [
							{
								"id": 1193,
								"name": "prop",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						4589,
						4581
					]
				},
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						1040,
						1043
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1188
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/common/src/config.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1358,
			"name": "encryption",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/encryption\n\nEncryption functions used by Stacks.js packages.\n\n## Installation\n\n```\nnpm install @stacks/cli\n```\n"
			},
			"originalName": "encryption/src/aesCipher",
			"children": [
				{
					"id": 4621,
					"name": "NodeCryptoSha2Hash",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1780
				},
				{
					"id": 4620,
					"name": "Sha2Hash",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1775
				},
				{
					"id": 4622,
					"name": "WebCryptoSha2Hash",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1797
				},
				{
					"id": 4617,
					"name": "createSha2Hash",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1767
				},
				{
					"id": 4628,
					"name": "getBase64OutputLength",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1810
				},
				{
					"id": 4618,
					"name": "hashSha256Sync",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1769
				},
				{
					"id": 4619,
					"name": "hashSha512Sync",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1772
				},
				{
					"id": 1375,
					"name": "NodeCryptoAesCipher",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1376,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1377,
									"name": "new NodeCryptoAesCipher",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1378,
											"name": "createCipher",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1379,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1380,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1381,
																	"name": "algorithm",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherCCMTypes"
																	}
																},
																{
																	"id": 1382,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherKey"
																	}
																},
																{
																	"id": 1383,
																	"name": "iv",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "BinaryLike"
																			},
																			{
																				"type": "literal",
																				"value": null
																			}
																		]
																	}
																},
																{
																	"id": 1384,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherCCMOptions"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "CipherCCM"
															}
														},
														{
															"id": 1385,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1386,
																	"name": "algorithm",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherGCMTypes"
																	}
																},
																{
																	"id": 1387,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherKey"
																	}
																},
																{
																	"id": 1388,
																	"name": "iv",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "BinaryLike"
																			},
																			{
																				"type": "literal",
																				"value": null
																			}
																		]
																	}
																},
																{
																	"id": 1389,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "CipherGCMOptions"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "CipherGCM"
															}
														},
														{
															"id": 1390,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1391,
																	"name": "algorithm",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1392,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherKey"
																	}
																},
																{
																	"id": 1393,
																	"name": "iv",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "BinaryLike"
																			},
																			{
																				"type": "literal",
																				"value": null
																			}
																		]
																	}
																},
																{
																	"id": 1394,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "stream.TransformOptions"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Cipher"
															}
														}
													]
												}
											}
										},
										{
											"id": 1395,
											"name": "createDecipher",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1396,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1397,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1398,
																	"name": "algorithm",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherCCMTypes"
																	}
																},
																{
																	"id": 1399,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherKey"
																	}
																},
																{
																	"id": 1400,
																	"name": "iv",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "BinaryLike"
																			},
																			{
																				"type": "literal",
																				"value": null
																			}
																		]
																	}
																},
																{
																	"id": 1401,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherCCMOptions"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DecipherCCM"
															}
														},
														{
															"id": 1402,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1403,
																	"name": "algorithm",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherGCMTypes"
																	}
																},
																{
																	"id": 1404,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherKey"
																	}
																},
																{
																	"id": 1405,
																	"name": "iv",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "BinaryLike"
																			},
																			{
																				"type": "literal",
																				"value": null
																			}
																		]
																	}
																},
																{
																	"id": 1406,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "CipherGCMOptions"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DecipherGCM"
															}
														},
														{
															"id": 1407,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1408,
																	"name": "algorithm",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1409,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "CipherKey"
																	}
																},
																{
																	"id": 1410,
																	"name": "iv",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "BinaryLike"
																			},
																			{
																				"type": "literal",
																				"value": null
																			}
																		]
																	}
																},
																{
																	"id": 1411,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "stream.TransformOptions"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Decipher"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1375,
										"name": "NodeCryptoAesCipher"
									}
								}
							]
						},
						{
							"id": 1412,
							"name": "createCipher",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/aesCipher.ts",
									"line": 16,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1413,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1414,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1415,
													"name": "algorithm",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherCCMTypes"
													}
												},
												{
													"id": 1416,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherKey"
													}
												},
												{
													"id": 1417,
													"name": "iv",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BinaryLike"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 1418,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherCCMOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "CipherCCM"
											}
										},
										{
											"id": 1419,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1420,
													"name": "algorithm",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherGCMTypes"
													}
												},
												{
													"id": 1421,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherKey"
													}
												},
												{
													"id": 1422,
													"name": "iv",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BinaryLike"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 1423,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "CipherGCMOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "CipherGCM"
											}
										},
										{
											"id": 1424,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1425,
													"name": "algorithm",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1426,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherKey"
													}
												},
												{
													"id": 1427,
													"name": "iv",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BinaryLike"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 1428,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "stream.TransformOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Cipher"
											}
										}
									]
								}
							}
						},
						{
							"id": 1429,
							"name": "createDecipher",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/aesCipher.ts",
									"line": 18,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1430,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1431,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1432,
													"name": "algorithm",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherCCMTypes"
													}
												},
												{
													"id": 1433,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherKey"
													}
												},
												{
													"id": 1434,
													"name": "iv",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BinaryLike"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 1435,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherCCMOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "DecipherCCM"
											}
										},
										{
											"id": 1436,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1437,
													"name": "algorithm",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherGCMTypes"
													}
												},
												{
													"id": 1438,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherKey"
													}
												},
												{
													"id": 1439,
													"name": "iv",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BinaryLike"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 1440,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "CipherGCMOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "DecipherGCM"
											}
										},
										{
											"id": 1441,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1442,
													"name": "algorithm",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1443,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "CipherKey"
													}
												},
												{
													"id": 1444,
													"name": "iv",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BinaryLike"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												},
												{
													"id": 1445,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "stream.TransformOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Decipher"
											}
										}
									]
								}
							}
						},
						{
							"id": 1452,
							"name": "decrypt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/aesCipher.ts",
									"line": 39,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1453,
									"name": "decrypt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1454,
											"name": "algorithm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1361,
												"name": "CipherAlgorithm"
											}
										},
										{
											"id": 1455,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1456,
											"name": "iv",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1457,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1370,
										"name": "AesCipher.decrypt"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1369,
								"name": "AesCipher.decrypt"
							}
						},
						{
							"id": 1446,
							"name": "encrypt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/aesCipher.ts",
									"line": 25,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1447,
									"name": "encrypt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1448,
											"name": "algorithm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1361,
												"name": "CipherAlgorithm"
											}
										},
										{
											"id": 1449,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1450,
											"name": "iv",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1451,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1364,
										"name": "AesCipher.encrypt"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1363,
								"name": "AesCipher.encrypt"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1376
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1412,
								1429
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1452,
								1446
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/aesCipher.ts",
							"line": 15,
							"character": 32
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1362,
							"name": "AesCipher"
						}
					]
				},
				{
					"id": 1643,
					"name": "NodeCryptoHmacSha256",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1644,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1645,
									"name": "new NodeCryptoHmacSha256",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1646,
											"name": "createHmac",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1647,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1648,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1649,
																	"name": "algorithm",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1650,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "BinaryLike"
																			},
																			{
																				"type": "reference",
																				"name": "KeyObject"
																			}
																		]
																	}
																},
																{
																	"id": 1651,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "stream.TransformOptions"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Hmac"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1643,
										"name": "NodeCryptoHmacSha256"
									}
								}
							]
						},
						{
							"id": 1652,
							"name": "createHmac",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/hmacSha256.ts",
									"line": 11,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1653,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1654,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1655,
													"name": "algorithm",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1656,
													"name": "key",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "BinaryLike"
															},
															{
																"type": "reference",
																"name": "KeyObject"
															}
														]
													}
												},
												{
													"id": 1657,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "stream.TransformOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Hmac"
											}
										}
									]
								}
							}
						},
						{
							"id": 1658,
							"name": "digest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/hmacSha256.ts",
									"line": 17,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 1659,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1660,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1661,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1640,
										"name": "Hmac.digest"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1639,
								"name": "Hmac.digest"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1644
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1652
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1658
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/hmacSha256.ts",
							"line": 10,
							"character": 33
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1638,
							"name": "Hmac"
						}
					]
				},
				{
					"id": 1706,
					"name": "NodeCryptoPbkdf2",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1707,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1708,
									"name": "new NodeCryptoPbkdf2",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1709,
											"name": "nodePbkdf2",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1710,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1711,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1712,
																	"name": "password",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BinaryLike"
																	}
																},
																{
																	"id": 1713,
																	"name": "salt",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "BinaryLike"
																	}
																},
																{
																	"id": 1714,
																	"name": "iterations",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1715,
																	"name": "keylen",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1716,
																	"name": "digest",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1717,
																	"name": "callback",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 1718,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "node_modules/@types/node/crypto.d.ts",
																					"line": 418,
																					"character": 17
																				}
																			],
																			"signatures": [
																				{
																					"id": 1719,
																					"name": "__type",
																					"kind": 4096,
																					"kindString": "Call signature",
																					"flags": {},
																					"parameters": [
																						{
																							"id": 1720,
																							"name": "err",
																							"kind": 32768,
																							"kindString": "Parameter",
																							"flags": {},
																							"type": {
																								"type": "union",
																								"types": [
																									{
																										"type": "reference",
																										"name": "Error"
																									},
																									{
																										"type": "literal",
																										"value": null
																									}
																								]
																							}
																						},
																						{
																							"id": 1721,
																							"name": "derivedKey",
																							"kind": 32768,
																							"kindString": "Parameter",
																							"flags": {},
																							"type": {
																								"type": "reference",
																								"name": "Buffer"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1706,
										"name": "NodeCryptoPbkdf2"
									}
								}
							]
						},
						{
							"id": 1722,
							"name": "nodePbkdf2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/pbkdf2.ts",
									"line": 19,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1723,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1724,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1725,
													"name": "password",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "BinaryLike"
													}
												},
												{
													"id": 1726,
													"name": "salt",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "BinaryLike"
													}
												},
												{
													"id": 1727,
													"name": "iterations",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1728,
													"name": "keylen",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1729,
													"name": "digest",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1730,
													"name": "callback",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1731,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/@types/node/crypto.d.ts",
																	"line": 418,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 1732,
																	"name": "__type",
																	"kind": 4096,
																	"kindString": "Call signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 1733,
																			"name": "err",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"name": "Error"
																					},
																					{
																						"type": "literal",
																						"value": null
																					}
																				]
																			}
																		},
																		{
																			"id": 1734,
																			"name": "derivedKey",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"name": "Buffer"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 1735,
							"name": "derive",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/pbkdf2.ts",
									"line": 25,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 1736,
									"name": "derive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1737,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1738,
											"name": "salt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1739,
											"name": "iterations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1740,
											"name": "keyLength",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1741,
											"name": "digest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1697,
												"name": "Pbkdf2Digests"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1700,
										"name": "Pbkdf2.derive"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1699,
								"name": "Pbkdf2.derive"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1707
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1722
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1735
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/pbkdf2.ts",
							"line": 18,
							"character": 29
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1698,
							"name": "Pbkdf2"
						}
					]
				},
				{
					"id": 1619,
					"name": "NodeCryptoRipemd160Digest",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1620,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1621,
									"name": "new NodeCryptoRipemd160Digest",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1622,
											"name": "nodeCryptoCreateHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1623,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 1624,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1625,
																	"name": "algorithm",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 1626,
																	"name": "options",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "HashOptions"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Hash"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1619,
										"name": "NodeCryptoRipemd160Digest"
									}
								}
							]
						},
						{
							"id": 1627,
							"name": "nodeCryptoCreateHash",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/hashRipemd160.ts",
									"line": 25,
									"character": 22
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1628,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1629,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1630,
													"name": "algorithm",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1631,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "HashOptions"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Hash"
											}
										}
									]
								}
							}
						},
						{
							"id": 1632,
							"name": "digest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/hashRipemd160.ts",
									"line": 31,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1633,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1634,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Buffer"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1611,
										"name": "Ripemd160Digest.digest"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1610,
								"name": "Ripemd160Digest.digest"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1620
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1627
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1632
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/hashRipemd160.ts",
							"line": 24,
							"character": 38
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1609,
							"name": "Ripemd160Digest"
						}
					]
				},
				{
					"id": 1613,
					"name": "Ripemd160PolyfillDigest",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1614,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1615,
									"name": "new Ripemd160PolyfillDigest",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1613,
										"name": "Ripemd160PolyfillDigest"
									}
								}
							]
						},
						{
							"id": 1616,
							"name": "digest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/hashRipemd160.ts",
									"line": 12,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 1617,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1618,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Buffer"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1611,
										"name": "Ripemd160Digest.digest"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1610,
								"name": "Ripemd160Digest.digest"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1614
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1616
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/hashRipemd160.ts",
							"line": 11,
							"character": 36
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1609,
							"name": "Ripemd160Digest"
						}
					]
				},
				{
					"id": 1458,
					"name": "WebCryptoAesCipher",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1459,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1460,
									"name": "new WebCryptoAesCipher",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1461,
											"name": "subtleCrypto",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubtleCrypto"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1458,
										"name": "WebCryptoAesCipher"
									}
								}
							]
						},
						{
							"id": 1462,
							"name": "subtleCrypto",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/aesCipher.ts",
									"line": 55,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "SubtleCrypto"
							}
						},
						{
							"id": 1469,
							"name": "decrypt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/aesCipher.ts",
									"line": 85,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1470,
									"name": "decrypt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1471,
											"name": "algorithm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1361,
												"name": "CipherAlgorithm"
											}
										},
										{
											"id": 1472,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1473,
											"name": "iv",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1474,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1370,
										"name": "AesCipher.decrypt"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1369,
								"name": "AesCipher.decrypt"
							}
						},
						{
							"id": 1463,
							"name": "encrypt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/aesCipher.ts",
									"line": 61,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1464,
									"name": "encrypt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1465,
											"name": "algorithm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1361,
												"name": "CipherAlgorithm"
											}
										},
										{
											"id": 1466,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1467,
											"name": "iv",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1468,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1364,
										"name": "AesCipher.encrypt"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1363,
								"name": "AesCipher.encrypt"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1459
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1462
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1469,
								1463
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/aesCipher.ts",
							"line": 54,
							"character": 31
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1362,
							"name": "AesCipher"
						}
					]
				},
				{
					"id": 1662,
					"name": "WebCryptoHmacSha256",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1663,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1664,
									"name": "new WebCryptoHmacSha256",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1665,
											"name": "subtleCrypto",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubtleCrypto"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1662,
										"name": "WebCryptoHmacSha256"
									}
								}
							]
						},
						{
							"id": 1666,
							"name": "subtleCrypto",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/hmacSha256.ts",
									"line": 24,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "SubtleCrypto"
							}
						},
						{
							"id": 1667,
							"name": "digest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/hmacSha256.ts",
									"line": 30,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 1668,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1669,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1670,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1640,
										"name": "Hmac.digest"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1639,
								"name": "Hmac.digest"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1663
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1666
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1667
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/hmacSha256.ts",
							"line": 23,
							"character": 32
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1638,
							"name": "Hmac"
						}
					]
				},
				{
					"id": 1754,
					"name": "WebCryptoPartialPbkdf2",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1755,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1756,
									"name": "new WebCryptoPartialPbkdf2",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1757,
											"name": "subtleCrypto",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubtleCrypto"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1754,
										"name": "WebCryptoPartialPbkdf2"
									}
								}
							]
						},
						{
							"id": 1758,
							"name": "subtleCrypto",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/pbkdf2.ts",
									"line": 99,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "SubtleCrypto"
							}
						},
						{
							"id": 1759,
							"name": "derive",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/pbkdf2.ts",
									"line": 105,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 1760,
									"name": "derive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1761,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1762,
											"name": "salt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1763,
											"name": "iterations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1764,
											"name": "keyLength",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1765,
											"name": "digest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1697,
												"name": "Pbkdf2Digests"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1700,
										"name": "Pbkdf2.derive"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1699,
								"name": "Pbkdf2.derive"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1755
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1758
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1759
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/pbkdf2.ts",
							"line": 93,
							"character": 35
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1698,
							"name": "Pbkdf2"
						}
					]
				},
				{
					"id": 1742,
					"name": "WebCryptoPbkdf2",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1743,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1744,
									"name": "new WebCryptoPbkdf2",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1745,
											"name": "subtleCrypto",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "SubtleCrypto"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1742,
										"name": "WebCryptoPbkdf2"
									}
								}
							]
						},
						{
							"id": 1746,
							"name": "subtleCrypto",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/pbkdf2.ts",
									"line": 47,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "SubtleCrypto"
							}
						},
						{
							"id": 1747,
							"name": "derive",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/pbkdf2.ts",
									"line": 53,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 1748,
									"name": "derive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1749,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1750,
											"name": "salt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1751,
											"name": "iterations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1752,
											"name": "keyLength",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1753,
											"name": "digest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1697,
												"name": "Pbkdf2Digests"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"id": 1700,
										"name": "Pbkdf2.derive"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 1699,
								"name": "Pbkdf2.derive"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1743
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1746
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1747
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/pbkdf2.ts",
							"line": 46,
							"character": 28
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 1698,
							"name": "Pbkdf2"
						}
					]
				},
				{
					"id": 1362,
					"name": "AesCipher",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1369,
							"name": "decrypt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1370,
									"name": "decrypt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1371,
											"name": "algorithm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1361,
												"name": "CipherAlgorithm"
											}
										},
										{
											"id": 1372,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1373,
											"name": "iv",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1374,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1363,
							"name": "encrypt",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1364,
									"name": "encrypt",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1365,
											"name": "algorithm",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1361,
												"name": "CipherAlgorithm"
											}
										},
										{
											"id": 1366,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1367,
											"name": "iv",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1368,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1369,
								1363
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/aesCipher.ts",
							"line": 9,
							"character": 26
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1375,
							"name": "NodeCryptoAesCipher"
						},
						{
							"type": "reference",
							"id": 1458,
							"name": "WebCryptoAesCipher"
						}
					]
				},
				{
					"id": 1597,
					"name": "EncryptContentOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Specify encryption options, and whether to sign the ciphertext."
					},
					"children": [
						{
							"id": 1601,
							"name": "cipherTextEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "String encoding format for the cipherText buffer.\nCurrently defaults to 'hex' for legacy backwards-compatibility.\nOnly used if the `encrypt` option is also used.\nNote: in the future this should default to 'base64' for the significant\nfile size reduction."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 27,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "CipherTextEncoding"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1595,
								"name": "EncryptionOptions.cipherTextEncoding"
							}
						},
						{
							"id": 1599,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Encrypt the data with the public key corresponding to the supplied private key"
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 48,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1598,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Encrypt the data with this key."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 44,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1600,
							"name": "sign",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If set to `true` the data is signed using ECDSA on SHA256 hashes with the user's\napp private key. If a string is specified, it is used as the private key instead\nof the user's app private key.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 19,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1594,
								"name": "EncryptionOptions.sign"
							}
						},
						{
							"id": 1602,
							"name": "wasString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies if the original unencrypted content is a ASCII or UTF-8 string.\nFor example stringified JSON.\nIf true, then when the ciphertext is decrypted, it will be returned as\na `string` type variable, otherwise will be returned as a Buffer."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 1596,
								"name": "EncryptionOptions.wasString"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1601,
								1599,
								1598,
								1600,
								1602
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/encryption.ts",
							"line": 40,
							"character": 38
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 1593,
							"name": "EncryptionOptions"
						}
					]
				},
				{
					"id": 1593,
					"name": "EncryptionOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1595,
							"name": "cipherTextEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "String encoding format for the cipherText buffer.\nCurrently defaults to 'hex' for legacy backwards-compatibility.\nOnly used if the `encrypt` option is also used.\nNote: in the future this should default to 'base64' for the significant\nfile size reduction."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 27,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "CipherTextEncoding"
							}
						},
						{
							"id": 1594,
							"name": "sign",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "If set to `true` the data is signed using ECDSA on SHA256 hashes with the user's\napp private key. If a string is specified, it is used as the private key instead\nof the user's app private key.",
								"tags": [
									{
										"tag": "default",
										"text": "false\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 19,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						},
						{
							"id": 1596,
							"name": "wasString",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Specifies if the original unencrypted content is a ASCII or UTF-8 string.\nFor example stringified JSON.\nIf true, then when the ciphertext is decrypted, it will be returned as\na `string` type variable, otherwise will be returned as a Buffer."
							},
							"sources": [
								{
									"fileName": "packages/encryption/src/encryption.ts",
									"line": 34,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1595,
								1594,
								1596
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/encryption.ts",
							"line": 12,
							"character": 34
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 1597,
							"name": "EncryptContentOptions"
						}
					]
				},
				{
					"id": 1638,
					"name": "Hmac",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1639,
							"name": "digest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1640,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1641,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1642,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1639
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/hmacSha256.ts",
							"line": 4,
							"character": 21
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1643,
							"name": "NodeCryptoHmacSha256"
						},
						{
							"type": "reference",
							"id": 1662,
							"name": "WebCryptoHmacSha256"
						}
					]
				},
				{
					"id": 1508,
					"name": "NodeCryptoLib",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1509,
							"name": "lib",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/cryptoUtils.ts",
									"line": 47,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "__module"
							}
						},
						{
							"id": 1510,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/cryptoUtils.ts",
									"line": 48,
									"character": 6
								}
							],
							"type": {
								"type": "literal",
								"value": "nodeCrypto"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1509,
								1510
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/cryptoUtils.ts",
							"line": 46,
							"character": 30
						}
					]
				},
				{
					"id": 1698,
					"name": "Pbkdf2",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1699,
							"name": "derive",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1700,
									"name": "derive",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1701,
											"name": "password",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1702,
											"name": "salt",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										},
										{
											"id": 1703,
											"name": "iterations",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1704,
											"name": "keyLength",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1705,
											"name": "digest",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 1697,
												"name": "Pbkdf2Digests"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Buffer"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1699
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/pbkdf2.ts",
							"line": 6,
							"character": 23
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1706,
							"name": "NodeCryptoPbkdf2"
						},
						{
							"type": "reference",
							"id": 1754,
							"name": "WebCryptoPartialPbkdf2"
						},
						{
							"type": "reference",
							"id": 1742,
							"name": "WebCryptoPbkdf2"
						}
					]
				},
				{
					"id": 1609,
					"name": "Ripemd160Digest",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1610,
							"name": "digest",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 1611,
									"name": "digest",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1612,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1610
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/hashRipemd160.ts",
							"line": 7,
							"character": 32
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 1619,
							"name": "NodeCryptoRipemd160Digest"
						},
						{
							"type": "reference",
							"id": 1613,
							"name": "Ripemd160PolyfillDigest"
						}
					]
				},
				{
					"id": 1505,
					"name": "WebCryptoLib",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 1506,
							"name": "lib",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/cryptoUtils.ts",
									"line": 42,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "SubtleCrypto"
							}
						},
						{
							"id": 1507,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/cryptoUtils.ts",
									"line": 43,
									"character": 6
								}
							],
							"type": {
								"type": "literal",
								"value": "subtleCrypto"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1506,
								1507
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/encryption/src/cryptoUtils.ts",
							"line": 41,
							"character": 29
						}
					]
				},
				{
					"id": 1361,
					"name": "CipherAlgorithm",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/aesCipher.ts",
							"line": 7,
							"character": 27
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "aes-256-cbc"
							},
							{
								"type": "literal",
								"value": "aes-128-cbc"
							}
						]
					}
				},
				{
					"id": 1476,
					"name": "GetRandomBytes",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Optional function to generate cryptographically secure random bytes"
					},
					"sources": [
						{
							"fileName": "packages/encryption/src/cryptoRandom.ts",
							"line": 8,
							"character": 26
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1477,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/cryptoRandom.ts",
									"line": 8,
									"character": 28
								}
							],
							"signatures": [
								{
									"id": 1478,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1479,
											"name": "count",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							]
						}
					}
				},
				{
					"id": 1697,
					"name": "Pbkdf2Digests",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/pbkdf2.ts",
							"line": 4,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "sha512"
							},
							{
								"type": "literal",
								"value": "sha256"
							}
						]
					}
				},
				{
					"id": 1493,
					"name": "TriplesecDecryptSignature",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/cryptoUtils.ts",
							"line": 36,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1494,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/encryption/src/cryptoUtils.ts",
									"line": 36,
									"character": 39
								}
							],
							"signatures": [
								{
									"id": 1495,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1496,
											"name": "arg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1497,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1498,
															"name": "data",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/encryption/src/cryptoUtils.ts",
																	"line": 37,
																	"character": 13
																}
															],
															"type": {
																"type": "reference",
																"name": "Buffer"
															}
														},
														{
															"id": 1499,
															"name": "key",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/encryption/src/cryptoUtils.ts",
																	"line": 37,
																	"character": 26
																}
															],
															"type": {
																"type": "reference",
																"name": "Buffer"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1498,
																1499
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/encryption/src/cryptoUtils.ts",
															"line": 37,
															"character": 6
														}
													]
												}
											}
										},
										{
											"id": 1500,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1501,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/encryption/src/cryptoUtils.ts",
															"line": 38,
															"character": 5
														}
													],
													"signatures": [
														{
															"id": 1502,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 1503,
																	"name": "err",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "Error"
																			},
																			{
																				"type": "literal",
																				"value": null
																			}
																		]
																	}
																},
																{
																	"id": 1504,
																	"name": "buff",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "reference",
																				"name": "Buffer"
																			},
																			{
																				"type": "literal",
																				"value": null
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1492,
					"name": "NO_CRYPTO_LIB",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/encryption/src/cryptoUtils.ts",
							"line": 33,
							"character": 26
						}
					],
					"type": {
						"type": "literal",
						"value": "Crypto lib not found. Either the WebCrypto \"crypto.subtle\" or Node.js \"crypto\" module must be available."
					},
					"defaultValue": "'Crypto lib not found. Either the WebCrypto \"crypto.subtle\" or Node.js \"crypto\" module must be available.'"
				},
				{
					"id": 1359,
					"name": "createCipher",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/aesCipher.ts",
							"line": 110,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 1360,
							"name": "createCipher",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1362,
										"name": "AesCipher"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1604,
					"name": "createHashRipemd160",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/hashRipemd160.ts",
							"line": 49,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 1605,
							"name": "createHashRipemd160",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 1619,
										"name": "NodeCryptoRipemd160Digest"
									},
									{
										"type": "reference",
										"id": 1613,
										"name": "Ripemd160PolyfillDigest"
									}
								]
							}
						}
					]
				},
				{
					"id": 1636,
					"name": "createHmacSha256",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/hmacSha256.ts",
							"line": 48,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 1637,
							"name": "createHmacSha256",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1638,
										"name": "Hmac"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1695,
					"name": "createPbkdf2",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/pbkdf2.ts",
							"line": 159,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 1696,
							"name": "createPbkdf2",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1698,
										"name": "Pbkdf2"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1587,
					"name": "decryptContent",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/encryption.ts",
							"line": 111,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 1588,
							"name": "decryptContent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Decrypts data encrypted with `encryptContent` with the\ntransit private key.",
								"returns": "decrypted content.\n"
							},
							"parameters": [
								{
									"id": 1589,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "encrypted content."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1590,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1591,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1592,
													"name": "privateKey",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "the hex string of the ECDSA private\nkey to use for decryption. If not provided, will use user's appPrivateKey."
													},
													"sources": [
														{
															"fileName": "packages/encryption/src/encryption.ts",
															"line": 114,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1592
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/encryption/src/encryption.ts",
													"line": 113,
													"character": 11
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1583,
					"name": "encryptContent",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/encryption.ts",
							"line": 59,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 1584,
							"name": "encryptContent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Encrypts the data provided with the app public key.",
								"returns": "Stringified ciphertext object\n"
							},
							"parameters": [
								{
									"id": 1585,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "data to encrypt"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								},
								{
									"id": 1586,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 1597,
										"name": "EncryptContentOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1490,
					"name": "getCryptoLib",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/cryptoUtils.ts",
							"line": 53,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 1491,
							"name": "getCryptoLib",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 1505,
												"name": "WebCryptoLib"
											},
											{
												"type": "reference",
												"id": 1508,
												"name": "NodeCryptoLib"
											}
										]
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1606,
					"name": "hashRipemd160",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/hashRipemd160.ts",
							"line": 63,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 1607,
							"name": "hashRipemd160",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1608,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 1483,
					"name": "isNodeCryptoAvailable",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/cryptoUtils.ts",
							"line": 7,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 1484,
							"name": "isNodeCryptoAvailable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 1485,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1486,
									"name": "withFeature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1487,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/encryption/src/cryptoUtils.ts",
													"line": 8,
													"character": 14
												}
											],
											"signatures": [
												{
													"id": 1488,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1489,
															"name": "nodeCrypto",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "__module"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "reference",
																"name": "T"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"name": "T"
									}
								]
							}
						}
					]
				},
				{
					"id": 1481,
					"name": "isSubtleCryptoAvailable",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/encryption/src/cryptoUtils.ts",
							"line": 3,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 1482,
							"name": "isSubtleCryptoAvailable",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						4621,
						4620,
						4622,
						4617,
						4628,
						4618,
						4619
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1375,
						1643,
						1706,
						1619,
						1613,
						1458,
						1662,
						1754,
						1742
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						1362,
						1597,
						1593,
						1638,
						1508,
						1698,
						1609,
						1505
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						1361,
						1476,
						1697,
						1493
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						1492
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						1359,
						1604,
						1636,
						1695,
						1587,
						1583,
						1490,
						1606,
						1483,
						1481
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/encryption/src/aesCipher.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1829,
			"name": "keychain",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/keychain\n\nCreate and manage keys/wallets for the Stacks blockchain.\n\n## Installation\n\n```\nnpm install @stacks/keychain\n```\n"
			},
			"originalName": "keychain/src/address-derivation",
			"children": [
				{
					"id": 4653,
					"name": "AllowedKeyEntropyBits",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1916
				},
				{
					"id": 4657,
					"name": "ConfigApp",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2119
				},
				{
					"id": 4659,
					"name": "ConstructorOptions",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2128
				},
				{
					"id": 4665,
					"name": "DEFAULT_PROFILE",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1985
				},
				{
					"id": 4641,
					"name": "IdentityKeyPair",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2085
				},
				{
					"id": 4643,
					"name": "IdentityNameValidityError",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2096
				},
				{
					"id": 4664,
					"name": "Profile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1967
				},
				{
					"id": 4663,
					"name": "ProfileImage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1963
				},
				{
					"id": 4666,
					"name": "Subdomains",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1986
				},
				{
					"id": 4630,
					"name": "Wallet",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/index.ts",
							"line": 5,
							"character": 26
						}
					],
					"target": 2140
				},
				{
					"id": 4658,
					"name": "WalletConfig",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2125
				},
				{
					"id": 4660,
					"name": "WalletSigner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2223
				},
				{
					"id": 4640,
					"name": "assertIsTruthy",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2081
				},
				{
					"id": 1887,
					"name": "default",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1858
				},
				{
					"id": 4638,
					"name": "deriveIdentityKeyPair",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2067
				},
				{
					"id": 4651,
					"name": "deriveRootKeychainFromMnemonic",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1906
				},
				{
					"id": 4652,
					"name": "encryptMnemonicFormatted",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1909
				},
				{
					"id": 4670,
					"name": "fetchProfile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2010
				},
				{
					"id": 4650,
					"name": "generateEncryptedMnemonicRootKeychain",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1899
				},
				{
					"id": 4649,
					"name": "generateMnemonicRootKeychain",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1893
				},
				{
					"id": 4637,
					"name": "getAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2064
				},
				{
					"id": 4635,
					"name": "getBitcoinAddressNode",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2055
				},
				{
					"id": 4634,
					"name": "getBitcoinPrivateKeychain",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2052
				},
				{
					"id": 4639,
					"name": "getBlockchainIdentities",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2070
				},
				{
					"id": 4636,
					"name": "getIdentityOwnerAddressNode",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2060
				},
				{
					"id": 4633,
					"name": "getIdentityPrivateKeychain",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2049
				},
				{
					"id": 4648,
					"name": "getProfileURLFromZoneFile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2115
				},
				{
					"id": 4642,
					"name": "makeIdentity",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2092
				},
				{
					"id": 4646,
					"name": "recursiveRestoreIdentities",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2108
				},
				{
					"id": 4668,
					"name": "registerSubdomain",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1999
				},
				{
					"id": 4667,
					"name": "registrars",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1989
				},
				{
					"id": 4669,
					"name": "signAndUploadProfile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2002
				},
				{
					"id": 4661,
					"name": "signProfileForUpload",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1953
				},
				{
					"id": 4662,
					"name": "uploadProfile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 1957
				},
				{
					"id": 4647,
					"name": "validateSubdomain",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2111
				},
				{
					"id": 4645,
					"name": "validateSubdomainAvailability",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2104
				},
				{
					"id": 4644,
					"name": "validateSubdomainFormat",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2101
				},
				{
					"id": 1858,
					"name": "Identity",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 1859,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 1860,
									"name": "new Identity",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 1861,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IdentityConstructorOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1858,
										"name": "Identity"
									}
								}
							]
						},
						{
							"id": 1863,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 32,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1864,
							"name": "defaultUsername",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 33,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1862,
							"name": "keyPair",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 31,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 2085,
								"name": "IdentityKeyPair"
							}
						},
						{
							"id": 1866,
							"name": "profile",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 35,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 1967,
								"name": "Profile"
							}
						},
						{
							"id": 1865,
							"name": "usernames",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 34,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1876,
							"name": "appPrivateKey",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 115,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1877,
									"name": "appPrivateKey",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1878,
											"name": "appDomain",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 1882,
							"name": "fetchNames",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 135,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1883,
									"name": "fetchNames",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1867,
							"name": "makeAuthResponse",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 51,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 1868,
									"name": "makeAuthResponse",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1869,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1870,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1871,
															"name": "appDomain",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/identity.ts",
																	"line": 58,
																	"character": 13
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1872,
															"name": "gaiaUrl",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/identity.ts",
																	"line": 59,
																	"character": 11
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1874,
															"name": "scopes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/keychain/src/identity.ts",
																	"line": 61,
																	"character": 10
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														},
														{
															"id": 1875,
															"name": "stxAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/keychain/src/identity.ts",
																	"line": 62,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1873,
															"name": "transitPublicKey",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/keychain/src/identity.ts",
																	"line": 60,
																	"character": 20
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1871,
																1872,
																1874,
																1875,
																1873
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1879,
							"name": "profileUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 121,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 1880,
									"name": "profileUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 1881,
											"name": "gaiaUrl",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 1884,
							"name": "refresh",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/identity.ts",
									"line": 146,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 1885,
									"name": "refresh",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Fetch existing information related to this identity, like username and profile information"
									},
									"parameters": [
										{
											"id": 1886,
											"name": "opts",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "RefreshOptions"
											},
											"defaultValue": "..."
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								1859
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1863,
								1864,
								1862,
								1866,
								1865
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								1876,
								1882,
								1867,
								1879,
								1884
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/identity.ts",
							"line": 30,
							"character": 21
						}
					]
				},
				{
					"id": 2017,
					"name": "URI",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2018,
							"name": "target",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/types/zone-file.d.ts",
									"line": 3,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2018
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/types/zone-file.d.ts",
							"line": 2,
							"character": 15
						}
					]
				},
				{
					"id": 2019,
					"name": "ZoneFile",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2020,
							"name": "$origin",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/types/zone-file.d.ts",
									"line": 6,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2021,
							"name": "uri",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/keychain/src/types/zone-file.d.ts",
									"line": 7,
									"character": 7
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 2017,
									"name": "URI"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2020,
								2021
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/keychain/src/types/zone-file.d.ts",
							"line": 5,
							"character": 27
						}
					]
				},
				{
					"id": 2026,
					"name": "DEFAULT_GAIA_HUB",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/gaia.ts",
							"line": 8,
							"character": 29
						}
					],
					"type": {
						"type": "literal",
						"value": "https://gaia.blockstack.org/hub/"
					},
					"defaultValue": "'https://gaia.blockstack.org/hub/'"
				},
				{
					"id": 1843,
					"name": "derivationPaths",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/address-derivation/index.ts",
							"line": 7,
							"character": 28
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1844,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1845,
									"name": "1",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 1846,
									"name": "2147483648",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1845,
										1846
									]
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 2037,
					"name": "connectToGaiaHubWithConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/gaia.ts",
							"line": 53,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 2038,
							"name": "connectToGaiaHubWithConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2039,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ConnectToGaiaOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "GaiaHubConfig"
							}
						}
					]
				},
				{
					"id": 1848,
					"name": "decrypt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/encryption/decrypt.ts",
							"line": 13,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 1849,
							"name": "decrypt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Decrypt an encrypted mnemonic phrase with a password.\nLegacy triplesec encrypted payloads are also supported.",
								"returns": "the raw mnemonic phrase\n"
							},
							"parameters": [
								{
									"id": 1850,
									"name": "dataBuffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Buffer"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 1851,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Password for data"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1833,
					"name": "deriveStxAddressChain",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/address-derivation/index.ts",
							"line": 16,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 1834,
							"name": "deriveStxAddressChain",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1835,
									"name": "chain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChainID"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1836,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 1837,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1838,
													"name": "rootNode",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "BIP32Interface"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1839,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 1841,
															"name": "address",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "..."
														},
														{
															"id": 1840,
															"name": "childKey",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "BIP32Interface"
															}
														},
														{
															"id": 1842,
															"name": "privateKey",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																1841,
																1840,
																1842
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1853,
					"name": "encrypt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/encryption/encrypt.ts",
							"line": 9,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 1854,
							"name": "encrypt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Encrypt a raw mnemonic phrase to be password protected",
								"returns": "The encrypted phrase\n"
							},
							"parameters": [
								{
									"id": 1855,
									"name": "phrase",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Raw mnemonic phrase"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1856,
									"name": "password",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Password to encrypt mnemonic with"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 1830,
					"name": "getDerivationPath",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/keychain/src/address-derivation/index.ts",
							"line": 12,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 1831,
							"name": "getDerivationPath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1832,
									"name": "chain",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ChainID"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2027,
					"name": "getHubInfo",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/gaia.ts",
							"line": 15,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 2028,
							"name": "getHubInfo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2029,
									"name": "hubUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HubInfo"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2030,
					"name": "getHubPrefix",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/gaia.ts",
							"line": 21,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 2031,
							"name": "getHubPrefix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2032,
									"name": "hubUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2033,
					"name": "makeGaiaAssociationToken",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/gaia.ts",
							"line": 26,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 2034,
							"name": "makeGaiaAssociationToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2035,
									"name": "secretKeyHex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2036,
									"name": "childPublicKeyHex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 2040,
					"name": "makeReadOnlyGaiaConfig",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/gaia.ts",
							"line": 80,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 2041,
							"name": "makeReadOnlyGaiaConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "When you already know the Gaia read URL, make a Gaia config that doesn't have to fetch `/hub_info`"
							},
							"parameters": [
								{
									"id": 2042,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ReadOnlyGaiaConfigOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "GaiaHubConfig"
							}
						}
					]
				},
				{
					"id": 2022,
					"name": "parseZoneFile",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/types/zone-file.d.ts",
							"line": 10,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 2023,
							"name": "parseZoneFile",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2024,
									"name": "zoneFile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 2019,
								"name": "ZoneFile"
							}
						}
					]
				},
				{
					"id": 2043,
					"name": "uploadToGaiaHub",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/keychain/src/utils/gaia.ts",
							"line": 120,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 2044,
							"name": "uploadToGaiaHub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2045,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2046,
									"name": "contents",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Buffer"
											},
											{
												"type": "reference",
												"name": "Blob"
											},
											{
												"type": "reference",
												"name": "ArrayBufferView"
											}
										]
									}
								},
								{
									"id": 2047,
									"name": "hubConfig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GaiaHubConfig"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						4653,
						4657,
						4659,
						4665,
						4641,
						4643,
						4664,
						4663,
						4666,
						4630,
						4658,
						4660,
						4640,
						1887,
						4638,
						4651,
						4652,
						4670,
						4650,
						4649,
						4637,
						4635,
						4634,
						4639,
						4636,
						4633,
						4648,
						4642,
						4646,
						4668,
						4667,
						4669,
						4661,
						4662,
						4647,
						4645,
						4644
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						1858
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2017,
						2019
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2026,
						1843
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2037,
						1848,
						1833,
						1853,
						1830,
						2027,
						2030,
						2033,
						2040,
						2022,
						2043
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/keychain/src/address-derivation/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2252,
			"name": "network",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/network\n\nNetwork and API library for working with Stacks blockchain nodes.\n\n## Installation\n\n```\nnpm install @stacks/network\n```\n\n## Usage\n\nCreating a Stacks mainnet, testnet or mocknet network\n\n```typescript\nimport { StacksMainnet, StacksTestnet, StacksMocknet } from '@stacks/network';\n\nconst network = new StacksMainnet();\n\nconst testnet = new StacksTestnet();\n\nconst mocknet = new StacksMocknet();\n```\n\nSetting a custom node URL\n\n```typescript\nnetwork.coreApiUrl = 'https://www.mystacksnode.com/';\n```\n\nCheck if network is mainnet\n\n```typescript\nconst isMainnet = network.isMainnet();\n```\n\nExample usage in transaction builder\n\n```typescript\nimport { makeSTXTokenTransfer } from '@stacks/transactions';\n\nconst txOptions = {\n  network,\n  recipient: 'SP2BS6HD7TN34V8Z5BNF8Q2AW3K8K2DPV4264CF26',\n  amount: new BigNum(12345),\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n};\n\nconst transaction = await makeSTXTokenTransfer(txOptions);\n```\n\nGet various API URLs\n\n```typescript\n  const txBroadcastUrl = network.getBroadcastApiUrl();\n\n  const feeEstimateUrl = network.getTransferFeeEstimateApiUrl();\n\n  const address = 'SP2BS6HD7TN34V8Z5BNF8Q2AW3K8K2DPV4264CF26';\n  const accountInfoUrl = network.getAccountApiUrl(address);\n\n  const contractName = 'hello_world';\n  const abiUrl = network.getAbiApiUrl(address, contractName);\n\n  const functionName = 'hello';\n  const readOnlyFunctionCallUrl = network.getReadOnlyFunctionCallApiUrl(address, contractName, functionName);\n\n  const nodeInfoUrl = network.getInfoUrl();\n\n  const blockTimeUrl = network.getBlockTimeInfoUrl();\n\n  const poxInfoUrl = network.getPoxInfoUrl();\n```"
			},
			"originalName": "network/src",
			"children": [
				{
					"id": 2304,
					"name": "StacksMainnet",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2305,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2306,
									"name": "new StacksMainnet",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2304,
										"name": "StacksMainnet"
									}
								}
							]
						},
						{
							"id": 2313,
							"name": "accountEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 46,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/accounts'",
							"implementationOf": {
								"type": "reference",
								"id": 2260,
								"name": "StacksNetwork.accountEndpoint"
							}
						},
						{
							"id": 2310,
							"name": "bnsLookupUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 43,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'",
							"implementationOf": {
								"type": "reference",
								"id": 2257,
								"name": "StacksNetwork.bnsLookupUrl"
							}
						},
						{
							"id": 2311,
							"name": "broadcastEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 44,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/transactions'",
							"implementationOf": {
								"type": "reference",
								"id": 2258,
								"name": "StacksNetwork.broadcastEndpoint"
							}
						},
						{
							"id": 2308,
							"name": "chainId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 41,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "ChainID"
							},
							"defaultValue": "...",
							"implementationOf": {
								"type": "reference",
								"id": 2255,
								"name": "StacksNetwork.chainId"
							}
						},
						{
							"id": 2314,
							"name": "contractAbiEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 47,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/interface'",
							"implementationOf": {
								"type": "reference",
								"id": 2261,
								"name": "StacksNetwork.contractAbiEndpoint"
							}
						},
						{
							"id": 2309,
							"name": "coreApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 42,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'",
							"implementationOf": {
								"type": "reference",
								"id": 2256,
								"name": "StacksNetwork.coreApiUrl"
							}
						},
						{
							"id": 2315,
							"name": "readOnlyFunctionCallEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 48,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/call-read'",
							"implementationOf": {
								"type": "reference",
								"id": 2262,
								"name": "StacksNetwork.readOnlyFunctionCallEndpoint"
							}
						},
						{
							"id": 2312,
							"name": "transferFeeEstimateEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 45,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/fees/transfer'",
							"implementationOf": {
								"type": "reference",
								"id": 2259,
								"name": "StacksNetwork.transferFeeEstimateEndpoint"
							}
						},
						{
							"id": 2307,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 40,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "TransactionVersion"
							},
							"defaultValue": "...",
							"implementationOf": {
								"type": "reference",
								"id": 2254,
								"name": "StacksNetwork.version"
							}
						},
						{
							"id": 2325,
							"name": "getAbiApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 55,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 2326,
									"name": "getAbiApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2327,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2328,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAbiApiUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2275,
								"name": "StacksNetwork.getAbiApiUrl"
							}
						},
						{
							"id": 2322,
							"name": "getAccountApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 53,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2323,
									"name": "getAccountApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2324,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAccountApiUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2271,
								"name": "StacksNetwork.getAccountApiUrl"
							}
						},
						{
							"id": 2336,
							"name": "getBlockTimeInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 66,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 2337,
									"name": "getBlockTimeInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBlockTimeInfoUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2289,
								"name": "StacksNetwork.getBlockTimeInfoUrl"
							}
						},
						{
							"id": 2318,
							"name": "getBroadcastApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 51,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 2319,
									"name": "getBroadcastApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBroadcastApiUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2265,
								"name": "StacksNetwork.getBroadcastApiUrl"
							}
						},
						{
							"id": 2334,
							"name": "getInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 65,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2335,
									"name": "getInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getInfoUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2286,
								"name": "StacksNetwork.getInfoUrl"
							}
						},
						{
							"id": 2344,
							"name": "getNameInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"comment": {
								"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
								"text": "This is intended for use in third-party wallets or in DApps that register names."
							},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 71,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2345,
									"name": "getNameInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
										"text": "This is intended for use in third-party wallets or in DApps that register names."
									},
									"parameters": [
										{
											"id": 2346,
											"name": "fullyQualifiedName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getNameInfo"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2300,
								"name": "StacksNetwork.getNameInfo"
							}
						},
						{
							"id": 2338,
							"name": "getPoxInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 67,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2339,
									"name": "getPoxInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getPoxInfoUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2292,
								"name": "StacksNetwork.getPoxInfoUrl"
							}
						},
						{
							"id": 2329,
							"name": "getReadOnlyFunctionCallApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 57,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 2330,
									"name": "getReadOnlyFunctionCallApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2331,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2332,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2333,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2280,
								"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
							}
						},
						{
							"id": 2340,
							"name": "getStackerInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 68,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2341,
									"name": "getStackerInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2342,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2343,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getStackerInfoUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2295,
								"name": "StacksNetwork.getStackerInfoUrl"
							}
						},
						{
							"id": 2320,
							"name": "getTransferFeeEstimateApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 52,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 2321,
									"name": "getTransferFeeEstimateApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2268,
								"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
							}
						},
						{
							"id": 2316,
							"name": "isMainnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 50,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2317,
									"name": "isMainnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2264,
										"name": "StacksNetwork.isMainnet"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"id": 2263,
								"name": "StacksNetwork.isMainnet"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2305
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2313,
								2310,
								2311,
								2308,
								2314,
								2309,
								2315,
								2312,
								2307
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2325,
								2322,
								2336,
								2318,
								2334,
								2344,
								2338,
								2329,
								2340,
								2320,
								2316
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/network/src/index.ts",
							"line": 39,
							"character": 26
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 2347,
							"name": "StacksTestnet"
						},
						{
							"type": "reference",
							"id": 2390,
							"name": "StacksMocknet"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 2253,
							"name": "StacksNetwork"
						}
					]
				},
				{
					"id": 2390,
					"name": "StacksMocknet",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2391,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2392,
									"name": "new StacksMocknet",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2390,
										"name": "StacksMocknet"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2306,
										"name": "StacksMainnet.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2305,
								"name": "StacksMainnet.constructor"
							}
						},
						{
							"id": 2399,
							"name": "accountEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 46,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/accounts'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "StacksMainnet.accountEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2260,
								"name": "StacksNetwork.accountEndpoint"
							}
						},
						{
							"id": 2396,
							"name": "bnsLookupUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 43,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "StacksMainnet.bnsLookupUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2257,
								"name": "StacksNetwork.bnsLookupUrl"
							}
						},
						{
							"id": 2397,
							"name": "broadcastEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 44,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/transactions'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "StacksMainnet.broadcastEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2258,
								"name": "StacksNetwork.broadcastEndpoint"
							}
						},
						{
							"id": 2394,
							"name": "chainId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 107,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "ChainID"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"id": 2308,
								"name": "StacksMainnet.chainId"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2255,
								"name": "StacksNetwork.chainId"
							}
						},
						{
							"id": 2400,
							"name": "contractAbiEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 47,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/interface'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "StacksMainnet.contractAbiEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2261,
								"name": "StacksNetwork.contractAbiEndpoint"
							}
						},
						{
							"id": 2395,
							"name": "coreApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 108,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'http://localhost:3999'",
							"overwrites": {
								"type": "reference",
								"id": 2309,
								"name": "StacksMainnet.coreApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2256,
								"name": "StacksNetwork.coreApiUrl"
							}
						},
						{
							"id": 2401,
							"name": "readOnlyFunctionCallEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 48,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/call-read'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "StacksMainnet.readOnlyFunctionCallEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2262,
								"name": "StacksNetwork.readOnlyFunctionCallEndpoint"
							}
						},
						{
							"id": 2398,
							"name": "transferFeeEstimateEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 45,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/fees/transfer'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "StacksMainnet.transferFeeEstimateEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2259,
								"name": "StacksNetwork.transferFeeEstimateEndpoint"
							}
						},
						{
							"id": 2393,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 106,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "TransactionVersion"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"id": 2307,
								"name": "StacksMainnet.version"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2254,
								"name": "StacksNetwork.version"
							}
						},
						{
							"id": 2411,
							"name": "getAbiApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 55,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 2412,
									"name": "getAbiApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2413,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2414,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2326,
										"name": "StacksMainnet.getAbiApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAbiApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "StacksMainnet.getAbiApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2275,
								"name": "StacksNetwork.getAbiApiUrl"
							}
						},
						{
							"id": 2408,
							"name": "getAccountApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 53,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2409,
									"name": "getAccountApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2410,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2323,
										"name": "StacksMainnet.getAccountApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAccountApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "StacksMainnet.getAccountApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2271,
								"name": "StacksNetwork.getAccountApiUrl"
							}
						},
						{
							"id": 2422,
							"name": "getBlockTimeInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 66,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 2423,
									"name": "getBlockTimeInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2337,
										"name": "StacksMainnet.getBlockTimeInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBlockTimeInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "StacksMainnet.getBlockTimeInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2289,
								"name": "StacksNetwork.getBlockTimeInfoUrl"
							}
						},
						{
							"id": 2404,
							"name": "getBroadcastApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 51,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 2405,
									"name": "getBroadcastApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2319,
										"name": "StacksMainnet.getBroadcastApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBroadcastApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "StacksMainnet.getBroadcastApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2265,
								"name": "StacksNetwork.getBroadcastApiUrl"
							}
						},
						{
							"id": 2420,
							"name": "getInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 65,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2421,
									"name": "getInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "StacksMainnet.getInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2334,
								"name": "StacksMainnet.getInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2286,
								"name": "StacksNetwork.getInfoUrl"
							}
						},
						{
							"id": 2430,
							"name": "getNameInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"comment": {
								"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
								"text": "This is intended for use in third-party wallets or in DApps that register names."
							},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 71,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2431,
									"name": "getNameInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
										"text": "This is intended for use in third-party wallets or in DApps that register names."
									},
									"parameters": [
										{
											"id": 2432,
											"name": "fullyQualifiedName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "StacksMainnet.getNameInfo"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getNameInfo"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "StacksMainnet.getNameInfo"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2300,
								"name": "StacksNetwork.getNameInfo"
							}
						},
						{
							"id": 2424,
							"name": "getPoxInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 67,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2425,
									"name": "getPoxInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "StacksMainnet.getPoxInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getPoxInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "StacksMainnet.getPoxInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2292,
								"name": "StacksNetwork.getPoxInfoUrl"
							}
						},
						{
							"id": 2415,
							"name": "getReadOnlyFunctionCallApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 57,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 2416,
									"name": "getReadOnlyFunctionCallApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2417,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2418,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2419,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "StacksMainnet.getReadOnlyFunctionCallApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "StacksMainnet.getReadOnlyFunctionCallApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2280,
								"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
							}
						},
						{
							"id": 2426,
							"name": "getStackerInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 68,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2427,
									"name": "getStackerInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2428,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2429,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "StacksMainnet.getStackerInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getStackerInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "StacksMainnet.getStackerInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2295,
								"name": "StacksNetwork.getStackerInfoUrl"
							}
						},
						{
							"id": 2406,
							"name": "getTransferFeeEstimateApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 52,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 2407,
									"name": "getTransferFeeEstimateApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2321,
										"name": "StacksMainnet.getTransferFeeEstimateApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "StacksMainnet.getTransferFeeEstimateApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2268,
								"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
							}
						},
						{
							"id": 2402,
							"name": "isMainnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 50,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2403,
									"name": "isMainnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2317,
										"name": "StacksMainnet.isMainnet"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2264,
										"name": "StacksNetwork.isMainnet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "StacksMainnet.isMainnet"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2263,
								"name": "StacksNetwork.isMainnet"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2391
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2399,
								2396,
								2397,
								2394,
								2400,
								2395,
								2401,
								2398,
								2393
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2411,
								2408,
								2422,
								2404,
								2420,
								2430,
								2424,
								2415,
								2426,
								2406,
								2402
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/network/src/index.ts",
							"line": 105,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "StacksMainnet"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 2253,
							"name": "StacksNetwork"
						}
					]
				},
				{
					"id": 2347,
					"name": "StacksTestnet",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2348,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2349,
									"name": "new StacksTestnet",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 2347,
										"name": "StacksTestnet"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2306,
										"name": "StacksMainnet.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2305,
								"name": "StacksMainnet.constructor"
							}
						},
						{
							"id": 2356,
							"name": "accountEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 46,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/accounts'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2313,
								"name": "StacksMainnet.accountEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2260,
								"name": "StacksNetwork.accountEndpoint"
							}
						},
						{
							"id": 2353,
							"name": "bnsLookupUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 43,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2310,
								"name": "StacksMainnet.bnsLookupUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2257,
								"name": "StacksNetwork.bnsLookupUrl"
							}
						},
						{
							"id": 2354,
							"name": "broadcastEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 44,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/transactions'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2311,
								"name": "StacksMainnet.broadcastEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2258,
								"name": "StacksNetwork.broadcastEndpoint"
							}
						},
						{
							"id": 2351,
							"name": "chainId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 101,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "ChainID"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"id": 2308,
								"name": "StacksMainnet.chainId"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2255,
								"name": "StacksNetwork.chainId"
							}
						},
						{
							"id": 2357,
							"name": "contractAbiEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 47,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/interface'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2314,
								"name": "StacksMainnet.contractAbiEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2261,
								"name": "StacksNetwork.contractAbiEndpoint"
							}
						},
						{
							"id": 2352,
							"name": "coreApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 102,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'https://stacks-node-api.testnet.stacks.co'",
							"overwrites": {
								"type": "reference",
								"id": 2309,
								"name": "StacksMainnet.coreApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2256,
								"name": "StacksNetwork.coreApiUrl"
							}
						},
						{
							"id": 2358,
							"name": "readOnlyFunctionCallEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 48,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/contracts/call-read'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2315,
								"name": "StacksMainnet.readOnlyFunctionCallEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2262,
								"name": "StacksNetwork.readOnlyFunctionCallEndpoint"
							}
						},
						{
							"id": 2355,
							"name": "transferFeeEstimateEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 45,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'/v2/fees/transfer'",
							"inheritedFrom": {
								"type": "reference",
								"id": 2312,
								"name": "StacksMainnet.transferFeeEstimateEndpoint"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2259,
								"name": "StacksNetwork.transferFeeEstimateEndpoint"
							}
						},
						{
							"id": 2350,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 100,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "TransactionVersion"
							},
							"defaultValue": "...",
							"overwrites": {
								"type": "reference",
								"id": 2307,
								"name": "StacksMainnet.version"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2254,
								"name": "StacksNetwork.version"
							}
						},
						{
							"id": 2368,
							"name": "getAbiApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 55,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 2369,
									"name": "getAbiApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2370,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2371,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2326,
										"name": "StacksMainnet.getAbiApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAbiApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2325,
								"name": "StacksMainnet.getAbiApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2275,
								"name": "StacksNetwork.getAbiApiUrl"
							}
						},
						{
							"id": 2365,
							"name": "getAccountApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 53,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2366,
									"name": "getAccountApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2367,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2323,
										"name": "StacksMainnet.getAccountApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getAccountApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2322,
								"name": "StacksMainnet.getAccountApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2271,
								"name": "StacksNetwork.getAccountApiUrl"
							}
						},
						{
							"id": 2379,
							"name": "getBlockTimeInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 66,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 2380,
									"name": "getBlockTimeInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2337,
										"name": "StacksMainnet.getBlockTimeInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBlockTimeInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2336,
								"name": "StacksMainnet.getBlockTimeInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2289,
								"name": "StacksNetwork.getBlockTimeInfoUrl"
							}
						},
						{
							"id": 2361,
							"name": "getBroadcastApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 51,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 2362,
									"name": "getBroadcastApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2319,
										"name": "StacksMainnet.getBroadcastApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getBroadcastApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2318,
								"name": "StacksMainnet.getBroadcastApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2265,
								"name": "StacksNetwork.getBroadcastApiUrl"
							}
						},
						{
							"id": 2377,
							"name": "getInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 65,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 2378,
									"name": "getInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2335,
										"name": "StacksMainnet.getInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2334,
								"name": "StacksMainnet.getInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2286,
								"name": "StacksNetwork.getInfoUrl"
							}
						},
						{
							"id": 2387,
							"name": "getNameInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"comment": {
								"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
								"text": "This is intended for use in third-party wallets or in DApps that register names."
							},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 71,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2388,
									"name": "getNameInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
										"text": "This is intended for use in third-party wallets or in DApps that register names."
									},
									"parameters": [
										{
											"id": 2389,
											"name": "fullyQualifiedName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2345,
										"name": "StacksMainnet.getNameInfo"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getNameInfo"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2344,
								"name": "StacksMainnet.getNameInfo"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2300,
								"name": "StacksNetwork.getNameInfo"
							}
						},
						{
							"id": 2381,
							"name": "getPoxInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 67,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 2382,
									"name": "getPoxInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2339,
										"name": "StacksMainnet.getPoxInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getPoxInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2338,
								"name": "StacksMainnet.getPoxInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2292,
								"name": "StacksNetwork.getPoxInfoUrl"
							}
						},
						{
							"id": 2372,
							"name": "getReadOnlyFunctionCallApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 57,
									"character": 31
								}
							],
							"signatures": [
								{
									"id": 2373,
									"name": "getReadOnlyFunctionCallApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2374,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2375,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2376,
											"name": "functionName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2330,
										"name": "StacksMainnet.getReadOnlyFunctionCallApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2329,
								"name": "StacksMainnet.getReadOnlyFunctionCallApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2280,
								"name": "StacksNetwork.getReadOnlyFunctionCallApiUrl"
							}
						},
						{
							"id": 2383,
							"name": "getStackerInfoUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 68,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2384,
									"name": "getStackerInfoUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2385,
											"name": "contractAddress",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2386,
											"name": "contractName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2341,
										"name": "StacksMainnet.getStackerInfoUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getStackerInfoUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2340,
								"name": "StacksMainnet.getStackerInfoUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2295,
								"name": "StacksNetwork.getStackerInfoUrl"
							}
						},
						{
							"id": 2363,
							"name": "getTransferFeeEstimateApiUrl",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 52,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 2364,
									"name": "getTransferFeeEstimateApiUrl",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2321,
										"name": "StacksMainnet.getTransferFeeEstimateApiUrl"
									},
									"implementationOf": {
										"type": "reference",
										"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2320,
								"name": "StacksMainnet.getTransferFeeEstimateApiUrl"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2268,
								"name": "StacksNetwork.getTransferFeeEstimateApiUrl"
							}
						},
						{
							"id": 2359,
							"name": "isMainnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 50,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 2360,
									"name": "isMainnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 2317,
										"name": "StacksMainnet.isMainnet"
									},
									"implementationOf": {
										"type": "reference",
										"id": 2264,
										"name": "StacksNetwork.isMainnet"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 2316,
								"name": "StacksMainnet.isMainnet"
							},
							"implementationOf": {
								"type": "reference",
								"id": 2263,
								"name": "StacksNetwork.isMainnet"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2348
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2356,
								2353,
								2354,
								2351,
								2357,
								2352,
								2358,
								2355,
								2350
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2368,
								2365,
								2379,
								2361,
								2377,
								2387,
								2381,
								2372,
								2383,
								2363,
								2359
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/network/src/index.ts",
							"line": 99,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 2304,
							"name": "StacksMainnet"
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"id": 2253,
							"name": "StacksNetwork"
						}
					]
				},
				{
					"id": 2253,
					"name": "StacksNetwork",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2260,
							"name": "accountEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 10,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2257,
							"name": "bnsLookupUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 7,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2258,
							"name": "broadcastEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 8,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2255,
							"name": "chainId",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 5,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "ChainID"
							}
						},
						{
							"id": 2261,
							"name": "contractAbiEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 11,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2256,
							"name": "coreApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 6,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2275,
							"name": "getAbiApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 17,
									"character": 14
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2276,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2277,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2278,
													"name": "address",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2279,
													"name": "contract",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2271,
							"name": "getAccountApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 16,
									"character": 18
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2272,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2273,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2274,
													"name": "address",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2289,
							"name": "getBlockTimeInfoUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 24,
									"character": 21
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2290,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2291,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2265,
							"name": "getBroadcastApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 14,
									"character": 20
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2266,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2267,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2286,
							"name": "getInfoUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 23,
									"character": 12
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2287,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2288,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2300,
							"name": "getNameInfo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "Get WHOIS-like information for a name, including the address that owns it,\nthe block at which it expires, and the zone file anchored to it (if available).",
								"text": "This is intended for use in third-party wallets or in DApps that register names.",
								"tags": [
									{
										"tag": "param",
										"text": "the name to query.  Can be on-chain of off-chain.",
										"param": "fullyQualifiedName"
									},
									{
										"tag": "returns",
										"text": "a promise that resolves to the WHOIS-like information\n"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 36,
									"character": 13
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2301,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2302,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2303,
													"name": "fullyQualifiedName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 2292,
							"name": "getPoxInfoUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 25,
									"character": 15
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2293,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2294,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2280,
							"name": "getReadOnlyFunctionCallApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 18,
									"character": 31
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2281,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2282,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2283,
													"name": "contractAddress",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2284,
													"name": "contractName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2285,
													"name": "functionName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2295,
							"name": "getStackerInfoUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 26,
									"character": 19
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2296,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2297,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 2298,
													"name": "contractAddress",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2299,
													"name": "contractName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2268,
							"name": "getTransferFeeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 15,
									"character": 30
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2269,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"signatures": [
										{
											"id": 2270,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 2262,
							"name": "readOnlyFunctionCallEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 12,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2259,
							"name": "transferFeeEstimateEndpoint",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 9,
									"character": 29
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2254,
							"name": "version",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/network/src/index.ts",
									"line": 4,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "TransactionVersion"
							}
						},
						{
							"id": 2263,
							"name": "isMainnet",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"signatures": [
								{
									"id": 2264,
									"name": "isMainnet",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2260,
								2257,
								2258,
								2255,
								2261,
								2256,
								2275,
								2271,
								2289,
								2265,
								2286,
								2300,
								2292,
								2280,
								2295,
								2268,
								2262,
								2259,
								2254
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2263
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/network/src/index.ts",
							"line": 3,
							"character": 30
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"id": 2304,
							"name": "StacksMainnet"
						},
						{
							"type": "reference",
							"id": 2390,
							"name": "StacksMocknet"
						},
						{
							"type": "reference",
							"id": 2347,
							"name": "StacksTestnet"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2304,
						2390,
						2347
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2253
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/network/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2433,
			"name": "profile",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/profile\n\nFunctions for manipulating user profiles.\n\n## Installation\n\n```\nnpm install @stacks/profile\n```\n"
			},
			"originalName": "profile/src",
			"children": [
				{
					"id": 4672,
					"name": "Profile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/profile/src/index.ts",
							"line": 2,
							"character": 9
						}
					],
					"target": 2446
				},
				{
					"id": 4681,
					"name": "extractProfile",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/profile/src/index.ts",
							"line": 15,
							"character": 16
						}
					],
					"target": 2625
				},
				{
					"id": 4678,
					"name": "signProfileToken",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/profile/src/index.ts",
							"line": 12,
							"character": 18
						}
					],
					"target": 2606
				},
				{
					"id": 4680,
					"name": "verifyProfileToken",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/profile/src/index.ts",
							"line": 14,
							"character": 20
						}
					],
					"target": 2621
				},
				{
					"id": 4679,
					"name": "wrapProfileToken",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/profile/src/index.ts",
							"line": 13,
							"character": 18
						}
					],
					"target": 2615
				},
				{
					"id": 2565,
					"name": "getName",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/profile/src/profileSchemas/personUtils.ts",
							"line": 1,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 2566,
							"name": "getName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 2567,
									"name": "profile",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						4672,
						4681,
						4678,
						4680,
						4679
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2565
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/profile/src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2629,
			"name": "stacking",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/stacking [![npm](https://img.shields.io/npm/v/@stacks/stacking?color=red)](https://www.npmjs.com/package/@stacks/stacking)\n\nLibrary for PoX Stacking.\n\n## Installation\n\n```shell\nnpm install @stacks/stacking bn.js\n```\n\n## Initialization\n\n```typescript\nimport { getNonce } from '@stacks/transactions';\nimport { StacksTestnet, StacksMainnet } from '@stacks/network';\nimport { StackingClient } from '@stacks/stacking';\nimport BN from 'bn.js';\n\nconst network = new StacksTestnet();\n// for mainnet: const network = new StacksMainnet();\nconst client = new StackingClient(address, network);\n\n// the stacks STX address\nconst address = 'ST3XKKN4RPV69NN1PHFDNX3TYKXT7XPC4N8KC1ARH';\n// a BTC address for reward payouts\nconst poxAddress = 'mvuYDknzDtPgGqm2GnbAbmGMLwiyW3AwFP';\n// number cycles to stack\nconst cycles = 3;\n// how much to stack, in microSTX\nconst amountMicroStx = new BN(100000000000);\n// private key for transaction signing\nconst privateKey = 'd48f215481c16cbe6426f8e557df9b78895661971d71735126545abddcd5377001';\n// block height at which to stack\nconst burnBlockHeight = 2000;\n```\n\n## Check stacking eligibility\n\n```typescript\nconst stackingEligibility = await client.canStack({ poxAddress, cycles });\n\n// {\n//   eligible: false,\n//   reason: 'ERR_STACKING_INVALID_LOCK_PERIOD',\n// }\n```\n\n## Stack STX\n\n```typescript\nconst stackingResults = await client.stack({\n  amountMicroStx,\n  poxAddress,\n  cycles,\n  privateKey,\n  burnBlockHeight,\n});\n\n// {\n//   txid: '0xf6e9dbf6a26c1b73a14738606cb2232375d1b440246e6bbc14a45b3a66618481',\n// }\n```\n\n## Will Stacking be executed in the next cycle?\n\n```typescript\nconst stackingEnabledNextCycle = await client.isStackingEnabledNextCycle();\n\n// true / false\n```\n\n## How long (in seconds) is a Stacking cycle?\n\n```typescript\nconst cycleDuration = await client.getCycleDuration();\n\n// 120\n```\n\n## How much time is left (in seconds) until the next cycle begins?\n\n```typescript\nconst secondsUntilNextCycle = await client.getSecondsUntilNextCycle();\n\n// 600000\n```\n\n## Get PoX info\n\n```typescript\nconst poxInfo = await client.getPoxInfo();\n\n// {\n//   contract_id: 'ST000000000000000000002AMW42H.pox',\n//   first_burnchain_block_height: 0,\n//   min_amount_ustx: 83335083333333,\n//   prepare_cycle_length: 30,\n//   rejection_fraction: 3333333333333333,\n//   reward_cycle_id: 17,\n//   reward_cycle_length: 120,\n//   rejection_votes_left_required: 0,\n//   total_liquid_supply_ustx: 40000840000000000\n// }\n```\n\n## Get Stacks node info\n\n```typescript\nconst coreInfo = await client.getCoreInfo();\n\n// {\n//   peer_version: 385875968,\n//   pox_consensus: 'bb88a6e6e65fa7c974d3f6e91a941d05cc3dff8e',\n//   burn_block_height: 2133,\n//   stable_pox_consensus: '2284451c3e623237def1f8caed1c11fa46b6f0cc',\n//   stable_burn_block_height: 2132,\n//   server_version: 'blockstack-core 0.0.1 => 23.0.0.0 (HEAD:a4deb7a+, release build, linux [x86_64])',\n//   network_id: 2147483648,\n//   parent_network_id: 3669344250,\n//   stacks_tip_height: 1797,\n//   stacks_tip: '016df36c6a154cb6114c469a28cc0ce8b415a7af0527f13f15e66e27aa480f94',\n//   stacks_tip_consensus_hash: 'bb88a6e6e65fa7c974d3f6e91a941d05cc3dff8e',\n//   unanchored_tip: '6b93d2c62fc07cf44302d4928211944d2debf476e5c71fb725fb298a037323cc',\n//   exit_at_block_height: null\n// }\n```\n\n## Get account balance\n\n```typescript\nconst responseBalanceInfo = await client.getAccountBalance();\n\n// 800000000000\n```\n\n## Does account have sufficient STX to meet minimum threshold?\n\n```js\nconst hasMinStxAmount = await client.hasMinimumStx();\n\n// true / false\n```\n\n## Get account stacking status\n\n```typescript\nconst stackingStatus = await client.getStatus();\n\n// {\n//   stacked: true,\n//   details: {\n//     amount_microstx: '80000000000000',\n//     first_reward_cycle: 18,\n//     lock_period: 10,\n//     unlock_height: 3020,\n//     pox_address: {\n//       version: '00',\n//       hashbytes: '05cf52a44bf3e6829b4f8c221cc675355bf83b7d'\n//     }\n//   }\n// }\n```\n\n## Delegation\n\nThere are four methods available for delegation, two for the delegators and two for the delegatee.\n\n### Delegatee\n\nIf you are the account owner (\"stacker\"), you can delegate or revoke delegation rights.\n\n#### Delegate STX\n\n```typescript\n// STX address of the delegator\nconst delegateTo = 'ST2MCYPWTFMD2MGR5YY695EJG0G1R4J2BTJPRGM7H';\n// burn height at which the delegation relationship should be revoked (optional)\nconst untilBurnBlockHeight = 5000;\n\nconst delegetateResponse = await client.delegateStx({\n  amountMicroStx,\n  delegateTo,\n  untilBurnBlockHeight, // optional\n  privateKey,\n});\n\n// {\n//   txid: '0xf6e9dbf6a26c1b73a14738606cb2232375d1b440246e6bbc14a45b3a66618481',\n// }\n```\n\n#### Revoke delegation\n\n```typescript\n// note that the parameter here is not JSON\nconst revokeResponse = await client.revokeDelegateStx(privateKey);\n\n// {\n//   txid: '0xf6e9dbf6a26c1b73a14738606cb2232375d1b440246e6bbc14a45b3a66618481',\n// }\n```\n\n### Delegator\n\nIf you are the delegator, you can stack (\"lock up\") tokens for your users and commit to stacking participation for upcoming reward cycles.\n\n#### Stack delegated STX\n\n```typescript\n// delegators would initiate a different client\nconst delegatorAddress = 'ST22X605P0QX2BJC3NXEENXDPFCNJPHE02DTX5V74';\n// delegator private key for transaction signing\nconst delegatorPrivateKey = 'd48f215481c16cbe6426f8e557df9b78895661971d71735126545abddcd5377001';\n// the BTC address for reward payouts\nconst delegatorBtcAddress = 'msiYwJCvXEzjgq6hDwD9ueBka6MTfN962Z';\n\n// if you call this method multiple times in the same block, you need to increase the nonce manually\nlet nonce = getNonce(delegatorAddress, network);\nnonce = nonce.add(new BN(1));\n\nconst delegatorClient = new StackingClient(delegatorAddress, network);\n\nconst delegetateStackResponses = await delegatorClient.delegateStackStx({\n  stacker: address,\n  amountMicroStx,\n  poxAddress: delegatorBtcAddress,\n  burnBlockHeight,\n  cycles,\n  privateKey: delegatorPrivateKey,\n  nonce, // optional\n});\n\n//   {\n//     txid: '0xf6e9dbf6a26c1b73a14738606cb2232375d1b440246e6bbc14a45b3a66618481',\n//   }\n```\n\n#### Commit to stacking\n\n```typescript\n// reward cycle id to commit to\nconst rewardCycle = 12;\n\nconst delegetateCommitResponse = await delegatorClient.stackAggregationCommit({\n  poxAddress: delegatorBtcAddress,\n  rewardCycle,\n  privateKey: privateKeyDelegate,\n});\n\n// {\n//   txid: '0xf6e9dbf6a26c1b73a14738606cb2232375d1b440246e6bbc14a45b3a66618481',\n// }\n```\n"
			},
			"originalName": "stacking/src/constants",
			"children": [
				{
					"id": 4689,
					"name": "InvalidAddressError",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2831
				},
				{
					"id": 4684,
					"name": "btcAddressVersionToHashMode",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2812
				},
				{
					"id": 4686,
					"name": "decodeBtcAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2818
				},
				{
					"id": 4685,
					"name": "getAddressHashMode",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2815
				},
				{
					"id": 4687,
					"name": "getBTCAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2824
				},
				{
					"id": 4688,
					"name": "getErrorString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2828
				},
				{
					"id": 2630,
					"name": "StackingErrors",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 2646,
							"name": "ERR_DELEGATION_EXPIRES_DURING_LOCK",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 17,
									"character": 36
								}
							],
							"defaultValue": "21"
						},
						{
							"id": 2648,
							"name": "ERR_DELEGATION_POX_ADDR_REQUIRED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 19,
									"character": 34
								}
							],
							"defaultValue": "23"
						},
						{
							"id": 2647,
							"name": "ERR_DELEGATION_TOO_MUCH_LOCKED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 18,
									"character": 32
								}
							],
							"defaultValue": "22"
						},
						{
							"id": 2649,
							"name": "ERR_INVALID_START_BURN_HEIGHT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 20,
									"character": 31
								}
							],
							"defaultValue": "24"
						},
						{
							"id": 2644,
							"name": "ERR_NOT_ALLOWED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 15,
									"character": 17
								}
							],
							"defaultValue": "19"
						},
						{
							"id": 2645,
							"name": "ERR_STACKING_ALREADY_DELEGATED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 16,
									"character": 32
								}
							],
							"defaultValue": "20"
						},
						{
							"id": 2642,
							"name": "ERR_STACKING_ALREADY_REJECTED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 13,
									"character": 31
								}
							],
							"defaultValue": "17"
						},
						{
							"id": 2634,
							"name": "ERR_STACKING_ALREADY_STACKED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 5,
									"character": 30
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 2636,
							"name": "ERR_STACKING_EXPIRED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 7,
									"character": 22
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 2632,
							"name": "ERR_STACKING_INSUFFICIENT_FUNDS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 3,
									"character": 33
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 2643,
							"name": "ERR_STACKING_INVALID_AMOUNT",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 14,
									"character": 29
								}
							],
							"defaultValue": "18"
						},
						{
							"id": 2633,
							"name": "ERR_STACKING_INVALID_LOCK_PERIOD",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 4,
									"character": 34
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 2641,
							"name": "ERR_STACKING_INVALID_POX_ADDRESS",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 12,
									"character": 34
								}
							],
							"defaultValue": "13"
						},
						{
							"id": 2635,
							"name": "ERR_STACKING_NO_SUCH_PRINCIPAL",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 6,
									"character": 32
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 2638,
							"name": "ERR_STACKING_PERMISSION_DENIED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 9,
									"character": 32
								}
							],
							"defaultValue": "9"
						},
						{
							"id": 2640,
							"name": "ERR_STACKING_POX_ADDRESS_IN_USE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 11,
									"character": 33
								}
							],
							"defaultValue": "12"
						},
						{
							"id": 2637,
							"name": "ERR_STACKING_STX_LOCKED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 8,
									"character": 25
								}
							],
							"defaultValue": "6"
						},
						{
							"id": 2639,
							"name": "ERR_STACKING_THRESHOLD_NOT_MET",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 10,
									"character": 32
								}
							],
							"defaultValue": "11"
						},
						{
							"id": 2631,
							"name": "ERR_STACKING_UNREACHABLE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/constants.ts",
									"line": 2,
									"character": 26
								}
							],
							"defaultValue": "255"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								2646,
								2648,
								2647,
								2649,
								2644,
								2645,
								2642,
								2634,
								2636,
								2632,
								2643,
								2633,
								2641,
								2635,
								2638,
								2640,
								2637,
								2639,
								2631
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/constants.ts",
							"line": 1,
							"character": 26
						}
					]
				},
				{
					"id": 2718,
					"name": "StackingClient",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 2719,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 2720,
									"name": "new StackingClient",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 2721,
											"name": "address",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2722,
											"name": "network",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "StacksNetwork"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 2718,
										"name": "StackingClient"
									}
								}
							]
						},
						{
							"id": 2723,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2724,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true
							},
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 2743,
							"name": "canStack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 280,
									"character": 16
								}
							],
							"signatures": [
								{
									"id": 2744,
									"name": "canStack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if account can lock stx",
										"returns": "that resolves to a StackingEligibility object if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 2745,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2691,
												"name": "CanLockStxOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2688,
												"name": "StackingEligibility"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2752,
							"name": "delegateStackStx",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 397,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 2753,
									"name": "delegateStackStx",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "As a delegator, generate and broadcast transactions to stack for multiple delegatees. This will lock up tokens owned by the delegatees.",
										"returns": "that resolves to a broadcasted txid if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 2754,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2706,
												"name": "DelegateStackStxOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TxBroadcastResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2749,
							"name": "delegateStx",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 364,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2750,
									"name": "delegateStx",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "As a delegatee, generate and broadcast a transaction to create a delegation relationship",
										"returns": "that resolves to a broadcasted txid if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 2751,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2700,
												"name": "DelegateStxOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TxBroadcastResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2733,
							"name": "getAccountBalance",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 206,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2734,
									"name": "getAccountBalance",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get account balance",
										"returns": "that resolves to a BigNum if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "BN"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2731,
							"name": "getAccountStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 196,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 2732,
									"name": "getAccountStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2725,
							"name": "getCoreInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 165,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 2726,
									"name": "getCoreInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get stacks node info",
										"returns": "that resolves to a CoreInfo response if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2682,
												"name": "CoreInfo"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2735,
							"name": "getCycleDuration",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 221,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 2736,
									"name": "getCycleDuration",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get reward cycle duration in seconds",
										"returns": "that resolves to a number if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2770,
							"name": "getDelegateOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 514,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 2771,
									"name": "getDelegateOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2772,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2773,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2775,
															"name": "amountMicroStx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 522,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "BN"
															}
														},
														{
															"id": 2774,
															"name": "contract",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 521,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2776,
															"name": "delegateTo",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 523,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2778,
															"name": "poxAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 525,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2777,
															"name": "untilBurnBlockHeight",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 524,
																	"character": 24
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																2775,
																2774,
																2776,
																2778,
																2777
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ContractCallOptions"
									}
								}
							]
						},
						{
							"id": 2779,
							"name": "getDelegateStackOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 559,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2780,
									"name": "getDelegateStackOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2781,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2782,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2785,
															"name": "amountMicroStx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 570,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "BN"
															}
														},
														{
															"id": 2787,
															"name": "burnBlockHeight",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 572,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2783,
															"name": "contract",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 568,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2788,
															"name": "cycles",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 573,
																	"character": 10
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2789,
															"name": "nonce",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 574,
																	"character": 9
																}
															],
															"type": {
																"type": "reference",
																"name": "BN"
															}
														},
														{
															"id": 2786,
															"name": "poxAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 571,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2784,
															"name": "stacker",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 569,
																	"character": 11
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																2785,
																2787,
																2783,
																2788,
																2789,
																2786,
																2784
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ContractCallOptions"
									}
								}
							]
						},
						{
							"id": 2727,
							"name": "getPoxInfo",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 175,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 2728,
									"name": "getPoxInfo",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get stacks node pox info",
										"returns": "that resolves to a PoxInfo response if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2651,
												"name": "PoxInfo"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2797,
							"name": "getRevokeDelegateStxOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 638,
									"character": 29
								}
							],
							"signatures": [
								{
									"id": 2798,
									"name": "getRevokeDelegateStxOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2799,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ContractCallOptions"
									}
								}
							]
						},
						{
							"id": 2737,
							"name": "getSecondsUntilNextCycle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 237,
									"character": 32
								}
							],
							"signatures": [
								{
									"id": 2738,
									"name": "getSecondsUntilNextCycle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get number of seconds until next reward cycle",
										"returns": "that resolves to a number if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2790,
							"name": "getStackAggregationCommitOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 608,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 2791,
									"name": "getStackAggregationCommitOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2792,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2793,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2794,
															"name": "contract",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 613,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2795,
															"name": "poxAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 614,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2796,
															"name": "rewardCycle",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 615,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																2794,
																2795,
																2796
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ContractCallOptions"
									}
								}
							]
						},
						{
							"id": 2761,
							"name": "getStackOptions",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 475,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2762,
									"name": "getStackOptions",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 2763,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2764,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2767,
															"name": "amountMicroStx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 484,
																	"character": 18
																}
															],
															"type": {
																"type": "reference",
																"name": "BN"
															}
														},
														{
															"id": 2769,
															"name": "burnBlockHeight",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 486,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2768,
															"name": "contract",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 485,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2765,
															"name": "cycles",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 482,
																	"character": 10
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2766,
															"name": "poxAddress",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 483,
																	"character": 14
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																2767,
																2769,
																2768,
																2765,
																2766
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ContractCallOptions"
									}
								}
							]
						},
						{
							"id": 2800,
							"name": "getStatus",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 657,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2801,
									"name": "getStatus",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check stacking status",
										"returns": "that resolves to a StackerInfo object if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 2660,
												"name": "StackerInfo"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2729,
							"name": "getTargetBlockTime",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 185,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 2730,
									"name": "getTargetBlockTime",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get stacks node target block time",
										"returns": "that resolves to a number if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2741,
							"name": "hasMinimumStx",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 267,
									"character": 21
								}
							],
							"signatures": [
								{
									"id": 2742,
									"name": "hasMinimumStx",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if account has minimum require amount of Stacks for stacking",
										"returns": "that resolves to a bool if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2739,
							"name": "isStackingEnabledNextCycle",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 258,
									"character": 34
								}
							],
							"signatures": [
								{
									"id": 2740,
									"name": "isStackingEnabledNextCycle",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Check if stacking is enabled for next reward cycle",
										"returns": "that resolves to a bool if the operation succeeds\n"
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2802,
							"name": "modifyLockTxFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 709,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2803,
									"name": "modifyLockTxFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Adjust microstacks amount for locking after taking into account transaction fees",
										"returns": "that resolves to a transaction object if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 2804,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2805,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2807,
															"name": "amountMicroStx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 709,
																	"character": 81
																}
															],
															"type": {
																"type": "reference",
																"name": "BN"
															}
														},
														{
															"id": 2806,
															"name": "tx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 709,
																	"character": 46
																}
															],
															"type": {
																"type": "reference",
																"name": "StacksTransaction"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																2807,
																2806
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "StacksTransaction"
									}
								}
							]
						},
						{
							"id": 2808,
							"name": "parseContractId",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 722,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 2809,
									"name": "parseContractId",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Parses a contract identifier and ensures it is formatted correctly",
										"returns": "a contract address and name\n"
									},
									"parameters": [
										{
											"id": 2810,
											"name": "contract",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							]
						},
						{
							"id": 2758,
							"name": "revokeDelegateStx",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 461,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 2759,
									"name": "revokeDelegateStx",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "As a delegatee, generate and broadcast a transaction to terminate the delegation relationship",
										"returns": "that resolves to a broadcasted txid if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 2760,
											"name": "privateKey",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "the private key to be used for the revoke call\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TxBroadcastResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2746,
							"name": "stack",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 332,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 2747,
									"name": "stack",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Generate and broadcast a stacking transaction to lock STX",
										"returns": "that resolves to a broadcasted txid if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 2748,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2694,
												"name": "LockStxOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TxBroadcastResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						},
						{
							"id": 2755,
							"name": "stackAggregationCommit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 433,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 2756,
									"name": "stackAggregationCommit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "As a delegator, generate and broadcast a transaction to commit partially committed delegatee tokens",
										"returns": "that resolves to a broadcasted txid if the operation succeeds\n"
									},
									"parameters": [
										{
											"id": 2757,
											"name": "__namedParameters",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 2714,
												"name": "StackAggregationCommitOptions"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "TxBroadcastResult"
											}
										],
										"name": "Promise"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								2719
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2723,
								2724
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								2743,
								2752,
								2749,
								2733,
								2731,
								2725,
								2735,
								2770,
								2779,
								2727,
								2797,
								2737,
								2790,
								2761,
								2800,
								2729,
								2741,
								2739,
								2802,
								2808,
								2758,
								2746,
								2755
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 157,
							"character": 27
						}
					]
				},
				{
					"id": 2685,
					"name": "BalanceInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2686,
							"name": "balance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 76,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2687,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 77,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2686,
								2687
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 75,
							"character": 28
						}
					]
				},
				{
					"id": 2675,
					"name": "BlockTimeInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2676,
							"name": "mainnet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 62,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2677,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2678,
											"name": "target_block_time",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/stacking/src/index.ts",
													"line": 63,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2678
											]
										}
									]
								}
							}
						},
						{
							"id": 2679,
							"name": "testnet",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 65,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2680,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2681,
											"name": "target_block_time",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/stacking/src/index.ts",
													"line": 66,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2681
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2676,
								2679
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 61,
							"character": 30
						}
					]
				},
				{
					"id": 2691,
					"name": "CanLockStxOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Lock stx check options",
						"tags": [
							{
								"tag": "param",
								"text": "the reward Bitcoin address",
								"param": "poxAddress"
							},
							{
								"tag": "param",
								"text": "number of cycles to lock\n",
								"param": "cycles"
							}
						]
					},
					"children": [
						{
							"id": 2693,
							"name": "cycles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 93,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2692,
							"name": "poxAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 92,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2693,
								2692
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 91,
							"character": 34
						}
					]
				},
				{
					"id": 2682,
					"name": "CoreInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2683,
							"name": "burn_block_height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 71,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2684,
							"name": "stable_pox_consensus",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 72,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2683,
								2684
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 70,
							"character": 25
						}
					]
				},
				{
					"id": 2706,
					"name": "DelegateStackStxOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Delegate stack stx options",
						"tags": [
							{
								"tag": "param",
								"text": "the STX address of the delegator",
								"param": "stacker"
							},
							{
								"tag": "param",
								"text": "number of microstacks to lock",
								"param": "amountMicroStx"
							},
							{
								"tag": "param",
								"text": "the reward Bitcoin address of the delegator",
								"param": "poxAddress"
							},
							{
								"tag": "param",
								"text": "the burnchain block height to begin lock",
								"param": "burnBlockHeight"
							},
							{
								"tag": "param",
								"text": "number of cycles to lock",
								"param": "cycles"
							},
							{
								"tag": "param",
								"text": "private key to sign transaction",
								"param": "privateKey"
							},
							{
								"tag": "param",
								"text": "nonce for the transaction\n",
								"param": "nonce"
							}
						]
					},
					"children": [
						{
							"id": 2708,
							"name": "amountMicroStx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 143,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2710,
							"name": "burnBlockHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 145,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2711,
							"name": "cycles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 146,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2713,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 148,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2709,
							"name": "poxAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 144,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2712,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 147,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2707,
							"name": "stacker",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 142,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2708,
								2710,
								2711,
								2713,
								2709,
								2712,
								2707
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 141,
							"character": 40
						}
					]
				},
				{
					"id": 2700,
					"name": "DelegateStxOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Delegate stx options",
						"tags": [
							{
								"tag": "param",
								"text": "number of microstacks to delegate",
								"param": "amountMicroStx"
							},
							{
								"tag": "param",
								"text": "the STX address of the delegatee",
								"param": "delegateTo"
							},
							{
								"tag": "param",
								"text": "the burnchain block height after which delegation is revoked",
								"param": "untilBurnBlockHeight"
							},
							{
								"tag": "param",
								"text": "the reward Bitcoin address of the delegator",
								"param": "poxAddress"
							},
							{
								"tag": "param",
								"text": "private key to sign transaction\n",
								"param": "privateKey"
							}
						]
					},
					"children": [
						{
							"id": 2701,
							"name": "amountMicroStx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 123,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2702,
							"name": "delegateTo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 124,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2704,
							"name": "poxAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 126,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2705,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 127,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2703,
							"name": "untilBurnBlockHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 125,
									"character": 22
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2701,
								2702,
								2704,
								2705,
								2703
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 122,
							"character": 35
						}
					]
				},
				{
					"id": 2694,
					"name": "LockStxOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Lock stx options",
						"tags": [
							{
								"tag": "param",
								"text": "private key to sign transaction",
								"param": "key"
							},
							{
								"tag": "param",
								"text": "the reward Bitcoin address",
								"param": "poxAddress"
							},
							{
								"tag": "param",
								"text": "number of cycles to lock",
								"param": "cycles"
							},
							{
								"tag": "param",
								"text": "number of microstacks to lock",
								"param": "amountMicroStx"
							},
							{
								"tag": "param",
								"text": "the burnchain block height to begin lock\n",
								"param": "burnBlockHeight"
							}
						]
					},
					"children": [
						{
							"id": 2698,
							"name": "amountMicroStx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 109,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 2699,
							"name": "burnBlockHeight",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 110,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2696,
							"name": "cycles",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 107,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2697,
							"name": "poxAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 108,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2695,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 106,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2698,
								2699,
								2696,
								2697,
								2695
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 105,
							"character": 31
						}
					]
				},
				{
					"id": 2651,
					"name": "PoxInfo",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2652,
							"name": "contract_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 33,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2653,
							"name": "first_burnchain_block_height",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 34,
									"character": 30
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2654,
							"name": "min_amount_ustx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 35,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2655,
							"name": "registration_window_length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 36,
									"character": 28
								}
							],
							"type": {
								"type": "literal",
								"value": 250
							}
						},
						{
							"id": 2656,
							"name": "rejection_fraction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 37,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2659,
							"name": "rejection_votes_left_required",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 40,
									"character": 31
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2657,
							"name": "reward_cycle_id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 38,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2658,
							"name": "reward_cycle_length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 39,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2652,
								2653,
								2654,
								2655,
								2656,
								2659,
								2657,
								2658
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 32,
							"character": 24
						}
					]
				},
				{
					"id": 2714,
					"name": "StackAggregationCommitOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2715,
							"name": "poxAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 152,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2717,
							"name": "privateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 154,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2716,
							"name": "rewardCycle",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 153,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2715,
								2717,
								2716
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 151,
							"character": 46
						}
					]
				},
				{
					"id": 2688,
					"name": "StackingEligibility",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 2689,
							"name": "eligible",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 81,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2690,
							"name": "reason",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/stacking/src/index.ts",
									"line": 82,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2689,
								2690
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 80,
							"character": 36
						}
					]
				},
				{
					"id": 2660,
					"name": "StackerInfo",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/stacking/src/index.ts",
							"line": 43,
							"character": 23
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 2661,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2662,
											"name": "stacked",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/stacking/src/index.ts",
													"line": 45,
													"character": 13
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2662
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/stacking/src/index.ts",
											"line": 44,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 2663,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 2665,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/stacking/src/index.ts",
													"line": 49,
													"character": 13
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2666,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 2667,
															"name": "amount_microstx",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 50,
																	"character": 23
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2668,
															"name": "first_reward_cycle",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 51,
																	"character": 26
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2669,
															"name": "lock_period",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 52,
																	"character": 19
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2671,
															"name": "pox_address",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 54,
																	"character": 19
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 2672,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 2674,
																			"name": "hashbytes",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/stacking/src/index.ts",
																					"line": 56,
																					"character": 19
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Buffer"
																			}
																		},
																		{
																			"id": 2673,
																			"name": "version",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/stacking/src/index.ts",
																					"line": 55,
																					"character": 17
																				}
																			],
																			"type": {
																				"type": "reference",
																				"name": "Buffer"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"kind": 1024,
																			"children": [
																				2674,
																				2673
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/stacking/src/index.ts",
																			"line": 54,
																			"character": 20
																		}
																	]
																}
															}
														},
														{
															"id": 2670,
															"name": "unlock_height",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/stacking/src/index.ts",
																	"line": 53,
																	"character": 21
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"kind": 1024,
															"children": [
																2667,
																2668,
																2669,
																2671,
																2670
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/stacking/src/index.ts",
															"line": 49,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 2664,
											"name": "stacked",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/stacking/src/index.ts",
													"line": 48,
													"character": 13
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2665,
												2664
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/stacking/src/index.ts",
											"line": 47,
											"character": 3
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						4689,
						4684,
						4686,
						4685,
						4687,
						4688
					]
				},
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						2630
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						2718
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2685,
						2675,
						2691,
						2682,
						2706,
						2700,
						2694,
						2651,
						2714,
						2688
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2660
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/stacking/src/constants.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 2837,
			"name": "storage",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/storage\n\nStore and fetch files with Gaia, the decentralized storage system.\n\n## Installation\n\n```\nnpm install @stacks/storage\n```\n\n## Usage\n\n### Initiating a storage client\n\n```typescript\nimport { UserSession } from '@stacks/auth';\nimport { Storage } from '@stacks/storage';\n\nconst appConfig = new AppConfig();\nconst userSession = new UserSession({ appConfig });\nconst storage = new Storage({ userSession });\n```\n\nNote that you can also use an existing `userSession` object created during the authentication process.\n\n### Put file\n\n```typescript\nconst myData = JSON.stringify({\n  hello: \"world\",\n  num: 1\n});\n\nstorage.putFile('my_data.json', myData));\n```\n\nStore data at a different path\n\n```typescript\nstorage.putFile('path/my_data.json', myData));\n```\n\nPut file with options\n\n```typescript\nconst putFileOptions = {\n  // override the default content type\n  contentType: 'application/json', \n  // override encrypting data by default\n  // you can also set encrypt to a private key to specify a custom encryption key\n  encrypt: false, \n  // ignore automatic conflict prevention using etags\n  dangerouslyIgnoreEtag: true\n}\n\nstorage.putFile('my_data.json', myData, putFileOptions));\n```\n\n### Get file\n\n```typescript\nstorage.getFile('my_data.json').then((fileContent) => {\n  console.log(fileContent);\n});\n```\n\nGet file with options\n\n```typescript\nconst getFileOptions = {\n  decrypt: false,\n  // by default files stored are signed and can be verified for authenticity\n  verify: false\n}\n\nstorage.getFile('my_data.json', getFileOptions).then((fileContent) => {\n  console.log(fileContent);\n});\n```\n\n### Delete file\n\n```typescript\nstorage.deleteFile('my_data.json');\n```\n\nDelete the file and the corresponding signature file if signed\n\n```typescript\nstorage.deleteFile('my_data.json', { wasSigned: true });\n```\n\n### List file\n\nList all files in the user's Gaia hub\n\n```typescript\nstorage.listFiles((filename) => {\n  if (filename === 'my_data.json') {\n    return storage.getFile(filename).then((fileContent) => {\n      console.log(fileContent);\n      // return false to stop iterating through files\n      return false;\n    })\n  } else {\n    // return true to continue iterating\n    return true;\n  }\n});\n```\n"
			},
			"originalName": "storage/src/fileContentLoader",
			"children": [
				{
					"id": 4698,
					"name": "GetFileOptions",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2910
				},
				{
					"id": 4699,
					"name": "GetFileUrlOptions",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2916
				},
				{
					"id": 4697,
					"name": "PutFileOptions",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2903
				},
				{
					"id": 4701,
					"name": "Storage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2922
				},
				{
					"id": 4700,
					"name": "StorageOptions",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 2920
				},
				{
					"id": 2895,
					"name": "GaiaHubConfig",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "The configuration for the user's Gaia storage provider."
					},
					"children": [
						{
							"id": 2896,
							"name": "address",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/hub.ts",
									"line": 35,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2899,
							"name": "max_file_upload_size_megabytes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/hub.ts",
									"line": 38,
									"character": 32
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 2900,
							"name": "server",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/hub.ts",
									"line": 39,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2898,
							"name": "token",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/hub.ts",
									"line": 37,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2897,
							"name": "url_prefix",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/storage/src/hub.ts",
									"line": 36,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								2896,
								2899,
								2900,
								2898,
								2897
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/storage/src/hub.ts",
							"line": 34,
							"character": 30
						}
					]
				},
				{
					"id": 2838,
					"name": "PutFileContent",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"shortText": "Retrieves the specified file from the app's data store.",
						"tags": [
							{
								"tag": "param",
								"text": "the path to the file to read",
								"param": "path"
							},
							{
								"tag": "returns",
								"text": "that resolves to the raw data in the file\nor rejects with an error\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/storage/src/fileContentLoader.ts",
							"line": 9,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "Buffer"
							},
							{
								"type": "reference",
								"name": "ArrayBufferView"
							},
							{
								"type": "reference",
								"name": "ArrayBufferLike"
							},
							{
								"type": "reference",
								"name": "Blob"
							}
						]
					}
				},
				{
					"id": 2872,
					"name": "deleteFromGaiaHub",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/storage/src/hub.ts",
							"line": 105,
							"character": 39
						}
					],
					"signatures": [
						{
							"id": 2873,
							"name": "deleteFromGaiaHub",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {},
							"parameters": [
								{
									"id": 2874,
									"name": "filename",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2875,
									"name": "hubConfig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"id": 2895,
										"name": "GaiaHubConfig"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 2889,
					"name": "getBlockstackErrorFromResponse",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/storage/src/hub.ts",
							"line": 277,
							"character": 52
						}
					],
					"signatures": [
						{
							"id": 2890,
							"name": "getBlockstackErrorFromResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns a BlockstackError correlating to the given HTTP response,\nwith the provided errorMsg. Throws if the HTTP response is 'ok'."
							},
							"parameters": [
								{
									"id": 2891,
									"name": "response",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Response"
									}
								},
								{
									"id": 2892,
									"name": "errorMsg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2893,
									"name": "hubConfig",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 2895,
												"name": "GaiaHubConfig"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Error"
									}
								],
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						4698,
						4699,
						4697,
						4701,
						4700
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						2895
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						2838
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						2872,
						2889
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/storage/src/fileContentLoader.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 3000,
			"name": "transactions",
			"kind": 1,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"text": "# @stacks/transactions [![npm](https://img.shields.io/npm/v/@stacks/transactions?color=red)](https://www.npmjs.com/package/@stacks/transactions)\n\nConstruct, decode transactions and work with Clarity smart contracts on the Stacks blockchain.\n\n## Installation\n\n```\nnpm install @stacks/transactions\n```\n\n## Overview\n\nThis library supports the creation of the following Stacks transaction types:\n\n1. STX token transfer\n2. Smart contract deploy\n3. Smart contract function call\n\n## Key Generation\n\n```javascript\nimport { createStacksPrivateKey, makeRandomPrivKey, getPublicKey } from '@stacks/transactions';\n\n// Random key\nconst privateKey = makeRandomPrivKey();\n// Get public key from private\nconst publicKey = getPublicKey(privateKey);\n\n// Private key from hex string\nconst key = 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01';\nconst privateKey = createStacksPrivateKey(key);\n```\n\n## STX Token Transfer Transaction\n\n```javascript\nimport {\n  makeSTXTokenTransfer,\n  makeStandardSTXPostCondition,\n  broadcastTransaction,\n} from '@stacks/transactions';\nimport { StacksTestnet, StacksMainnet } from '@stacks/network';\nconst BigNum = require('bn.js');\n\n// for mainnet, use `StacksMainnet()`\nconst network = new StacksTestnet();\n\nconst txOptions = {\n  recipient: 'SP3FGQ8Z7JY9BWYZ5WM53E0M9NK7WHJF0691NZ159',\n  amount: new BigNum(12345),\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n  network,\n  memo: 'test memo',\n  nonce: new BigNum(0), // set a nonce manually if you don't want builder to fetch from a Stacks node\n  fee: new BigNum(200), // set a tx fee if you don't want the builder to estimate\n};\n\nconst transaction = await makeSTXTokenTransfer(txOptions);\n\n// to see the raw serialized tx\nconst serializedTx = transaction.serialize().toString('hex');\n\n// broadcasting transaction to the specified network\nbroadcastTransaction(transaction, network);\n```\n\n## Smart Contract Deploy Transaction\n\n```javascript\nimport { makeContractDeploy, broadcastTransaction } from '@stacks/transactions';\nimport { StacksTestnet, StacksMainnet } from '@stacks/network';\nconst BigNum = require('bn.js');\n\n// for mainnet, use `StacksMainnet()`\nconst network = new StacksTestnet();\n\nconst txOptions = {\n  contractName: 'contract_name',\n  codeBody: fs.readFileSync('/path/to/contract.clar').toString(),\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n  network,\n};\n\nconst transaction = await makeContractDeploy(txOptions);\n\nbroadcastTransaction(transaction, network);\n```\n\n## Smart Contract Function Call\n\n```javascript\nimport { makeContractCall, BufferCV, broadcastTransaction } from '@stacks/transactions';\nimport { StacksTestnet, StacksMainnet } from '@stacks/network';\nconst BigNum = require('bn.js');\n\n// for mainnet, use `StacksMainnet()`\nconst network = new StacksTestnet();\n\n// Add an optional post condition\n// See below for details on constructing post conditions\nconst postConditionAddress = 'SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE';\nconst postConditionCode = FungibleConditionCode.GreaterEqual;\nconst postConditionAmount = new BigNum(1000000);\nconst postConditions = [\n  makeStandardSTXPostCondition(postConditionAddress, postConditionCode, postConditionAmount),\n];\n\nconst txOptions = {\n  contractAddress: 'SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X',\n  contractName: 'contract_name',\n  functionName: 'contract_function',\n  functionArgs: [bufferCVFromString('foo')],\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n  validateWithAbi: true,\n  network,\n  postConditions,\n};\n\nconst transaction = await makeContractCall(txOptions);\n\nbroadcastTransaction(transaction, network);\n```\n\nIn this example we construct a `contract-call` transaction with a post condition. We have set the `validateWithAbi` option to `true`, so the `makeContractCall` builder will attempt to fetch this contracts ABI from the specified Stacks network, and validate that the provided functionArgs match what is described in the ABI. This should help you avoid constructing invalid contract-call transactions. If you would prefer to provide your own ABI instead of fetching it from the network, the `validateWithABI` option also accepts [ClarityABI](https://github.com/blockstack/stacks-transactions-js/blob/master/src/contract-abi.ts#L231) objects, which can be constructed from ABI files like so:\n\n```typescript\nimport { readFileSync } from 'fs';\n\nconst abi: ClarityAbi = JSON.parse(readFileSync('abi.json').toString());\n```\n\n## Sponsoring Transactions\n\nTo generate a sponsored transaction, first create and sign the transaction as the origin. The `sponsored` property in the options object must be set to true.\n\n```javascript\nimport { makeContractCall, BufferCV } from '@stacks/transactions';\nconst BigNum = require('bn.js');\n\nconst txOptions = {\n  contractAddress: 'SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X',\n  contractName: 'contract_name',\n  functionName: 'contract_function',\n  functionArgs: [bufferCVFromString('foo')],\n  senderKey: 'b244296d5907de9864c0b0d51f98a13c52890be0404e83f273144cd5b9960eed01',\n  validateWithAbi: true,\n  sponsored: true,\n};\n\nconst transaction = await makeContractCall(txOptions);\nconst serializedTx = transaction.serialize().toString('hex');\n```\n\nThe serialized transaction can now be passed to the sponsoring party which will sign the sponsor portion of the transaction and set the fee.\n\n```javascript\nimport {\n  sponsorTransaction,\n  BufferReader,\n  deserializeTransaction,\n  broadcastTransaction,\n} from '@stacks/transactions';\nimport { StacksTestnet, StacksMainnet } from '@stacks/network';\nconst BigNum = require('bn.js');\n\nconst bufferReader = new BufferReader(Buffer.from(serializedTx));\nconst deserializedTx = deserializeTransaction(bufferReader);\nconst sponsorKey = '770287b9471081c8acd37d57190c7a70f0da2633311cc120853537362d32e67c01';\nconst fee = new BigNum(1000);\n\nconst sponsorOptions = {\n  transaction: deserializedTx,\n  sponsorPrivateKey: sponsorKey,\n  fee,\n};\n\nconst sponsoredTx = await sponsorTransaction(sponsorOptions);\n\n// for mainnet, use `StacksMainnet()`\nconst network = new StacksTestnet();\nbroadcastTransaction(sponsoredTx, network);\n```\n\n## Supporting multi-signature transactions\n\nTo generate a multi-sig transaction, first create an unsigned transaction.\nThe `numSignatures` and `publicKeys` properties in the options object must be set:\n\n```typescript\nimport {\n  makeUnsignedSTXTokenTransfer,\n  createStacksPrivateKey,\n  pubKeyfromPrivKey,\n  publicKeyToString,\n  TransactionSigner,\n  standardPrincipalCV,\n  BufferReader,\n} from '@stacks/transactions';\nconst BigNum = require('bn.js');\n\nconst recipient = standardPrincipalCV('SP3FGQ8...');\nconst amount = new BigNum(2500000);\nconst fee = new BigNum(0);\nconst nonce = new BigNum(0);\nconst memo = 'test memo';\n\n// private keys of the participants in the transaction\nconst privKeyStrings = ['6d430bb9...', '2a584d89...', 'd5200dee...'];\n\n// create private key objects from string array\nconst privKeys = privKeyStrings.map(createStacksPrivateKey);\n\n// corresponding public keys\nconst pubKeys = privKeyStrings.map(pubKeyfromPrivKey);\n\n// create public key string array from objects\nconst pubKeyStrings = pubKeys.map(publicKeyToString);\n\nconst transaction = await makeUnsignedSTXTokenTransfer({\n  recipient,\n  amount,\n  fee,\n  nonce,\n  memo,\n  numSignatures: 2, // number of signature required\n  publicKeys: pubKeyStrings, // public key string array with >= numSignatures elements\n});\n\nconst serializedTx = transaction.serialize();\n```\n\nThis transaction payload can be passed along to other participants to sign. In addition to\nmeeting the numSignatures requirement, the public keys of the parties who did not sign the\ntransaction must be appended to the signature.\n\n```typescript\n// deserialize and sign transaction\nconst bufferReader = new BufferReader(serializedTx);\nconst deserializedTx = deserializeTransaction(bufferReader);\n\nconst signer = new TransactionSigner(deserializedTx);\n\n// first signature\nsigner.signOrigin(privKeys[0]);\n\n// second signature\nsigner.signOrigin(privKeys[1]);\n\n// after meeting the numSignatures requirement, the public\n// keys of the participants who did not sign must be appended\nsigner.appendOrigin(pubKeys[2]);\n\n// the serialized multi-sig tx\nconst serializedSignedTx = deserializedTx.serialize();\n```\n\n## Calling Read-only Contract Functions\n\nRead-only contract functions can be called without generating or broadcasting a transaction. Instead it works via a direct API call to a Stacks node.\n\n```typescript\nconst contractAddress = 'ST3KC0MTNW34S1ZXD36JYKFD3JJMWA01M55DSJ4JE';\nconst contractName = 'kv-store';\nconst functionName = 'get-value';\nconst buffer = bufferCVFromString('foo');\nconst network = new StacksTestnet();\nconst senderAddress = 'ST2F4BK4GZH6YFBNHYDDGN4T1RKBA7DA1BJZPJEJJ';\n\nconst options = {\n  contractAddress,\n  contractName,\n  functionName,\n  functionArgs: [buffer],\n  network,\n  senderAddress,\n};\n\nconst result = await callReadOnlyFunction(options);\n```\n\n## Constructing Clarity Values\n\nBuilding transactions that call functions in deployed clarity contracts requires you to construct valid Clarity Values to pass to the function as arguments. The [Clarity type system](https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-002-smart-contract-language.md#clarity-type-system) contains the following types:\n\n- `(tuple (key-name-0 key-type-0) (key-name-1 key-type-1) ...)`\n  - a typed tuple with named fields.\n- `(list max-len entry-type)`\n  - a list of maximum length max-len, with entries of type entry-type\n- `(response ok-type err-type)`\n  - object used by public functions to commit their changes or abort. May be returned or used by other functions as well, however, only public functions have the commit/abort behavior.\n- `(optional some-type)`\n  - an option type for objects that can either be (some value) or none\n- `(buff max-len)`\n  - byte buffer or maximum length max-len.\n- `principal`\n  - object representing a principal (whether a contract principal or standard principal).\n- `bool`\n  - boolean value ('true or 'false)\n- `int`\n  - signed 128-bit integer\n- `uint`\n  - unsigned 128-bit integer\n\nThis library contains Typescript types and classes that map to the Clarity types, in order to make it easy to construct well-typed Clarity values in Javascript. These types all extend the abstract class `ClarityValue`.\n\n```javascript\n// construct boolean clarity values\nconst t = trueCV();\nconst f = falseCV();\n\n// construct optional clarity values\nconst nothing = noneCV();\nconst something = someCV(t);\n\n// construct a buffer clarity value from an existing Buffer\nconst buffer = Buffer.from('foo');\nconst bufCV = bufferCV(buffer);\n\n// construct signed and unsigned integer clarity values\nconst i = intCV(-10);\nconst u = uintCV(10);\n\n// construct principal clarity values\nconst address = 'SP2JXKMSH007NPYAQHKJPQMAQYAD90NQGTVJVQ02B';\nconst contractName = 'contract-name';\nconst spCV = standardPrincipalCV(address);\nconst cpCV = contractPrincipalCV(address, contractName);\n\n// construct response clarity values\nconst errCV = responseErrorCV(trueCV());\nconst okCV = responseOkCV(falseCV());\n\n// construct tuple clarity values\nconst tupCV = tupleCV({\n  a: intCV(1),\n  b: trueCV(),\n  c: falseCV(),\n});\n\n// construct list clarity values\nconst l = listCV([trueCV(), falseCV()]);\n```\n\nIf you develop in Typescript, the type checker can help prevent you from creating wrongly-typed Clarity values. For example, the following code won't compile since in Clarity lists are homogeneous, meaning they can only contain values of a single type. It is important to include the type variable `BooleanCV` in this example, otherwise the typescript type checker won't know which type the list is of and won't enforce homogeneity.\n\n```typescript\nconst l = listCV<BooleanCV>([trueCV(), intCV(1)]);\n```\n\n## Post Conditions\n\nThree types of post conditions can be added to transactions:\n\n1. STX post condition\n2. Fungible token post condition\n3. Non-Fungible token post condition\n\nFor details see: https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#transaction-post-conditions\n\n### STX post condition\n\n```javascript\n// With a standard principal\nconst postConditionAddress = 'SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE';\nconst postConditionCode = FungibleConditionCode.GreaterEqual;\nconst postConditionAmount = new BigNum(12345);\n\nconst standardSTXPostCondition = makeStandardSTXPostCondition(\n  postConditionAddress,\n  postConditionCode,\n  postConditionAmount\n);\n\n// With a contract principal\nconst contractAddress = 'SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X';\nconst contractName = 'test-contract';\n\nconst contractSTXPostCondition = makeContractSTXPostCondition(\n  contractAddress,\n  contractName,\n  postConditionCode,\n  postConditionAmount\n);\n```\n\n### Fungible token post condition\n\n```javascript\n// With a standard principal\nconst postConditionAddress = 'SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE';\nconst postConditionCode = FungibleConditionCode.GreaterEqual;\nconst postConditionAmount = new BigNum(12345);\nconst assetAddress = 'SP62M8MEFH32WGSB7XSF9WJZD7TQB48VQB5ANWSJ';\nconst assetContractName = 'test-asset-contract';\nconst fungibleAssetInfo = createAssetInfo(assetAddress, assetContractName);\n\nconst standardFungiblePostCondition = makeStandardFungiblePostCondition(\n  postConditionAddress,\n  postConditionCode,\n  postConditionAmount,\n  fungibleAssetInfo\n);\n\n// With a contract principal\nconst contractAddress = 'SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X';\nconst contractName = 'test-contract';\nconst assetAddress = 'SP62M8MEFH32WGSB7XSF9WJZD7TQB48VQB5ANWSJ';\nconst assetContractName = 'test-asset-contract';\nconst fungibleAssetInfo = createAssetInfo(assetAddress, assetContractName);\n\nconst contractFungiblePostCondition = makeContractFungiblePostCondition(\n  contractAddress,\n  contractName,\n  postConditionCode,\n  postConditionAmount,\n  fungibleAssetInfo\n);\n```\n\n### Non-fungible token post condition\n\n```javascript\n// With a standard principal\nconst postConditionAddress = 'SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE';\nconst postConditionCode = NonFungibleConditionCode.Owns;\nconst assetAddress = 'SP62M8MEFH32WGSB7XSF9WJZD7TQB48VQB5ANWSJ';\nconst assetContractName = 'test-asset-contract';\nconst assetName = 'test-asset';\nconst tokenAssetName = 'test-token-asset';\nconst nonFungibleAssetInfo = createAssetInfo(assetAddress, assetContractName, assetName);\n\nconst standardNonFungiblePostCondition = makeStandardNonFungiblePostCondition(\n  postConditionAddress,\n  postConditionCode,\n  nonFungibleAssetInfo,\n  tokenAssetName\n);\n\n// With a contract principal\nconst contractAddress = 'SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X';\nconst contractName = 'test-contract';\n\nconst contractNonFungiblePostCondition = makeContractNonFungiblePostCondition(\n  contractAddress,\n  contractName,\n  postConditionCode,\n  nonFungibleAssetInfo,\n  tokenAssetName\n);\n```\n\n## Helper functions\n\n### Conversion of Clarity Values to JSON\n\nClarity Values represent values of Clarity contracts. If a JSON format is required the helper function `cvToJSON` can be used.\n\n```\ncvToJSON(hexToCV(tx.tx_result.hex))\n```\n"
			},
			"originalName": "transactions/src/authorization",
			"children": [
				{
					"id": 4905,
					"name": "Address",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4388
				},
				{
					"id": 4911,
					"name": "AssetInfo",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4410
				},
				{
					"id": 4704,
					"name": "BooleanCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 43,
							"character": 11
						}
					],
					"target": 3575
				},
				{
					"id": 5005,
					"name": "BufferArray",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4443
				},
				{
					"id": 4709,
					"name": "BufferCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 48,
							"character": 10
						}
					],
					"target": 3585
				},
				{
					"id": 4763,
					"name": "CoinbasePayload",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 21,
							"character": 17
						}
					],
					"target": 4132
				},
				{
					"id": 4760,
					"name": "ContractCallPayload",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 18,
							"character": 21
						}
					],
					"target": 4117
				},
				{
					"id": 4908,
					"name": "ContractPrincipal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4397
				},
				{
					"id": 4718,
					"name": "ContractPrincipalCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 57,
							"character": 21
						}
					],
					"target": 3635
				},
				{
					"id": 4706,
					"name": "FalseCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 45,
							"character": 9
						}
					],
					"target": 3578
				},
				{
					"id": 4707,
					"name": "IntCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 46,
							"character": 7
						}
					],
					"target": 3595
				},
				{
					"id": 4912,
					"name": "LengthPrefixedList",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4415
				},
				{
					"id": 4909,
					"name": "LengthPrefixedString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4402
				},
				{
					"id": 4719,
					"name": "ListCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 58,
							"character": 8
						}
					],
					"target": 3608
				},
				{
					"id": 4910,
					"name": "MemoString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4407
				},
				{
					"id": 4711,
					"name": "NoneCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 50,
							"character": 8
						}
					],
					"target": 3617
				},
				{
					"id": 4710,
					"name": "OptionalCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 49,
							"character": 12
						}
					],
					"target": 3616
				},
				{
					"id": 4762,
					"name": "PoisonPayload",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 20,
							"character": 15
						}
					],
					"target": 4129
				},
				{
					"id": 4764,
					"name": "PostCondition",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 25,
							"character": 15
						}
					],
					"target": 4160
				},
				{
					"id": 4906,
					"name": "PostConditionPrincipal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4392
				},
				{
					"id": 4716,
					"name": "PrincipalCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 55,
							"character": 13
						}
					],
					"target": 3631
				},
				{
					"id": 5018,
					"name": "ReadOnlyFunctionErrorResponse",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4505
				},
				{
					"id": 5019,
					"name": "ReadOnlyFunctionResponse",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4508
				},
				{
					"id": 5017,
					"name": "ReadOnlyFunctionSuccessResponse",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4502
				},
				{
					"id": 4713,
					"name": "ResponseCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 52,
							"character": 12
						}
					],
					"target": 3664
				},
				{
					"id": 4715,
					"name": "ResponseErrorCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 54,
							"character": 17
						}
					],
					"target": 3665
				},
				{
					"id": 4714,
					"name": "ResponseOkCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 53,
							"character": 14
						}
					],
					"target": 3668
				},
				{
					"id": 4761,
					"name": "SmartContractPayload",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 19,
							"character": 22
						}
					],
					"target": 4124
				},
				{
					"id": 4712,
					"name": "SomeCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 51,
							"character": 8
						}
					],
					"target": 3619
				},
				{
					"id": 4904,
					"name": "StacksMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4387
				},
				{
					"id": 4836,
					"name": "StacksPrivateKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4080
				},
				{
					"id": 4835,
					"name": "StacksPublicKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4077
				},
				{
					"id": 4748,
					"name": "StacksTransaction",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 1,
							"character": 26
						}
					],
					"target": 4213
				},
				{
					"id": 4907,
					"name": "StandardPrincipal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4393
				},
				{
					"id": 4717,
					"name": "StandardPrincipalCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 56,
							"character": 21
						}
					],
					"target": 3632
				},
				{
					"id": 4721,
					"name": "StringAsciiCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 60,
							"character": 15
						}
					],
					"target": 3678
				},
				{
					"id": 4722,
					"name": "StringUtf8CV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 61,
							"character": 14
						}
					],
					"target": 3681
				},
				{
					"id": 4759,
					"name": "TokenTransferPayload",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 17,
							"character": 22
						}
					],
					"target": 4111
				},
				{
					"id": 4978,
					"name": "TransactionSigner",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4182
				},
				{
					"id": 4705,
					"name": "TrueCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 44,
							"character": 8
						}
					],
					"target": 3576
				},
				{
					"id": 4720,
					"name": "TupleCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 59,
							"character": 9
						}
					],
					"target": 3695
				},
				{
					"id": 4708,
					"name": "UIntCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 47,
							"character": 8
						}
					],
					"target": 3598
				},
				{
					"id": 4880,
					"name": "addressFromHashMode",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4294
				},
				{
					"id": 4881,
					"name": "addressFromPublicKeys",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4299
				},
				{
					"id": 4878,
					"name": "addressFromVersionHash",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4286
				},
				{
					"id": 4879,
					"name": "addressHashModeToVersion",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4290
				},
				{
					"id": 4882,
					"name": "addressToString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4305
				},
				{
					"id": 4727,
					"name": "bufferCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 70,
							"character": 10
						}
					],
					"target": 3588
				},
				{
					"id": 4728,
					"name": "bufferCVFromString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 71,
							"character": 20
						}
					],
					"target": 3591
				},
				{
					"id": 4999,
					"name": "cloneDeep",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4420
				},
				{
					"id": 4893,
					"name": "codeBodyString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4348
				},
				{
					"id": 4825,
					"name": "compressPublicKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4041
				},
				{
					"id": 4735,
					"name": "contractPrincipalCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 78,
							"character": 21
						}
					],
					"target": 3651
				},
				{
					"id": 4736,
					"name": "contractPrincipalCVFromAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 79,
							"character": 32
						}
					],
					"target": 3655
				},
				{
					"id": 4737,
					"name": "contractPrincipalCVFromStandard",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 80,
							"character": 33
						}
					],
					"target": 3659
				},
				{
					"id": 4876,
					"name": "createAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4281
				},
				{
					"id": 4898,
					"name": "createAssetInfo",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4363
				},
				{
					"id": 4887,
					"name": "createContractPrincipal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4320
				},
				{
					"id": 4877,
					"name": "createEmptyAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4284
				},
				{
					"id": 4765,
					"name": "createFungiblePostCondition",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 26,
							"character": 29
						}
					],
					"target": 4142
				},
				{
					"id": 4901,
					"name": "createLPList",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4374
				},
				{
					"id": 4890,
					"name": "createLPString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4330
				},
				{
					"id": 4894,
					"name": "createMemoString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4351
				},
				{
					"id": 4766,
					"name": "createNonFungiblePostCondition",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 27,
							"character": 32
						}
					],
					"target": 4148
				},
				{
					"id": 4767,
					"name": "createSTXPostCondition",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 28,
							"character": 24
						}
					],
					"target": 4137
				},
				{
					"id": 4827,
					"name": "createStacksPrivateKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4047
				},
				{
					"id": 4818,
					"name": "createStacksPublicKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4018
				},
				{
					"id": 4886,
					"name": "createStandardPrincipal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4317
				},
				{
					"id": 5003,
					"name": "cvToHex",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4437
				},
				{
					"id": 4884,
					"name": "deserializeAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4311
				},
				{
					"id": 4900,
					"name": "deserializeAssetInfo",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4371
				},
				{
					"id": 4744,
					"name": "deserializeCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 89,
							"character": 35
						}
					],
					"target": 3566
				},
				{
					"id": 4903,
					"name": "deserializeLPList",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4382
				},
				{
					"id": 4892,
					"name": "deserializeLPString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4343
				},
				{
					"id": 4896,
					"name": "deserializeMemoString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4357
				},
				{
					"id": 4769,
					"name": "deserializePostCondition",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 30,
							"character": 26
						}
					],
					"target": 4157
				},
				{
					"id": 4889,
					"name": "deserializePrincipal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4327
				},
				{
					"id": 4826,
					"name": "deserializePublicKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4044
				},
				{
					"id": 4875,
					"name": "deserializeStacksMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4276
				},
				{
					"id": 4749,
					"name": "deserializeTransaction",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 1,
							"character": 50
						}
					],
					"target": 4210
				},
				{
					"id": 5011,
					"name": "exceedsMaxLengthBytes",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4478
				},
				{
					"id": 4724,
					"name": "falseCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 67,
							"character": 9
						}
					],
					"target": 3582
				},
				{
					"id": 4816,
					"name": "getAddressFromPrivateKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4010
				},
				{
					"id": 4817,
					"name": "getAddressFromPublicKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4014
				},
				{
					"id": 4832,
					"name": "getPublicKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4067
				},
				{
					"id": 4830,
					"name": "getSignatureRecoveryParam",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4057
				},
				{
					"id": 5014,
					"name": "hash160",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4492
				},
				{
					"id": 5015,
					"name": "hashP2PKH",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4495
				},
				{
					"id": 5016,
					"name": "hashP2SH",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4498
				},
				{
					"id": 5010,
					"name": "hexStringToInt",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4475
				},
				{
					"id": 5004,
					"name": "hexToCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4440
				},
				{
					"id": 4725,
					"name": "intCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 68,
							"character": 7
						}
					],
					"target": 3601
				},
				{
					"id": 5009,
					"name": "intToHexString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4471
				},
				{
					"id": 5001,
					"name": "isClarityName",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4430
				},
				{
					"id": 4821,
					"name": "isCompressed",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4029
				},
				{
					"id": 5006,
					"name": "leftPadHex",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4460
				},
				{
					"id": 5007,
					"name": "leftPadHexToLength",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4463
				},
				{
					"id": 4738,
					"name": "listCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 81,
							"character": 8
						}
					],
					"target": 3611
				},
				{
					"id": 4828,
					"name": "makeRandomPrivKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4050
				},
				{
					"id": 4729,
					"name": "noneCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 72,
							"character": 8
						}
					],
					"target": 3622
				},
				{
					"id": 5000,
					"name": "omit",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4424
				},
				{
					"id": 4897,
					"name": "parseAssetInfoString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4360
				},
				{
					"id": 4885,
					"name": "parsePrincipalString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4314
				},
				{
					"id": 5020,
					"name": "parseReadOnlyResponse",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4509
				},
				{
					"id": 4831,
					"name": "parseRecoverableSignature",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4060
				},
				{
					"id": 4833,
					"name": "privateKeyToString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4070
				},
				{
					"id": 4824,
					"name": "pubKeyfromPrivKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4038
				},
				{
					"id": 4820,
					"name": "publicKeyFromBuffer",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4026
				},
				{
					"id": 4819,
					"name": "publicKeyFromSignature",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4021
				},
				{
					"id": 4834,
					"name": "publicKeyToAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4073
				},
				{
					"id": 4822,
					"name": "publicKeyToString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4032
				},
				{
					"id": 4732,
					"name": "responseErrorCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 75,
							"character": 17
						}
					],
					"target": 3671
				},
				{
					"id": 4731,
					"name": "responseOkCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 74,
							"character": 14
						}
					],
					"target": 3674
				},
				{
					"id": 5008,
					"name": "rightPadHexToLength",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4467
				},
				{
					"id": 4883,
					"name": "serializeAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4308
				},
				{
					"id": 4899,
					"name": "serializeAssetInfo",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4368
				},
				{
					"id": 4743,
					"name": "serializeCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 89,
							"character": 20
						}
					],
					"target": 3571
				},
				{
					"id": 4902,
					"name": "serializeLPList",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4379
				},
				{
					"id": 4891,
					"name": "serializeLPString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4340
				},
				{
					"id": 4895,
					"name": "serializeMemoString",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4354
				},
				{
					"id": 4768,
					"name": "serializePostCondition",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/index.ts",
							"line": 29,
							"character": 24
						}
					],
					"target": 4154
				},
				{
					"id": 4888,
					"name": "serializePrincipal",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4324
				},
				{
					"id": 4823,
					"name": "serializePublicKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4035
				},
				{
					"id": 4874,
					"name": "serializeStacksMessage",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4273
				},
				{
					"id": 5012,
					"name": "sha512_256",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4482
				},
				{
					"id": 4829,
					"name": "signWithKey",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4053
				},
				{
					"id": 4730,
					"name": "someCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 73,
							"character": 8
						}
					],
					"target": 3624
				},
				{
					"id": 4733,
					"name": "standardPrincipalCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 76,
							"character": 21
						}
					],
					"target": 3645
				},
				{
					"id": 4734,
					"name": "standardPrincipalCVFromAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 77,
							"character": 32
						}
					],
					"target": 3648
				},
				{
					"id": 4740,
					"name": "stringAsciiCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 83,
							"character": 15
						}
					],
					"target": 3684
				},
				{
					"id": 4741,
					"name": "stringUtf8CV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 84,
							"character": 14
						}
					],
					"target": 3687
				},
				{
					"id": 4723,
					"name": "trueCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 66,
							"character": 8
						}
					],
					"target": 3580
				},
				{
					"id": 4739,
					"name": "tupleCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 82,
							"character": 9
						}
					],
					"target": 3698
				},
				{
					"id": 5013,
					"name": "txidFromData",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4489
				},
				{
					"id": 4726,
					"name": "uintCV",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/index.ts",
							"line": 69,
							"character": 8
						}
					],
					"target": 3604
				},
				{
					"id": 5021,
					"name": "validateStacksAddress",
					"kind": 16777216,
					"kindString": "Reference",
					"flags": {},
					"target": 4512
				},
				{
					"id": 3754,
					"name": "AddressHashMode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3755,
							"name": "SerializeP2PKH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "SingleSigHashMode - hash160(public-key), same as bitcoin's p2pkh"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 80,
									"character": 16
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 3756,
							"name": "SerializeP2SH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "MultiSigHashMode - hash160(multisig-redeem-script), same as bitcoin's multisig p2sh"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 82,
									"character": 15
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3757,
							"name": "SerializeP2WPKH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "SingleSigHashMode - hash160(segwit-program-00(p2pkh)), same as bitcoin's p2sh-p2wpkh"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 84,
									"character": 17
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3758,
							"name": "SerializeP2WSH",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "MultiSigHashMode - hash160(segwit-program-00(public-keys)), same as bitcoin's p2sh-p2wsh"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 86,
									"character": 16
								}
							],
							"defaultValue": "3"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3755,
								3756,
								3757,
								3758
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 76,
							"character": 20
						}
					]
				},
				{
					"id": 3761,
					"name": "AddressVersion",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3763,
							"name": "MainnetMultiSig",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 94,
									"character": 17
								}
							],
							"defaultValue": "20"
						},
						{
							"id": 3762,
							"name": "MainnetSingleSig",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 93,
									"character": 18
								}
							],
							"defaultValue": "22"
						},
						{
							"id": 3765,
							"name": "TestnetMultiSig",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 96,
									"character": 17
								}
							],
							"defaultValue": "21"
						},
						{
							"id": 3764,
							"name": "TestnetSingleSig",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 95,
									"character": 18
								}
							],
							"defaultValue": "26"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3763,
								3762,
								3765,
								3764
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 92,
							"character": 19
						}
					]
				},
				{
					"id": 3733,
					"name": "AnchorMode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "How a transaction gets appended to the Stacks blockchain"
					},
					"children": [
						{
							"id": 3736,
							"name": "Any",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "The leader can choose where to include the transaction (anchored block or microblock)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 50,
									"character": 5
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3735,
							"name": "OffChainOnly",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "The transaction MUST be included in a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 48,
									"character": 14
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3734,
							"name": "OnChainOnly",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"comment": {
								"shortText": "The transaction MUST be included in an anchored block"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 46,
									"character": 13
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3736,
								3735,
								3734
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 44,
							"character": 15
						}
					]
				},
				{
					"id": 3778,
					"name": "AssetType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3780,
							"name": "Fungible",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 125,
									"character": 10
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3781,
							"name": "NonFungible",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 126,
									"character": 13
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3779,
							"name": "STX",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 124,
									"character": 5
								}
							],
							"defaultValue": "0"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3780,
								3781,
								3779
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 123,
							"character": 14
						}
					]
				},
				{
					"id": 3751,
					"name": "AuthType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3753,
							"name": "Sponsored",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 73,
									"character": 11
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 3752,
							"name": "Standard",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 72,
									"character": 10
								}
							],
							"defaultValue": "4"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3753,
								3752
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 71,
							"character": 13
						}
					]
				},
				{
					"id": 3712,
					"name": "ChainID",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "Unsigned 32-bit integer"
					},
					"children": [
						{
							"id": 3714,
							"name": "Mainnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 6,
									"character": 9
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3713,
							"name": "Testnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 5,
									"character": 9
								}
							],
							"defaultValue": "2147483648"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3714,
								3713
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 4,
							"character": 12
						}
					]
				},
				{
					"id": 3863,
					"name": "ClarityAbiTypeId",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3866,
							"name": "ClarityAbiTypeBool",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 60,
									"character": 20
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3869,
							"name": "ClarityAbiTypeBuffer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 63,
									"character": 22
								}
							],
							"defaultValue": "6"
						},
						{
							"id": 3865,
							"name": "ClarityAbiTypeInt128",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 59,
									"character": 22
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3873,
							"name": "ClarityAbiTypeList",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 67,
									"character": 20
								}
							],
							"defaultValue": "10"
						},
						{
							"id": 3868,
							"name": "ClarityAbiTypeNone",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 62,
									"character": 20
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 3871,
							"name": "ClarityAbiTypeOptional",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 65,
									"character": 24
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 3867,
							"name": "ClarityAbiTypePrincipal",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 61,
									"character": 25
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 3870,
							"name": "ClarityAbiTypeResponse",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 64,
									"character": 24
								}
							],
							"defaultValue": "7"
						},
						{
							"id": 3874,
							"name": "ClarityAbiTypeStringAscii",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 68,
									"character": 27
								}
							],
							"defaultValue": "11"
						},
						{
							"id": 3875,
							"name": "ClarityAbiTypeStringUtf8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 69,
									"character": 26
								}
							],
							"defaultValue": "12"
						},
						{
							"id": 3876,
							"name": "ClarityAbiTypeTraitReference",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 70,
									"character": 30
								}
							],
							"defaultValue": "13"
						},
						{
							"id": 3872,
							"name": "ClarityAbiTypeTuple",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 66,
									"character": 21
								}
							],
							"defaultValue": "9"
						},
						{
							"id": 3864,
							"name": "ClarityAbiTypeUInt128",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 58,
									"character": 23
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3866,
								3869,
								3865,
								3873,
								3868,
								3871,
								3867,
								3870,
								3874,
								3875,
								3876,
								3872,
								3864
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 57,
							"character": 28
						}
					]
				},
				{
					"id": 3548,
					"name": "ClarityType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"comment": {
						"shortText": "Type IDs corresponding to each of the Clarity value types as described here:\n{@link https://github.com/blockstack/blockstack-core/blob/sip/sip-005/sip/sip-005-blocks-and-transactions.md#clarity-value-representation}"
					},
					"children": [
						{
							"id": 3553,
							"name": "BoolFalse",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 30,
									"character": 11
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 3552,
							"name": "BoolTrue",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 29,
									"character": 10
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3551,
							"name": "Buffer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 28,
									"character": 8
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3549,
							"name": "Int",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 26,
									"character": 5
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 3560,
							"name": "List",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 37,
									"character": 6
								}
							],
							"defaultValue": "11"
						},
						{
							"id": 3558,
							"name": "OptionalNone",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 35,
									"character": 14
								}
							],
							"defaultValue": "9"
						},
						{
							"id": 3559,
							"name": "OptionalSome",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 36,
									"character": 14
								}
							],
							"defaultValue": "10"
						},
						{
							"id": 3555,
							"name": "PrincipalContract",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 32,
									"character": 19
								}
							],
							"defaultValue": "6"
						},
						{
							"id": 3554,
							"name": "PrincipalStandard",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 31,
									"character": 19
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 3557,
							"name": "ResponseErr",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 34,
									"character": 13
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 3556,
							"name": "ResponseOk",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 33,
									"character": 12
								}
							],
							"defaultValue": "7"
						},
						{
							"id": 3562,
							"name": "StringASCII",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 39,
									"character": 13
								}
							],
							"defaultValue": "13"
						},
						{
							"id": 3563,
							"name": "StringUTF8",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 40,
									"character": 12
								}
							],
							"defaultValue": "14"
						},
						{
							"id": 3561,
							"name": "Tuple",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 38,
									"character": 7
								}
							],
							"defaultValue": "12"
						},
						{
							"id": 3550,
							"name": "UInt",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/clarity/clarityValue.ts",
									"line": 27,
									"character": 6
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3553,
								3552,
								3551,
								3549,
								3560,
								3558,
								3559,
								3555,
								3554,
								3557,
								3556,
								3562,
								3563,
								3561,
								3550
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 25,
							"character": 23
						}
					]
				},
				{
					"id": 3769,
					"name": "FungibleConditionCode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3770,
							"name": "Equal",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 105,
									"character": 7
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3771,
							"name": "Greater",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 106,
									"character": 9
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3772,
							"name": "GreaterEqual",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 107,
									"character": 14
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3773,
							"name": "Less",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 108,
									"character": 6
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 3774,
							"name": "LessEqual",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 109,
									"character": 11
								}
							],
							"defaultValue": "5"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3770,
								3771,
								3772,
								3773,
								3774
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 104,
							"character": 26
						}
					]
				},
				{
					"id": 3775,
					"name": "NonFungibleConditionCode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3776,
							"name": "DoesNotOwn",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 113,
									"character": 12
								}
							],
							"defaultValue": "16"
						},
						{
							"id": 3777,
							"name": "Owns",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 114,
									"character": 6
								}
							],
							"defaultValue": "17"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3776,
								3777
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 112,
							"character": 29
						}
					]
				},
				{
					"id": 3727,
					"name": "PayloadType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3732,
							"name": "Coinbase",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 38,
									"character": 10
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 3730,
							"name": "ContractCall",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 36,
									"character": 14
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3731,
							"name": "PoisonMicroblock",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 37,
									"character": 18
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3729,
							"name": "SmartContract",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 35,
									"character": 15
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3728,
							"name": "TokenTransfer",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 34,
									"character": 15
								}
							],
							"defaultValue": "0"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3732,
								3730,
								3731,
								3729,
								3728
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 33,
							"character": 16
						}
					]
				},
				{
					"id": 3740,
					"name": "PostConditionMode",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3741,
							"name": "Allow",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 61,
									"character": 7
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3742,
							"name": "Deny",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 62,
									"character": 6
								}
							],
							"defaultValue": "2"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3741,
								3742
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 60,
							"character": 22
						}
					]
				},
				{
					"id": 3747,
					"name": "PostConditionPrincipalID",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3750,
							"name": "Contract",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 120,
									"character": 10
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3748,
							"name": "Origin",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 118,
									"character": 8
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3749,
							"name": "Standard",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 119,
									"character": 10
								}
							],
							"defaultValue": "2"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3750,
								3748,
								3749
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 117,
							"character": 29
						}
					]
				},
				{
					"id": 3743,
					"name": "PostConditionType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3745,
							"name": "Fungible",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 67,
									"character": 10
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3746,
							"name": "NonFungible",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 68,
									"character": 13
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3744,
							"name": "STX",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 66,
									"character": 5
								}
							],
							"defaultValue": "0"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3745,
								3746,
								3744
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 65,
							"character": 22
						}
					]
				},
				{
					"id": 3766,
					"name": "PubKeyEncoding",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3767,
							"name": "Compressed",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 100,
									"character": 12
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 3768,
							"name": "Uncompressed",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 101,
									"character": 14
								}
							],
							"defaultValue": "1"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3767,
								3768
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 99,
							"character": 19
						}
					]
				},
				{
					"id": 3715,
					"name": "StacksMessageType",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3716,
							"name": "Address",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 20,
									"character": 9
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 3720,
							"name": "AssetInfo",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 24,
									"character": 11
								}
							],
							"defaultValue": "4"
						},
						{
							"id": 3723,
							"name": "LengthPrefixedList",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 27,
									"character": 20
								}
							],
							"defaultValue": "7"
						},
						{
							"id": 3718,
							"name": "LengthPrefixedString",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 22,
									"character": 22
								}
							],
							"defaultValue": "2"
						},
						{
							"id": 3719,
							"name": "MemoString",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 23,
									"character": 12
								}
							],
							"defaultValue": "3"
						},
						{
							"id": 3725,
							"name": "MessageSignature",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 29,
									"character": 18
								}
							],
							"defaultValue": "9"
						},
						{
							"id": 3724,
							"name": "Payload",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 28,
									"character": 9
								}
							],
							"defaultValue": "8"
						},
						{
							"id": 3721,
							"name": "PostCondition",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 25,
									"character": 15
								}
							],
							"defaultValue": "5"
						},
						{
							"id": 3717,
							"name": "Principal",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 21,
									"character": 11
								}
							],
							"defaultValue": "1"
						},
						{
							"id": 3722,
							"name": "PublicKey",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 26,
									"character": 11
								}
							],
							"defaultValue": "6"
						},
						{
							"id": 3726,
							"name": "TransactionAuthField",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 30,
									"character": 22
								}
							],
							"defaultValue": "10"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3716,
								3720,
								3723,
								3718,
								3719,
								3725,
								3724,
								3721,
								3717,
								3722,
								3726
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 19,
							"character": 22
						}
					]
				},
				{
					"id": 3737,
					"name": "TransactionVersion",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3738,
							"name": "Mainnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 54,
									"character": 9
								}
							],
							"defaultValue": "0"
						},
						{
							"id": 3739,
							"name": "Testnet",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 55,
									"character": 9
								}
							],
							"defaultValue": "128"
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3738,
								3739
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 53,
							"character": 23
						}
					]
				},
				{
					"id": 3782,
					"name": "TxRejectedReason",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {},
					"children": [
						{
							"id": 3796,
							"name": "BadAddressVersionByte",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 143,
									"character": 23
								}
							],
							"defaultValue": "\"BadAddressVersionByte\""
						},
						{
							"id": 3791,
							"name": "BadFunctionArgument",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 138,
									"character": 21
								}
							],
							"defaultValue": "\"BadFunctionArgument\""
						},
						{
							"id": 3787,
							"name": "BadNonce",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 134,
									"character": 10
								}
							],
							"defaultValue": "\"BadNonce\""
						},
						{
							"id": 3792,
							"name": "ContractAlreadyExists",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 139,
									"character": 23
								}
							],
							"defaultValue": "\"ContractAlreadyExists\""
						},
						{
							"id": 3784,
							"name": "Deserialization",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 131,
									"character": 17
								}
							],
							"defaultValue": "\"Deserialization\""
						},
						{
							"id": 3786,
							"name": "FeeTooLow",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 133,
									"character": 11
								}
							],
							"defaultValue": "\"FeeTooLow\""
						},
						{
							"id": 3797,
							"name": "NoCoinbaseViaMempool",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 144,
									"character": 22
								}
							],
							"defaultValue": "\"NoCoinbaseViaMempool\""
						},
						{
							"id": 3789,
							"name": "NoSuchContract",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 136,
									"character": 16
								}
							],
							"defaultValue": "\"NoSuchContract\""
						},
						{
							"id": 3790,
							"name": "NoSuchPublicFunction",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 137,
									"character": 22
								}
							],
							"defaultValue": "\"NoSuchPublicFunction\""
						},
						{
							"id": 3788,
							"name": "NotEnoughFunds",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 135,
									"character": 16
								}
							],
							"defaultValue": "\"NotEnoughFunds\""
						},
						{
							"id": 3794,
							"name": "PoisonMicroblockHasUnknownPubKeyHash",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 141,
									"character": 38
								}
							],
							"defaultValue": "\"PoisonMicroblockHasUnknownPubKeyHash\""
						},
						{
							"id": 3795,
							"name": "PoisonMicroblockIsInvalid",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 142,
									"character": 27
								}
							],
							"defaultValue": "\"PoisonMicroblockIsInvalid\""
						},
						{
							"id": 3793,
							"name": "PoisonMicroblocksDoNotConflict",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 140,
									"character": 32
								}
							],
							"defaultValue": "\"PoisonMicroblocksDoNotConflict\""
						},
						{
							"id": 3783,
							"name": "Serialization",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 130,
									"character": 15
								}
							],
							"defaultValue": "\"Serialization\""
						},
						{
							"id": 3799,
							"name": "ServerFailureDatabase",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 146,
									"character": 23
								}
							],
							"defaultValue": "\"ServerFailureDatabase\""
						},
						{
							"id": 3798,
							"name": "ServerFailureNoSuchChainTip",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 145,
									"character": 29
								}
							],
							"defaultValue": "\"ServerFailureNoSuchChainTip\""
						},
						{
							"id": 3800,
							"name": "ServerFailureOther",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 147,
									"character": 20
								}
							],
							"defaultValue": "\"ServerFailureOther\""
						},
						{
							"id": 3785,
							"name": "SignatureValidation",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/constants.ts",
									"line": 132,
									"character": 21
								}
							],
							"defaultValue": "\"SignatureValidation\""
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								3796,
								3791,
								3787,
								3792,
								3784,
								3786,
								3797,
								3789,
								3790,
								3788,
								3794,
								3795,
								3793,
								3783,
								3799,
								3798,
								3800,
								3785
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 129,
							"character": 21
						}
					]
				},
				{
					"id": 3108,
					"name": "Authorization",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3113,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3114,
									"name": "new Authorization",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3115,
											"name": "authType",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3751,
												"name": "AuthType"
											}
										},
										{
											"id": 3116,
											"name": "spendingConditions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3107,
												"name": "SpendingCondition"
											}
										},
										{
											"id": 3117,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3107,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3108,
										"name": "Authorization"
									},
									"overwrites": {
										"type": "reference",
										"name": "Deserializable.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Deserializable.constructor"
							}
						},
						{
							"id": 3118,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 481,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3751,
								"name": "AuthType"
							}
						},
						{
							"id": 3119,
							"name": "spendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 482,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3107,
								"name": "SpendingCondition"
							}
						},
						{
							"id": 3120,
							"name": "sponsorSpendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 483,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 3107,
								"name": "SpendingCondition"
							}
						},
						{
							"id": 3142,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 593,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 3143,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3144,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3223,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"overwrites": {
										"type": "reference",
										"name": "Deserializable.deserialize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Deserializable.deserialize"
							}
						},
						{
							"id": 3126,
							"name": "getFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 526,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3127,
									"name": "getFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BN"
											},
											{
												"type": "literal",
												"value": 0
											}
										]
									}
								}
							]
						},
						{
							"id": 3121,
							"name": "intoInitialSighashAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 496,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 3122,
									"name": "intoInitialSighashAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3108,
										"name": "Authorization"
									}
								}
							]
						},
						{
							"id": 3140,
							"name": "serialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 560,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3141,
									"name": "serialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									},
									"overwrites": {
										"type": "reference",
										"name": "Deserializable.serialize"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Deserializable.serialize"
							}
						},
						{
							"id": 3123,
							"name": "setFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 515,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3124,
									"name": "setFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3125,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3128,
							"name": "setNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 537,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 3129,
									"name": "setNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3130,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3134,
							"name": "setSponsor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 545,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3135,
									"name": "setSponsor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3136,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3107,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3131,
							"name": "setSponsorNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 541,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 3132,
									"name": "setSponsorNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3133,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3137,
							"name": "verifyOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 549,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 3138,
									"name": "verifyOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3139,
											"name": "initialSigHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 3109,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 42,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 3110,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3111,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "Deserializable"
											}
										}
									],
									"parameters": [
										{
											"id": 3112,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3223,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Deserializable.deserialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Deserializable.deserialize"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3113
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3118,
								3119,
								3120
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3142,
								3126,
								3121,
								3140,
								3123,
								3128,
								3134,
								3131,
								3137,
								3109
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 480,
							"character": 26
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Deserializable"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3145,
							"name": "StandardAuthorization"
						},
						{
							"type": "reference",
							"id": 3180,
							"name": "SponsoredAuthorization"
						}
					]
				},
				{
					"id": 3223,
					"name": "BufferReader",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3227,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3228,
									"name": "new BufferReader",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3229,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "Buffer"
													},
													{
														"type": "reference",
														"name": "SmartBufferOptions"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3223,
										"name": "BufferReader"
									}
								}
							]
						},
						{
							"id": 3230,
							"name": "smartBuffer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 47,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "SmartBuffer"
							}
						},
						{
							"id": 3257,
							"name": "internalBuffer",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 107,
									"character": 20
								}
							],
							"getSignature": [
								{
									"id": 3258,
									"name": "internalBuffer",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							]
						},
						{
							"id": 3253,
							"name": "readOffset",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 99,
									"character": 16
								}
							],
							"getSignature": [
								{
									"id": 3254,
									"name": "readOffset",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"setSignature": [
								{
									"id": 3255,
									"name": "readOffset",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 3256,
											"name": "val",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 3247,
							"name": "readBigUInt64BE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 91,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 3248,
									"name": "readBigUInt64BE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							]
						},
						{
							"id": 3244,
							"name": "readBigUIntBE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 84,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 3245,
									"name": "readBigUIntBE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3246,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							]
						},
						{
							"id": 3241,
							"name": "readBigUIntLE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 77,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 3242,
									"name": "readBigUIntLE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3243,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "bigint"
									}
								}
							]
						},
						{
							"id": 3231,
							"name": "readBuffer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 61,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3232,
									"name": "readBuffer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3233,
											"name": "length",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							]
						},
						{
							"id": 3249,
							"name": "readString",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 95,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3250,
									"name": "readString",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3251,
											"name": "arg",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "reference",
														"name": "BufferEncoding"
													}
												]
											}
										},
										{
											"id": 3252,
											"name": "encoding",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"name": "BufferEncoding"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 3239,
							"name": "readUInt16BE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 73,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 3240,
									"name": "readUInt16BE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 3234,
							"name": "readUInt32BE",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 65,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 3235,
									"name": "readUInt32BE",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3236,
											"name": "offset",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 3237,
							"name": "readUInt8",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 69,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3238,
									"name": "readUInt8",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 3259,
							"name": "readUInt8Enum",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 111,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 3260,
									"name": "readUInt8Enum",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3261,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3262,
											"name": "TEnumValue",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"parameters": [
										{
											"id": 3263,
											"name": "enumVariable",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "mapped",
												"parameter": "key",
												"parameterType": {
													"type": "intrinsic",
													"name": "string"
												},
												"templateType": {
													"type": "reference",
													"name": "TEnumValue"
												}
											}
										},
										{
											"id": 3264,
											"name": "invalidEnumErrorFormatter",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 3265,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 3266,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 3267,
																	"name": "val",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "Error"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "TEnumValue"
									}
								}
							]
						},
						{
							"id": 3224,
							"name": "fromBuffer",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/bufferReader.ts",
									"line": 49,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 3225,
									"name": "fromBuffer",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3226,
											"name": "buffer",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Buffer"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3223,
										"name": "BufferReader"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3227
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3230
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								3257,
								3253
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3247,
								3244,
								3241,
								3231,
								3249,
								3239,
								3234,
								3237,
								3259,
								3224
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/bufferReader.ts",
							"line": 46,
							"character": 25
						}
					]
				},
				{
					"id": 3992,
					"name": "DeserializationError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3993,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3994,
									"name": "new DeserializationError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3995,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3992,
										"name": "DeserializationError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3993
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/errors.ts",
							"line": 23,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				},
				{
					"id": 3996,
					"name": "NotImplementedError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3997,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3998,
									"name": "new NotImplementedError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3999,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3996,
										"name": "NotImplementedError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3997
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/errors.ts",
							"line": 34,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				},
				{
					"id": 3988,
					"name": "SerializationError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3989,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3990,
									"name": "new SerializationError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3991,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3988,
										"name": "SerializationError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3989
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/errors.ts",
							"line": 12,
							"character": 31
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				},
				{
					"id": 4000,
					"name": "SigningError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 4001,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4002,
									"name": "new SigningError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4003,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4000,
										"name": "SigningError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4001
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/errors.ts",
							"line": 45,
							"character": 25
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				},
				{
					"id": 3180,
					"name": "SponsoredAuthorization",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3185,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3186,
									"name": "new SponsoredAuthorization",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3187,
											"name": "originSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3107,
												"name": "SpendingCondition"
											}
										},
										{
											"id": 3188,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"id": 3107,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3180,
										"name": "SponsoredAuthorization"
									},
									"overwrites": {
										"type": "reference",
										"id": 3114,
										"name": "Authorization.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3113,
								"name": "Authorization.constructor"
							}
						},
						{
							"id": 3189,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 481,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3751,
								"name": "AuthType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3118,
								"name": "Authorization.authType"
							}
						},
						{
							"id": 3190,
							"name": "spendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 482,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3107,
								"name": "SpendingCondition"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3119,
								"name": "Authorization.spendingCondition"
							}
						},
						{
							"id": 3191,
							"name": "sponsorSpendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 483,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 3107,
								"name": "SpendingCondition"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3120,
								"name": "Authorization.sponsorSpendingCondition"
							}
						},
						{
							"id": 3213,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 593,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 3214,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3215,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3223,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3143,
										"name": "Authorization.deserialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3142,
								"name": "Authorization.deserialize"
							}
						},
						{
							"id": 3197,
							"name": "getFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 526,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3198,
									"name": "getFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BN"
											},
											{
												"type": "literal",
												"value": 0
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3127,
										"name": "Authorization.getFee"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3126,
								"name": "Authorization.getFee"
							}
						},
						{
							"id": 3192,
							"name": "intoInitialSighashAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 496,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 3193,
									"name": "intoInitialSighashAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3108,
										"name": "Authorization"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3122,
										"name": "Authorization.intoInitialSighashAuth"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3121,
								"name": "Authorization.intoInitialSighashAuth"
							}
						},
						{
							"id": 3211,
							"name": "serialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 560,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3212,
									"name": "serialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3141,
										"name": "Authorization.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3140,
								"name": "Authorization.serialize"
							}
						},
						{
							"id": 3194,
							"name": "setFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 515,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3195,
									"name": "setFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3196,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3124,
										"name": "Authorization.setFee"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3123,
								"name": "Authorization.setFee"
							}
						},
						{
							"id": 3199,
							"name": "setNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 537,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 3200,
									"name": "setNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3201,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3129,
										"name": "Authorization.setNonce"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3128,
								"name": "Authorization.setNonce"
							}
						},
						{
							"id": 3205,
							"name": "setSponsor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 545,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3206,
									"name": "setSponsor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3207,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3107,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3135,
										"name": "Authorization.setSponsor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3134,
								"name": "Authorization.setSponsor"
							}
						},
						{
							"id": 3202,
							"name": "setSponsorNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 541,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 3203,
									"name": "setSponsorNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3204,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3132,
										"name": "Authorization.setSponsorNonce"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3131,
								"name": "Authorization.setSponsorNonce"
							}
						},
						{
							"id": 3208,
							"name": "verifyOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 549,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 3209,
									"name": "verifyOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3210,
											"name": "initialSigHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3138,
										"name": "Authorization.verifyOrigin"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3137,
								"name": "Authorization.verifyOrigin"
							}
						},
						{
							"id": 3181,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 42,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 3182,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3183,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "Deserializable"
											}
										}
									],
									"parameters": [
										{
											"id": 3184,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3223,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3110,
										"name": "Authorization.deserialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3109,
								"name": "Authorization.deserialize"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3185
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3189,
								3190,
								3191
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3213,
								3197,
								3192,
								3211,
								3194,
								3199,
								3205,
								3202,
								3208,
								3181
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 621,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3108,
							"name": "Authorization"
						}
					]
				},
				{
					"id": 3984,
					"name": "StacksTransactionError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3985,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3986,
									"name": "new StacksTransactionError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3987,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3984,
										"name": "StacksTransactionError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3985
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/errors.ts",
							"line": 1,
							"character": 35
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				},
				{
					"id": 3145,
					"name": "StandardAuthorization",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 3150,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 3151,
									"name": "new StandardAuthorization",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 3152,
											"name": "spendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3107,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 3145,
										"name": "StandardAuthorization"
									},
									"overwrites": {
										"type": "reference",
										"id": 3114,
										"name": "Authorization.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"id": 3113,
								"name": "Authorization.constructor"
							}
						},
						{
							"id": 3153,
							"name": "authType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 481,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3751,
								"name": "AuthType"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3118,
								"name": "Authorization.authType"
							}
						},
						{
							"id": 3154,
							"name": "spendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 482,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3107,
								"name": "SpendingCondition"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3119,
								"name": "Authorization.spendingCondition"
							}
						},
						{
							"id": 3155,
							"name": "sponsorSpendingCondition",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 483,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"id": 3107,
								"name": "SpendingCondition"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3120,
								"name": "Authorization.sponsorSpendingCondition"
							}
						},
						{
							"id": 3177,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 593,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 3178,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3179,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3223,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3143,
										"name": "Authorization.deserialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3142,
								"name": "Authorization.deserialize"
							}
						},
						{
							"id": 3161,
							"name": "getFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 526,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3162,
									"name": "getFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "BN"
											},
											{
												"type": "literal",
												"value": 0
											}
										]
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3127,
										"name": "Authorization.getFee"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3126,
								"name": "Authorization.getFee"
							}
						},
						{
							"id": 3156,
							"name": "intoInitialSighashAuth",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 496,
									"character": 24
								}
							],
							"signatures": [
								{
									"id": 3157,
									"name": "intoInitialSighashAuth",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3108,
										"name": "Authorization"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3122,
										"name": "Authorization.intoInitialSighashAuth"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3121,
								"name": "Authorization.intoInitialSighashAuth"
							}
						},
						{
							"id": 3175,
							"name": "serialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 560,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 3176,
									"name": "serialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3141,
										"name": "Authorization.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3140,
								"name": "Authorization.serialize"
							}
						},
						{
							"id": 3158,
							"name": "setFee",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 515,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 3159,
									"name": "setFee",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3160,
											"name": "amount",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3124,
										"name": "Authorization.setFee"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3123,
								"name": "Authorization.setFee"
							}
						},
						{
							"id": 3163,
							"name": "setNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 537,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 3164,
									"name": "setNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3165,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3129,
										"name": "Authorization.setNonce"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3128,
								"name": "Authorization.setNonce"
							}
						},
						{
							"id": 3169,
							"name": "setSponsor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 545,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 3170,
									"name": "setSponsor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3171,
											"name": "sponsorSpendingCondition",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3107,
												"name": "SpendingCondition"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3135,
										"name": "Authorization.setSponsor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3134,
								"name": "Authorization.setSponsor"
							}
						},
						{
							"id": 3166,
							"name": "setSponsorNonce",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 541,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 3167,
									"name": "setSponsorNonce",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3168,
											"name": "nonce",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "BN"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3132,
										"name": "Authorization.setSponsorNonce"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3131,
								"name": "Authorization.setSponsorNonce"
							}
						},
						{
							"id": 3172,
							"name": "verifyOrigin",
							"kind": 2048,
							"kindString": "Method",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 549,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 3173,
									"name": "verifyOrigin",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 3174,
											"name": "initialSigHash",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3138,
										"name": "Authorization.verifyOrigin"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3137,
								"name": "Authorization.verifyOrigin"
							}
						},
						{
							"id": 3146,
							"name": "deserialize",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 42,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 3147,
									"name": "deserialize",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"typeParameter": [
										{
											"id": 3148,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "T"
													}
												],
												"name": "Deserializable"
											}
										}
									],
									"parameters": [
										{
											"id": 3149,
											"name": "bufferReader",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 3223,
												"name": "BufferReader"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "T"
									},
									"inheritedFrom": {
										"type": "reference",
										"id": 3110,
										"name": "Authorization.deserialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"id": 3109,
								"name": "Authorization.deserialize"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								3150
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3153,
								3154,
								3155
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								3177,
								3161,
								3156,
								3175,
								3158,
								3163,
								3169,
								3166,
								3172,
								3146
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 615,
							"character": 34
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3108,
							"name": "Authorization"
						}
					]
				},
				{
					"id": 4004,
					"name": "VerificationError",
					"kind": 128,
					"kindString": "Class",
					"flags": {},
					"children": [
						{
							"id": 4005,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {},
							"signatures": [
								{
									"id": 4006,
									"name": "new VerificationError",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 4007,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 4004,
										"name": "VerificationError"
									},
									"overwrites": {
										"type": "reference",
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								4005
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/errors.ts",
							"line": 55,
							"character": 30
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Error"
						}
					]
				},
				{
					"id": 3977,
					"name": "ClarityAbi",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3978,
							"name": "functions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 268,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3948,
									"name": "ClarityAbiFunction"
								}
							}
						},
						{
							"id": 3981,
							"name": "fungible_tokens",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 271,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3972,
									"name": "ClarityAbiTypeFungibleToken"
								}
							}
						},
						{
							"id": 3980,
							"name": "maps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 270,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3962,
									"name": "ClarityAbiMap"
								}
							}
						},
						{
							"id": 3982,
							"name": "non_fungible_tokens",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 272,
									"character": 21
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3974,
									"name": "ClarityAbiTypeNonFungibleToken"
								}
							}
						},
						{
							"id": 3979,
							"name": "variables",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 269,
									"character": 11
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3958,
									"name": "ClarityAbiVariable"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3978,
								3981,
								3980,
								3982,
								3979
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 267,
							"character": 27
						}
					]
				},
				{
					"id": 3948,
					"name": "ClarityAbiFunction",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3950,
							"name": "access",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 223,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "private"
									},
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "read_only"
									}
								]
							}
						},
						{
							"id": 3951,
							"name": "args",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 224,
									"character": 6
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 3952,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 3953,
												"name": "name",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 225,
														"character": 8
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 3954,
												"name": "type",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 226,
														"character": 8
													}
												],
												"type": {
													"type": "reference",
													"id": 3862,
													"name": "ClarityAbiType"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													3953,
													3954
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 3949,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 222,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3955,
							"name": "outputs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 228,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3956,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3957,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 229,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3862,
												"name": "ClarityAbiType"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3957
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3950,
								3951,
								3949,
								3955
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 221,
							"character": 35
						}
					]
				},
				{
					"id": 3962,
					"name": "ClarityAbiMap",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3964,
							"name": "key",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 248,
									"character": 5
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 3965,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 3966,
												"name": "name",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 249,
														"character": 8
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 3967,
												"name": "type",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 250,
														"character": 8
													}
												],
												"type": {
													"type": "reference",
													"id": 3862,
													"name": "ClarityAbiType"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													3966,
													3967
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 3963,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 247,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3968,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 252,
									"character": 7
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 3969,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 3970,
												"name": "name",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 253,
														"character": 8
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 3971,
												"name": "type",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 254,
														"character": 8
													}
												],
												"type": {
													"type": "reference",
													"id": 3862,
													"name": "ClarityAbiType"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"kind": 1024,
												"children": [
													3970,
													3971
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3964,
								3963,
								3968
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 246,
							"character": 30
						}
					]
				},
				{
					"id": 3972,
					"name": "ClarityAbiTypeFungibleToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3973,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 259,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3973
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 258,
							"character": 44
						}
					]
				},
				{
					"id": 3974,
					"name": "ClarityAbiTypeNonFungibleToken",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3975,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 263,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3976,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 264,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 3862,
								"name": "ClarityAbiType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3975,
								3976
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 262,
							"character": 47
						}
					]
				},
				{
					"id": 3958,
					"name": "ClarityAbiVariable",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3960,
							"name": "access",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 242,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "variable"
									},
									{
										"type": "literal",
										"value": "constant"
									}
								]
							}
						},
						{
							"id": 3959,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 241,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3961,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 243,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 3862,
								"name": "ClarityAbiType"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3960,
								3959,
								3961
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 240,
							"character": 35
						}
					]
				},
				{
					"id": 3443,
					"name": "ContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Contract function call transaction options"
					},
					"children": [
						{
							"id": 3452,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 612,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							}
						},
						{
							"id": 3444,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Stacks address of the contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 599,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3445,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 600,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3448,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 604,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3449,
							"name": "feeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 605,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3447,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 602,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3564,
									"name": "ClarityValue"
								}
							}
						},
						{
							"id": 3446,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 601,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3451,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that will ultimately be used to broadcast this transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 609,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 3450,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 607,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3453,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 615,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							}
						},
						{
							"id": 3454,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 617,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							}
						},
						{
							"id": 3456,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 622,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3455,
							"name": "validateWithAbi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true to validate that the supplied function args match those specified in\nthe published contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 620,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 3977,
										"name": "ClarityAbi"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3452,
								3444,
								3445,
								3448,
								3449,
								3447,
								3446,
								3451,
								3450,
								3453,
								3454,
								3456,
								3455
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 597,
							"character": 36
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3457,
							"name": "UnsignedContractCallOptions"
						},
						{
							"type": "reference",
							"id": 3472,
							"name": "SignedContractCallOptions"
						},
						{
							"type": "reference",
							"id": 3487,
							"name": "UnsignedMultiSigContractCallOptions"
						},
						{
							"type": "reference",
							"id": 3503,
							"name": "SignedMultiSigContractCallOptions"
						}
					]
				},
				{
					"id": 3432,
					"name": "ContractDeployOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Contract deploy transaction options"
					},
					"children": [
						{
							"id": 3439,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 447,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							}
						},
						{
							"id": 3434,
							"name": "codeBody",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Clarity code to be deployed"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 436,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3433,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 434,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3436,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 440,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3438,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 444,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 3437,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 442,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3440,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 450,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							}
						},
						{
							"id": 3441,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 452,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							}
						},
						{
							"id": 3435,
							"name": "senderKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "a hex string of the private key of the transaction sender"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 438,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3442,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 454,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3439,
								3434,
								3433,
								3436,
								3438,
								3437,
								3440,
								3441,
								3435,
								3442
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 433,
							"character": 38
						}
					]
				},
				{
					"id": 4167,
					"name": "FungiblePostCondition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4172,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 60,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 4173,
							"name": "assetInfo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 61,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 4410,
								"name": "AssetInfo"
							}
						},
						{
							"id": 4171,
							"name": "conditionCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 59,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 3769,
								"name": "FungibleConditionCode"
							}
						},
						{
							"id": 4169,
							"name": "conditionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 57,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 3745,
								"name": "Fungible"
							}
						},
						{
							"id": 4170,
							"name": "principal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 58,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 4392,
								"name": "PostConditionPrincipal"
							}
						},
						{
							"id": 4168,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 56,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3721,
								"name": "PostCondition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4172,
								4173,
								4171,
								4169,
								4170,
								4168
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/postcondition.ts",
							"line": 55,
							"character": 38
						}
					]
				},
				{
					"id": 3085,
					"name": "MessageSignature",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3087,
							"name": "data",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 51,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3086,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 50,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3725,
								"name": "MessageSignature"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3087,
								3086
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 49,
							"character": 33
						}
					]
				},
				{
					"id": 3366,
					"name": "MultiSigOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3367,
							"name": "numSignatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 246,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3368,
							"name": "publicKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 247,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3369,
							"name": "signerKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 248,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3367,
								3368,
								3369
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 245,
							"character": 32
						}
					]
				},
				{
					"id": 3100,
					"name": "MultiSigSpendingCondition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3104,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 181,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3105,
							"name": "fields",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 182,
									"character": 8
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3089,
									"name": "TransactionAuthField"
								}
							}
						},
						{
							"id": 3101,
							"name": "hashMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 178,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3760,
								"name": "MultiSigHashMode"
							}
						},
						{
							"id": 3103,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 180,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3106,
							"name": "signaturesRequired",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 183,
									"character": 20
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3102,
							"name": "signer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 179,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3104,
								3105,
								3101,
								3103,
								3106,
								3102
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 177,
							"character": 42
						}
					]
				},
				{
					"id": 4174,
					"name": "NonFungiblePostCondition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4179,
							"name": "assetInfo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "Structure that identifies the token type."
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 93,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 4410,
								"name": "AssetInfo"
							}
						},
						{
							"id": 4180,
							"name": "assetName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"comment": {
								"shortText": "The Clarity value that names the token instance."
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 95,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 3564,
								"name": "ClarityValue"
							}
						},
						{
							"id": 4178,
							"name": "conditionCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 91,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 3775,
								"name": "NonFungibleConditionCode"
							}
						},
						{
							"id": 4176,
							"name": "conditionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 89,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 3746,
								"name": "NonFungible"
							}
						},
						{
							"id": 4177,
							"name": "principal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 90,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 4392,
								"name": "PostConditionPrincipal"
							}
						},
						{
							"id": 4175,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 88,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3721,
								"name": "PostCondition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4179,
								4180,
								4178,
								4176,
								4177,
								4175
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/postcondition.ts",
							"line": 87,
							"character": 41
						}
					]
				},
				{
					"id": 3520,
					"name": "ReadOnlyFunctionOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Read only function options",
						"tags": [
							{
								"tag": "param",
								"text": "the c32check address of the contract",
								"param": "contractAddress"
							},
							{
								"tag": "param",
								"text": "the contract name",
								"param": "contractName"
							},
							{
								"tag": "param",
								"text": "name of the function to be called",
								"param": "functionName"
							},
							{
								"tag": "param",
								"text": "an array of Clarity values as arguments to the function call",
								"param": "functionArgs"
							},
							{
								"tag": "param",
								"text": "the Stacks blockchain network this transaction is destined for",
								"param": "network"
							},
							{
								"tag": "param",
								"text": "the c32check address of the sender\n",
								"param": "senderAddress"
							}
						]
					},
					"children": [
						{
							"id": 3522,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1010,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3521,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1009,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3524,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1012,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3564,
									"name": "ClarityValue"
								}
							}
						},
						{
							"id": 3523,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1011,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3525,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the contract which contains the function is deployed to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1014,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 3526,
							"name": "senderAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "address of the sender"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1016,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3522,
								3521,
								3524,
								3523,
								3525,
								3526
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 1008,
							"character": 40
						}
					]
				},
				{
					"id": 4161,
					"name": "STXPostCondition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 4166,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 34,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 4165,
							"name": "conditionCode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 33,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 3769,
								"name": "FungibleConditionCode"
							}
						},
						{
							"id": 4163,
							"name": "conditionType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 31,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 3744,
								"name": "STX"
							}
						},
						{
							"id": 4164,
							"name": "principal",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 32,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"id": 4392,
								"name": "PostConditionPrincipal"
							}
						},
						{
							"id": 4162,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isReadonly": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/postcondition.ts",
									"line": 30,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"id": 3721,
								"name": "PostCondition"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								4166,
								4165,
								4163,
								4164,
								4162
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/postcondition.ts",
							"line": 29,
							"character": 33
						}
					]
				},
				{
					"id": 3472,
					"name": "SignedContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3482,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 612,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3452,
								"name": "ContractCallOptions.anchorMode"
							}
						},
						{
							"id": 3474,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Stacks address of the contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 599,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3444,
								"name": "ContractCallOptions.contractAddress"
							}
						},
						{
							"id": 3475,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 600,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3445,
								"name": "ContractCallOptions.contractName"
							}
						},
						{
							"id": 3478,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 604,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3448,
								"name": "ContractCallOptions.fee"
							}
						},
						{
							"id": 3479,
							"name": "feeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 605,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3449,
								"name": "ContractCallOptions.feeEstimateApiUrl"
							}
						},
						{
							"id": 3477,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 602,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3564,
									"name": "ClarityValue"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3447,
								"name": "ContractCallOptions.functionArgs"
							}
						},
						{
							"id": 3476,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 601,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3446,
								"name": "ContractCallOptions.functionName"
							}
						},
						{
							"id": 3481,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that will ultimately be used to broadcast this transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 609,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3451,
								"name": "ContractCallOptions.network"
							}
						},
						{
							"id": 3480,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 607,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3450,
								"name": "ContractCallOptions.nonce"
							}
						},
						{
							"id": 3483,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 615,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3453,
								"name": "ContractCallOptions.postConditionMode"
							}
						},
						{
							"id": 3484,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 617,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3454,
								"name": "ContractCallOptions.postConditions"
							}
						},
						{
							"id": 3473,
							"name": "senderKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 630,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3486,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 622,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3456,
								"name": "ContractCallOptions.sponsored"
							}
						},
						{
							"id": 3485,
							"name": "validateWithAbi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true to validate that the supplied function args match those specified in\nthe published contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 620,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 3977,
										"name": "ClarityAbi"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3455,
								"name": "ContractCallOptions.validateWithAbi"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3482,
								3474,
								3475,
								3478,
								3479,
								3477,
								3476,
								3481,
								3480,
								3483,
								3484,
								3473,
								3486,
								3485
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 629,
							"character": 42
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3443,
							"name": "ContractCallOptions"
						}
					]
				},
				{
					"id": 3503,
					"name": "SignedMultiSigContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3515,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 612,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3452,
								"name": "ContractCallOptions.anchorMode"
							}
						},
						{
							"id": 3507,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Stacks address of the contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 599,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3444,
								"name": "ContractCallOptions.contractAddress"
							}
						},
						{
							"id": 3508,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 600,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3445,
								"name": "ContractCallOptions.contractName"
							}
						},
						{
							"id": 3511,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 604,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3448,
								"name": "ContractCallOptions.fee"
							}
						},
						{
							"id": 3512,
							"name": "feeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 605,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3449,
								"name": "ContractCallOptions.feeEstimateApiUrl"
							}
						},
						{
							"id": 3510,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 602,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3564,
									"name": "ClarityValue"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3447,
								"name": "ContractCallOptions.functionArgs"
							}
						},
						{
							"id": 3509,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 601,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3446,
								"name": "ContractCallOptions.functionName"
							}
						},
						{
							"id": 3514,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that will ultimately be used to broadcast this transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 609,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3451,
								"name": "ContractCallOptions.network"
							}
						},
						{
							"id": 3513,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 607,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3450,
								"name": "ContractCallOptions.nonce"
							}
						},
						{
							"id": 3504,
							"name": "numSignatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 639,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3516,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 615,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3453,
								"name": "ContractCallOptions.postConditionMode"
							}
						},
						{
							"id": 3517,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 617,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3454,
								"name": "ContractCallOptions.postConditions"
							}
						},
						{
							"id": 3505,
							"name": "publicKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 640,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3506,
							"name": "signerKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 641,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3519,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 622,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3456,
								"name": "ContractCallOptions.sponsored"
							}
						},
						{
							"id": 3518,
							"name": "validateWithAbi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true to validate that the supplied function args match those specified in\nthe published contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 620,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 3977,
										"name": "ClarityAbi"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3455,
								"name": "ContractCallOptions.validateWithAbi"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3515,
								3507,
								3508,
								3511,
								3512,
								3510,
								3509,
								3514,
								3513,
								3504,
								3516,
								3517,
								3505,
								3506,
								3519,
								3518
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 638,
							"character": 50
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3443,
							"name": "ContractCallOptions"
						}
					]
				},
				{
					"id": 3418,
					"name": "SignedMultiSigTokenTransferOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3423,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the amount to be transfered in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3372,
								"name": "TokenTransferOptions.amount"
							}
						},
						{
							"id": 3427,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 267,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3376,
								"name": "TokenTransferOptions.anchorMode"
							}
						},
						{
							"id": 3424,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 260,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3373,
								"name": "TokenTransferOptions.fee"
							}
						},
						{
							"id": 3428,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "an arbitrary string to include in the transaction, must be less than 34 bytes"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3377,
								"name": "TokenTransferOptions.memo"
							}
						},
						{
							"id": 3426,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 264,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3375,
								"name": "TokenTransferOptions.network"
							}
						},
						{
							"id": 3425,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 262,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3374,
								"name": "TokenTransferOptions.nonce"
							}
						},
						{
							"id": 3419,
							"name": "numSignatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 293,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3429,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 272,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3378,
								"name": "TokenTransferOptions.postConditionMode"
							}
						},
						{
							"id": 3430,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 274,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3379,
								"name": "TokenTransferOptions.postConditions"
							}
						},
						{
							"id": 3420,
							"name": "publicKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 294,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3422,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the address of the recipient of the token transfer"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 256,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 3631,
										"name": "PrincipalCV"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3371,
								"name": "TokenTransferOptions.recipient"
							}
						},
						{
							"id": 3421,
							"name": "signerKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 295,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3431,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3380,
								"name": "TokenTransferOptions.sponsored"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3423,
								3427,
								3424,
								3428,
								3426,
								3425,
								3419,
								3429,
								3430,
								3420,
								3422,
								3421,
								3431
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 292,
							"character": 51
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3370,
							"name": "TokenTransferOptions"
						}
					]
				},
				{
					"id": 3393,
					"name": "SignedTokenTransferOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3396,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the amount to be transfered in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3372,
								"name": "TokenTransferOptions.amount"
							}
						},
						{
							"id": 3400,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 267,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3376,
								"name": "TokenTransferOptions.anchorMode"
							}
						},
						{
							"id": 3397,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 260,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3373,
								"name": "TokenTransferOptions.fee"
							}
						},
						{
							"id": 3401,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "an arbitrary string to include in the transaction, must be less than 34 bytes"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3377,
								"name": "TokenTransferOptions.memo"
							}
						},
						{
							"id": 3399,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 264,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3375,
								"name": "TokenTransferOptions.network"
							}
						},
						{
							"id": 3398,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 262,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3374,
								"name": "TokenTransferOptions.nonce"
							}
						},
						{
							"id": 3402,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 272,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3378,
								"name": "TokenTransferOptions.postConditionMode"
							}
						},
						{
							"id": 3403,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 274,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3379,
								"name": "TokenTransferOptions.postConditions"
							}
						},
						{
							"id": 3395,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the address of the recipient of the token transfer"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 256,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 3631,
										"name": "PrincipalCV"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3371,
								"name": "TokenTransferOptions.recipient"
							}
						},
						{
							"id": 3394,
							"name": "senderKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 284,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3404,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3380,
								"name": "TokenTransferOptions.sponsored"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3396,
								3400,
								3397,
								3401,
								3399,
								3398,
								3402,
								3403,
								3395,
								3394,
								3404
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 283,
							"character": 43
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3370,
							"name": "TokenTransferOptions"
						}
					]
				},
				{
					"id": 3093,
					"name": "SingleSigSpendingCondition",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3097,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 172,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3094,
							"name": "hashMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 169,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3759,
								"name": "SingleSigHashMode"
							}
						},
						{
							"id": 3098,
							"name": "keyEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 173,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 3766,
								"name": "PubKeyEncoding"
							}
						},
						{
							"id": 3096,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 171,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3099,
							"name": "signature",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 174,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"id": 3085,
								"name": "MessageSignature"
							}
						},
						{
							"id": 3095,
							"name": "signer",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 170,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3097,
								3094,
								3098,
								3096,
								3099,
								3095
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 168,
							"character": 43
						}
					]
				},
				{
					"id": 3527,
					"name": "SponsorOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "Sponsored transaction options"
					},
					"children": [
						{
							"id": 3530,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee amount to sponsor"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1085,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3533,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that this transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1091,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 3532,
							"name": "sponsorAddressHashmode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the hashmode of the sponsor's address"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1089,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"id": 3754,
								"name": "AddressHashMode"
							}
						},
						{
							"id": 3531,
							"name": "sponsorNonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the nonce of the sponsor account"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1087,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3529,
							"name": "sponsorPrivateKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the sponsor's private key"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1083,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3528,
							"name": "transaction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the origin-signed transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 1081,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"id": 4213,
								"name": "StacksTransaction"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3530,
								3533,
								3532,
								3531,
								3529,
								3528
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 1079,
							"character": 31
						}
					]
				},
				{
					"id": 3370,
					"name": "TokenTransferOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"shortText": "STX token transfer transaction options"
					},
					"children": [
						{
							"id": 3372,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the amount to be transfered in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3376,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 267,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							}
						},
						{
							"id": 3373,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 260,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3377,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "an arbitrary string to include in the transaction, must be less than 34 bytes"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3375,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 264,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							}
						},
						{
							"id": 3374,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 262,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							}
						},
						{
							"id": 3378,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 272,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							}
						},
						{
							"id": 3379,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 274,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							}
						},
						{
							"id": 3371,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the address of the recipient of the token transfer"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 256,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 3631,
										"name": "PrincipalCV"
									}
								]
							}
						},
						{
							"id": 3380,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3372,
								3376,
								3373,
								3377,
								3375,
								3374,
								3378,
								3379,
								3371,
								3380
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 254,
							"character": 37
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"id": 3381,
							"name": "UnsignedTokenTransferOptions"
						},
						{
							"type": "reference",
							"id": 3393,
							"name": "SignedTokenTransferOptions"
						},
						{
							"type": "reference",
							"id": 3405,
							"name": "UnsignedMultiSigTokenTransferOptions"
						},
						{
							"type": "reference",
							"id": 3418,
							"name": "SignedMultiSigTokenTransferOptions"
						}
					]
				},
				{
					"id": 3089,
					"name": "TransactionAuthField",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3092,
							"name": "contents",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 97,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"id": 3088,
								"name": "TransactionAuthFieldContents"
							}
						},
						{
							"id": 3091,
							"name": "pubKeyEncoding",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 96,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"id": 3766,
								"name": "PubKeyEncoding"
							}
						},
						{
							"id": 3090,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/authorization.ts",
									"line": 95,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"id": 3726,
								"name": "TransactionAuthField"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3092,
								3091,
								3090
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 94,
							"character": 37
						}
					]
				},
				{
					"id": 3457,
					"name": "UnsignedContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3467,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 612,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3452,
								"name": "ContractCallOptions.anchorMode"
							}
						},
						{
							"id": 3459,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Stacks address of the contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 599,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3444,
								"name": "ContractCallOptions.contractAddress"
							}
						},
						{
							"id": 3460,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 600,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3445,
								"name": "ContractCallOptions.contractName"
							}
						},
						{
							"id": 3463,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 604,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3448,
								"name": "ContractCallOptions.fee"
							}
						},
						{
							"id": 3464,
							"name": "feeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 605,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3449,
								"name": "ContractCallOptions.feeEstimateApiUrl"
							}
						},
						{
							"id": 3462,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 602,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3564,
									"name": "ClarityValue"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3447,
								"name": "ContractCallOptions.functionArgs"
							}
						},
						{
							"id": 3461,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 601,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3446,
								"name": "ContractCallOptions.functionName"
							}
						},
						{
							"id": 3466,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that will ultimately be used to broadcast this transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 609,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3451,
								"name": "ContractCallOptions.network"
							}
						},
						{
							"id": 3465,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 607,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3450,
								"name": "ContractCallOptions.nonce"
							}
						},
						{
							"id": 3468,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 615,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3453,
								"name": "ContractCallOptions.postConditionMode"
							}
						},
						{
							"id": 3469,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 617,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3454,
								"name": "ContractCallOptions.postConditions"
							}
						},
						{
							"id": 3458,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 626,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3471,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 622,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3456,
								"name": "ContractCallOptions.sponsored"
							}
						},
						{
							"id": 3470,
							"name": "validateWithAbi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true to validate that the supplied function args match those specified in\nthe published contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 620,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 3977,
										"name": "ClarityAbi"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3455,
								"name": "ContractCallOptions.validateWithAbi"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3467,
								3459,
								3460,
								3463,
								3464,
								3462,
								3461,
								3466,
								3465,
								3468,
								3469,
								3458,
								3471,
								3470
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 625,
							"character": 44
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3443,
							"name": "ContractCallOptions"
						}
					]
				},
				{
					"id": 3487,
					"name": "UnsignedMultiSigContractCallOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3498,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 612,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3452,
								"name": "ContractCallOptions.anchorMode"
							}
						},
						{
							"id": 3490,
							"name": "contractAddress",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the Stacks address of the contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 599,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3444,
								"name": "ContractCallOptions.contractAddress"
							}
						},
						{
							"id": 3491,
							"name": "contractName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 600,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3445,
								"name": "ContractCallOptions.contractName"
							}
						},
						{
							"id": 3494,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 604,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3448,
								"name": "ContractCallOptions.fee"
							}
						},
						{
							"id": 3495,
							"name": "feeEstimateApiUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 605,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3449,
								"name": "ContractCallOptions.feeEstimateApiUrl"
							}
						},
						{
							"id": 3493,
							"name": "functionArgs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 602,
									"character": 14
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 3564,
									"name": "ClarityValue"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3447,
								"name": "ContractCallOptions.functionArgs"
							}
						},
						{
							"id": 3492,
							"name": "functionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 601,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3446,
								"name": "ContractCallOptions.functionName"
							}
						},
						{
							"id": 3497,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the Stacks blockchain network that will ultimately be used to broadcast this transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 609,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3451,
								"name": "ContractCallOptions.network"
							}
						},
						{
							"id": 3496,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 607,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3450,
								"name": "ContractCallOptions.nonce"
							}
						},
						{
							"id": 3488,
							"name": "numSignatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 634,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3499,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 615,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3453,
								"name": "ContractCallOptions.postConditionMode"
							}
						},
						{
							"id": 3500,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 617,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3454,
								"name": "ContractCallOptions.postConditions"
							}
						},
						{
							"id": 3489,
							"name": "publicKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 635,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3502,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 622,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3456,
								"name": "ContractCallOptions.sponsored"
							}
						},
						{
							"id": 3501,
							"name": "validateWithAbi",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true to validate that the supplied function args match those specified in\nthe published contract"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 620,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"id": 3977,
										"name": "ClarityAbi"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3455,
								"name": "ContractCallOptions.validateWithAbi"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3498,
								3490,
								3491,
								3494,
								3495,
								3493,
								3492,
								3497,
								3496,
								3488,
								3499,
								3500,
								3489,
								3502,
								3501
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 633,
							"character": 52
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3443,
							"name": "ContractCallOptions"
						}
					]
				},
				{
					"id": 3405,
					"name": "UnsignedMultiSigTokenTransferOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3409,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the amount to be transfered in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3372,
								"name": "TokenTransferOptions.amount"
							}
						},
						{
							"id": 3413,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 267,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3376,
								"name": "TokenTransferOptions.anchorMode"
							}
						},
						{
							"id": 3410,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 260,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3373,
								"name": "TokenTransferOptions.fee"
							}
						},
						{
							"id": 3414,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "an arbitrary string to include in the transaction, must be less than 34 bytes"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3377,
								"name": "TokenTransferOptions.memo"
							}
						},
						{
							"id": 3412,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 264,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3375,
								"name": "TokenTransferOptions.network"
							}
						},
						{
							"id": 3411,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 262,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3374,
								"name": "TokenTransferOptions.nonce"
							}
						},
						{
							"id": 3406,
							"name": "numSignatures",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 288,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3415,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 272,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3378,
								"name": "TokenTransferOptions.postConditionMode"
							}
						},
						{
							"id": 3416,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 274,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3379,
								"name": "TokenTransferOptions.postConditions"
							}
						},
						{
							"id": 3407,
							"name": "publicKeys",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 289,
									"character": 12
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3408,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the address of the recipient of the token transfer"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 256,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 3631,
										"name": "PrincipalCV"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3371,
								"name": "TokenTransferOptions.recipient"
							}
						},
						{
							"id": 3417,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3380,
								"name": "TokenTransferOptions.sponsored"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3409,
								3413,
								3410,
								3414,
								3412,
								3411,
								3406,
								3415,
								3416,
								3407,
								3408,
								3417
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 287,
							"character": 53
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3370,
							"name": "TokenTransferOptions"
						}
					]
				},
				{
					"id": 3381,
					"name": "UnsignedTokenTransferOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 3384,
							"name": "amount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the amount to be transfered in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 258,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3372,
								"name": "TokenTransferOptions.amount"
							}
						},
						{
							"id": 3388,
							"name": "anchorMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction anchorMode, which specifies whether it should be\nincluded in an anchor block or a microblock"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 267,
									"character": 12
								}
							],
							"type": {
								"type": "reference",
								"id": 3733,
								"name": "AnchorMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3376,
								"name": "TokenTransferOptions.anchorMode"
							}
						},
						{
							"id": 3385,
							"name": "fee",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction fee in microstacks"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 260,
									"character": 5
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3373,
								"name": "TokenTransferOptions.fee"
							}
						},
						{
							"id": 3389,
							"name": "memo",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "an arbitrary string to include in the transaction, must be less than 34 bytes"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 269,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3377,
								"name": "TokenTransferOptions.memo"
							}
						},
						{
							"id": 3387,
							"name": "network",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the network that the transaction will ultimately be broadcast to"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 264,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "StacksNetwork"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3375,
								"name": "TokenTransferOptions.network"
							}
						},
						{
							"id": 3386,
							"name": "nonce",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the transaction nonce, which must be increased monotonically with each new transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 262,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "BN"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3374,
								"name": "TokenTransferOptions.nonce"
							}
						},
						{
							"id": 3390,
							"name": "postConditionMode",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "the post condition mode, specifying whether or not post-conditions must fully cover all\ntransfered assets"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 272,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"id": 3740,
								"name": "PostConditionMode"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3378,
								"name": "TokenTransferOptions.postConditionMode"
							}
						},
						{
							"id": 3391,
							"name": "postConditions",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "a list of post conditions to add to the transaction"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 274,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 4160,
									"name": "PostCondition"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3379,
								"name": "TokenTransferOptions.postConditions"
							}
						},
						{
							"id": 3382,
							"name": "publicKey",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 280,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3383,
							"name": "recipient",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "the address of the recipient of the token transfer"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 256,
									"character": 11
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"id": 3631,
										"name": "PrincipalCV"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3371,
								"name": "TokenTransferOptions.recipient"
							}
						},
						{
							"id": 3392,
							"name": "sponsored",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "set to true if another account is sponsoring the transaction (covering the transaction fee)"
							},
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 276,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 3380,
								"name": "TokenTransferOptions.sponsored"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								3384,
								3388,
								3385,
								3389,
								3387,
								3386,
								3390,
								3391,
								3382,
								3383,
								3392
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 279,
							"character": 45
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"id": 3370,
							"name": "TokenTransferOptions"
						}
					]
				},
				{
					"id": 3862,
					"name": "ClarityAbiType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 46,
							"character": 26
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3861,
								"name": "ClarityAbiTypePrimitive"
							},
							{
								"type": "reference",
								"id": 3819,
								"name": "ClarityAbiTypeBuffer"
							},
							{
								"type": "reference",
								"id": 3834,
								"name": "ClarityAbiTypeResponse"
							},
							{
								"type": "reference",
								"id": 3840,
								"name": "ClarityAbiTypeOptional"
							},
							{
								"type": "reference",
								"id": 3843,
								"name": "ClarityAbiTypeTuple"
							},
							{
								"type": "reference",
								"id": 3849,
								"name": "ClarityAbiTypeList"
							},
							{
								"type": "reference",
								"id": 3824,
								"name": "ClarityAbiTypeStringAscii"
							},
							{
								"type": "reference",
								"id": 3829,
								"name": "ClarityAbiTypeStringUtf8"
							},
							{
								"type": "reference",
								"id": 3859,
								"name": "ClarityAbiTypeTraitReference"
							}
						]
					}
				},
				{
					"id": 3857,
					"name": "ClarityAbiTypeBool",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 33,
							"character": 30
						}
					],
					"type": {
						"type": "literal",
						"value": "bool"
					}
				},
				{
					"id": 3819,
					"name": "ClarityAbiTypeBuffer",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 23,
							"character": 32
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3820,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3821,
									"name": "buffer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 23,
											"character": 43
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3822,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3823,
													"name": "length",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 23,
															"character": 53
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3823
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 23,
													"character": 44
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3821
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 23,
									"character": 34
								}
							]
						}
					}
				},
				{
					"id": 3856,
					"name": "ClarityAbiTypeInt128",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 32,
							"character": 32
						}
					],
					"type": {
						"type": "literal",
						"value": "int128"
					}
				},
				{
					"id": 3849,
					"name": "ClarityAbiTypeList",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 29,
							"character": 30
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3850,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3851,
									"name": "list",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 29,
											"character": 39
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3852,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3854,
													"name": "length",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 29,
															"character": 71
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 3853,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 29,
															"character": 47
														}
													],
													"type": {
														"type": "reference",
														"id": 3862,
														"name": "ClarityAbiType"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3854,
														3853
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 29,
													"character": 40
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3851
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 29,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 3860,
					"name": "ClarityAbiTypeNone",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 36,
							"character": 30
						}
					],
					"type": {
						"type": "literal",
						"value": "none"
					}
				},
				{
					"id": 3840,
					"name": "ClarityAbiTypeOptional",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 27,
							"character": 34
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3841,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3842,
									"name": "optional",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 27,
											"character": 47
										}
									],
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3842
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 27,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 3861,
					"name": "ClarityAbiTypePrimitive",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 38,
							"character": 35
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3855,
								"name": "ClarityAbiTypeUInt128"
							},
							{
								"type": "reference",
								"id": 3856,
								"name": "ClarityAbiTypeInt128"
							},
							{
								"type": "reference",
								"id": 3857,
								"name": "ClarityAbiTypeBool"
							},
							{
								"type": "reference",
								"id": 3858,
								"name": "ClarityAbiTypePrincipal"
							},
							{
								"type": "reference",
								"id": 3859,
								"name": "ClarityAbiTypeTraitReference"
							},
							{
								"type": "reference",
								"id": 3860,
								"name": "ClarityAbiTypeNone"
							}
						]
					}
				},
				{
					"id": 3858,
					"name": "ClarityAbiTypePrincipal",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 34,
							"character": 35
						}
					],
					"type": {
						"type": "literal",
						"value": "principal"
					}
				},
				{
					"id": 3834,
					"name": "ClarityAbiTypeResponse",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 26,
							"character": 34
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3835,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3836,
									"name": "response",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 26,
											"character": 47
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3837,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3839,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 26,
															"character": 76
														}
													],
													"type": {
														"type": "reference",
														"id": 3862,
														"name": "ClarityAbiType"
													}
												},
												{
													"id": 3838,
													"name": "ok",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 26,
															"character": 53
														}
													],
													"type": {
														"type": "reference",
														"id": 3862,
														"name": "ClarityAbiType"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3839,
														3838
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 26,
													"character": 48
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3836
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 26,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 3824,
					"name": "ClarityAbiTypeStringAscii",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 24,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3825,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3826,
									"name": "string-ascii",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 24,
											"character": 41
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3827,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3828,
													"name": "length",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 24,
															"character": 66
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3828
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 24,
													"character": 57
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3826
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 24,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 3829,
					"name": "ClarityAbiTypeStringUtf8",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 25,
							"character": 36
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3830,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3831,
									"name": "string-utf8",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 25,
											"character": 40
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3832,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 3833,
													"name": "length",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "packages/transactions/src/contract-abi.ts",
															"line": 25,
															"character": 64
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														3833
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 25,
													"character": 55
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3831
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 25,
									"character": 38
								}
							]
						}
					}
				},
				{
					"id": 3859,
					"name": "ClarityAbiTypeTraitReference",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 35,
							"character": 40
						}
					],
					"type": {
						"type": "literal",
						"value": "trait_reference"
					}
				},
				{
					"id": 3843,
					"name": "ClarityAbiTypeTuple",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 28,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3844,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3845,
									"name": "tuple",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 28,
											"character": 41
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 3846,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 3847,
														"name": "name",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/transactions/src/contract-abi.ts",
																"line": 28,
																"character": 49
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 3848,
														"name": "type",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "packages/transactions/src/contract-abi.ts",
																"line": 28,
																"character": 63
															}
														],
														"type": {
															"type": "reference",
															"id": 3862,
															"name": "ClarityAbiType"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															3847,
															3848
														]
													}
												],
												"sources": [
													{
														"fileName": "packages/transactions/src/contract-abi.ts",
														"line": 28,
														"character": 42
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3845
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/contract-abi.ts",
									"line": 28,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 3855,
					"name": "ClarityAbiTypeUInt128",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 31,
							"character": 33
						}
					],
					"type": {
						"type": "literal",
						"value": "uint128"
					}
				},
				{
					"id": 3901,
					"name": "ClarityAbiTypeUnion",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 90,
							"character": 31
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 3902,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3903,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 91,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3864,
												"name": "ClarityAbiTypeId.ClarityAbiTypeUInt128"
											}
										},
										{
											"id": 3904,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 91,
													"character": 54
												}
											],
											"type": {
												"type": "reference",
												"id": 3855,
												"name": "ClarityAbiTypeUInt128"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3903,
												3904
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 91,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3905,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3906,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 92,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3865,
												"name": "ClarityAbiTypeId.ClarityAbiTypeInt128"
											}
										},
										{
											"id": 3907,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 92,
													"character": 53
												}
											],
											"type": {
												"type": "reference",
												"id": 3856,
												"name": "ClarityAbiTypeInt128"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3906,
												3907
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 92,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3908,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3909,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 93,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3866,
												"name": "ClarityAbiTypeId.ClarityAbiTypeBool"
											}
										},
										{
											"id": 3910,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 93,
													"character": 51
												}
											],
											"type": {
												"type": "reference",
												"id": 3857,
												"name": "ClarityAbiTypeBool"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3909,
												3910
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 93,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3911,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3912,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 94,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3867,
												"name": "ClarityAbiTypeId.ClarityAbiTypePrincipal"
											}
										},
										{
											"id": 3913,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 94,
													"character": 56
												}
											],
											"type": {
												"type": "reference",
												"id": 3858,
												"name": "ClarityAbiTypePrincipal"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3912,
												3913
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 94,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3914,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3915,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 95,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3876,
												"name": "ClarityAbiTypeId.ClarityAbiTypeTraitReference"
											}
										},
										{
											"id": 3916,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 95,
													"character": 61
												}
											],
											"type": {
												"type": "reference",
												"id": 3859,
												"name": "ClarityAbiTypeTraitReference"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3915,
												3916
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 95,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3917,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3918,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 96,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3868,
												"name": "ClarityAbiTypeId.ClarityAbiTypeNone"
											}
										},
										{
											"id": 3919,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 96,
													"character": 51
												}
											],
											"type": {
												"type": "reference",
												"id": 3860,
												"name": "ClarityAbiTypeNone"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3918,
												3919
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 96,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3920,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3921,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 97,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3869,
												"name": "ClarityAbiTypeId.ClarityAbiTypeBuffer"
											}
										},
										{
											"id": 3922,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 97,
													"character": 53
												}
											],
											"type": {
												"type": "reference",
												"id": 3819,
												"name": "ClarityAbiTypeBuffer"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3921,
												3922
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 97,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3923,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3924,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 98,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3870,
												"name": "ClarityAbiTypeId.ClarityAbiTypeResponse"
											}
										},
										{
											"id": 3925,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 98,
													"character": 55
												}
											],
											"type": {
												"type": "reference",
												"id": 3834,
												"name": "ClarityAbiTypeResponse"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3924,
												3925
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 98,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3926,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3927,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 99,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3871,
												"name": "ClarityAbiTypeId.ClarityAbiTypeOptional"
											}
										},
										{
											"id": 3928,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 99,
													"character": 55
												}
											],
											"type": {
												"type": "reference",
												"id": 3840,
												"name": "ClarityAbiTypeOptional"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3927,
												3928
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 99,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3929,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3930,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 100,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3872,
												"name": "ClarityAbiTypeId.ClarityAbiTypeTuple"
											}
										},
										{
											"id": 3931,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 100,
													"character": 52
												}
											],
											"type": {
												"type": "reference",
												"id": 3843,
												"name": "ClarityAbiTypeTuple"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3930,
												3931
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 100,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3932,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3933,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 101,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3873,
												"name": "ClarityAbiTypeId.ClarityAbiTypeList"
											}
										},
										{
											"id": 3934,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 101,
													"character": 51
												}
											],
											"type": {
												"type": "reference",
												"id": 3849,
												"name": "ClarityAbiTypeList"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3933,
												3934
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 101,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3935,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3936,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 102,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3874,
												"name": "ClarityAbiTypeId.ClarityAbiTypeStringAscii"
											}
										},
										{
											"id": 3937,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 102,
													"character": 58
												}
											],
											"type": {
												"type": "reference",
												"id": 3824,
												"name": "ClarityAbiTypeStringAscii"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3936,
												3937
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 102,
											"character": 3
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 3938,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3939,
											"name": "id",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 103,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"id": 3875,
												"name": "ClarityAbiTypeId.ClarityAbiTypeStringUtf8"
											}
										},
										{
											"id": 3940,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/contract-abi.ts",
													"line": 103,
													"character": 57
												}
											],
											"type": {
												"type": "reference",
												"id": 3829,
												"name": "ClarityAbiTypeStringUtf8"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3939,
												3940
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/contract-abi.ts",
											"line": 103,
											"character": 3
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 3564,
					"name": "ClarityValue",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 43,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3575,
								"name": "BooleanCV"
							},
							{
								"type": "reference",
								"id": 3616,
								"name": "OptionalCV"
							},
							{
								"type": "reference",
								"id": 3585,
								"name": "BufferCV"
							},
							{
								"type": "reference",
								"id": 3595,
								"name": "IntCV"
							},
							{
								"type": "reference",
								"id": 3598,
								"name": "UIntCV"
							},
							{
								"type": "reference",
								"id": 3632,
								"name": "StandardPrincipalCV"
							},
							{
								"type": "reference",
								"id": 3635,
								"name": "ContractPrincipalCV"
							},
							{
								"type": "reference",
								"id": 3665,
								"name": "ResponseErrorCV"
							},
							{
								"type": "reference",
								"id": 3668,
								"name": "ResponseOkCV"
							},
							{
								"type": "reference",
								"id": 3608,
								"name": "ListCV"
							},
							{
								"type": "reference",
								"id": 3695,
								"name": "TupleCV"
							},
							{
								"type": "reference",
								"id": 3678,
								"name": "StringAsciiCV"
							},
							{
								"type": "reference",
								"id": 3681,
								"name": "StringUtf8CV"
							}
						]
					}
				},
				{
					"id": 3760,
					"name": "MultiSigHashMode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 90,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3756,
								"name": "AddressHashMode.SerializeP2SH"
							},
							{
								"type": "reference",
								"id": 3758,
								"name": "AddressHashMode.SerializeP2WSH"
							}
						]
					}
				},
				{
					"id": 4110,
					"name": "Payload",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 26,
							"character": 19
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 4111,
								"name": "TokenTransferPayload"
							},
							{
								"type": "reference",
								"id": 4117,
								"name": "ContractCallPayload"
							},
							{
								"type": "reference",
								"id": 4124,
								"name": "SmartContractPayload"
							},
							{
								"type": "reference",
								"id": 4129,
								"name": "PoisonPayload"
							},
							{
								"type": "reference",
								"id": 4132,
								"name": "CoinbasePayload"
							}
						]
					}
				},
				{
					"id": 3759,
					"name": "SingleSigHashMode",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 89,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3755,
								"name": "AddressHashMode.SerializeP2PKH"
							},
							{
								"type": "reference",
								"id": 3757,
								"name": "AddressHashMode.SerializeP2WPKH"
							}
						]
					}
				},
				{
					"id": 3107,
					"name": "SpendingCondition",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 186,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3093,
								"name": "SingleSigSpendingCondition"
							},
							{
								"type": "reference",
								"id": 3100,
								"name": "MultiSigSpendingCondition"
							}
						]
					}
				},
				{
					"id": 3088,
					"name": "TransactionAuthFieldContents",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 92,
							"character": 40
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 4077,
								"name": "StacksPublicKey"
							},
							{
								"type": "reference",
								"id": 3085,
								"name": "MessageSignature"
							}
						]
					}
				},
				{
					"id": 3365,
					"name": "TxBroadcastResult",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 149,
							"character": 29
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 3358,
								"name": "TxBroadcastResultOk"
							},
							{
								"type": "reference",
								"id": 3359,
								"name": "TxBroadcastResultRejected"
							}
						]
					}
				},
				{
					"id": 3358,
					"name": "TxBroadcastResultOk",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 142,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3359,
					"name": "TxBroadcastResultRejected",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 143,
							"character": 37
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3360,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 3361,
									"name": "error",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/builders.ts",
											"line": 144,
											"character": 7
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3362,
									"name": "reason",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/builders.ts",
											"line": 145,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"id": 3782,
										"name": "TxRejectedReason"
									}
								},
								{
									"id": 3363,
									"name": "reason_data",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/builders.ts",
											"line": 146,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 3364,
									"name": "txid",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "packages/transactions/src/builders.ts",
											"line": 147,
											"character": 6
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										3361,
										3362,
										3363,
										3364
									]
								}
							],
							"sources": [
								{
									"fileName": "packages/transactions/src/builders.ts",
									"line": 143,
									"character": 39
								}
							]
						}
					}
				},
				{
					"id": 3703,
					"name": "CLARITY_INT_SIZE",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 11,
							"character": 22
						}
					],
					"type": {
						"type": "literal",
						"value": 128
					},
					"defaultValue": "128"
				},
				{
					"id": 3704,
					"name": "COINBASE_BUFFER_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 12,
							"character": 34
						}
					],
					"type": {
						"type": "literal",
						"value": 32
					},
					"defaultValue": "32"
				},
				{
					"id": 3708,
					"name": "COMPRESSED_PUBKEY_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 14,
							"character": 36
						}
					],
					"type": {
						"type": "literal",
						"value": 32
					},
					"defaultValue": "32"
				},
				{
					"id": 3705,
					"name": "DEFAULT_CHAIN_ID",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 9,
							"character": 22
						}
					],
					"type": {
						"type": "reference",
						"id": 3714,
						"name": "Mainnet"
					},
					"defaultValue": "..."
				},
				{
					"id": 3711,
					"name": "DEFAULT_CORE_NODE_API_URL",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 17,
							"character": 31
						}
					],
					"type": {
						"type": "literal",
						"value": "https://stacks-node-api.mainnet.stacks.co"
					},
					"defaultValue": "'https://stacks-node-api.mainnet.stacks.co'"
				},
				{
					"id": 3706,
					"name": "DEFAULT_TRANSACTION_VERSION",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 58,
							"character": 33
						}
					],
					"type": {
						"type": "reference",
						"id": 3738,
						"name": "Mainnet"
					},
					"defaultValue": "..."
				},
				{
					"id": 3702,
					"name": "MAX_STRING_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 10,
							"character": 29
						}
					],
					"type": {
						"type": "literal",
						"value": 128
					},
					"defaultValue": "128"
				},
				{
					"id": 3710,
					"name": "MEMO_MAX_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 16,
							"character": 27
						}
					],
					"type": {
						"type": "literal",
						"value": 34
					},
					"defaultValue": "34"
				},
				{
					"id": 3707,
					"name": "RECOVERABLE_ECDSA_SIG_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 13,
							"character": 40
						}
					],
					"type": {
						"type": "literal",
						"value": 65
					},
					"defaultValue": "65"
				},
				{
					"id": 3709,
					"name": "UNCOMPRESSED_PUBKEY_LENGTH_BYTES",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/constants.ts",
							"line": 15,
							"character": 38
						}
					],
					"type": {
						"type": "literal",
						"value": 64
					},
					"defaultValue": "64"
				},
				{
					"id": 3808,
					"name": "abiFunctionToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 233,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 3809,
							"name": "abiFunctionToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3810,
									"name": "func",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3948,
										"name": "ClarityAbiFunction"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3282,
					"name": "broadcastRawTransaction",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 178,
							"character": 45
						}
					],
					"signatures": [
						{
							"id": 3283,
							"name": "broadcastRawTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Broadcast the signed transaction to a core node",
								"returns": "that resolves to a response if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 3284,
									"name": "rawTx",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the raw serialized transaction buffer to broadcast"
									},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								},
								{
									"id": 3285,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the broadcast endpoint URL\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3286,
									"name": "attachment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3365,
										"name": "TxBroadcastResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3277,
					"name": "broadcastTransaction",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 159,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 3278,
							"name": "broadcastTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Broadcast the signed transaction to a core node",
								"returns": "that resolves to a response if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 3279,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token transfer transaction to broadcast"
									},
									"type": {
										"type": "reference",
										"id": 4213,
										"name": "StacksTransaction"
									}
								},
								{
									"id": 3280,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the Stacks network to broadcast transaction to\n"
									},
									"type": {
										"type": "reference",
										"name": "StacksNetwork"
									}
								},
								{
									"id": 3281,
									"name": "attachment",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3365,
										"name": "TxBroadcastResult"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3352,
					"name": "callReadOnlyFunction",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 1028,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 3353,
							"name": "callReadOnlyFunction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Calls a read only function from a contract interface",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3354,
									"name": "readOnlyFunctionOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the options object\n\nReturns an object with a status bool (okay) and a result string that is a serialized clarity value in hex format.\n"
									},
									"type": {
										"type": "reference",
										"id": 3520,
										"name": "ReadOnlyFunctionOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3564,
										"name": "ClarityValue"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 4101,
					"name": "createCoinbasePayload",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 138,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 4102,
							"name": "createCoinbasePayload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4103,
									"name": "coinbaseBuffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Buffer"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4132,
								"name": "CoinbasePayload"
							}
						}
					]
				},
				{
					"id": 4089,
					"name": "createContractCallPayload",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 71,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 4090,
							"name": "createContractCallPayload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4091,
									"name": "contractAddress",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4388,
												"name": "Address"
											}
										]
									}
								},
								{
									"id": 4092,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4402,
												"name": "LengthPrefixedString"
											}
										]
									}
								},
								{
									"id": 4093,
									"name": "functionName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4402,
												"name": "LengthPrefixedString"
											}
										]
									}
								},
								{
									"id": 4094,
									"name": "functionArgs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 3564,
											"name": "ClarityValue"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4117,
								"name": "ContractCallPayload"
							}
						}
					]
				},
				{
					"id": 3001,
					"name": "createMessageSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 54,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 3002,
							"name": "createMessageSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3003,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3085,
								"name": "MessageSignature"
							}
						}
					]
				},
				{
					"id": 3028,
					"name": "createMultiSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 210,
							"character": 47
						}
					],
					"signatures": [
						{
							"id": 3029,
							"name": "createMultiSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3030,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3760,
										"name": "MultiSigHashMode"
									}
								},
								{
									"id": 3031,
									"name": "numSigs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3032,
									"name": "pubKeys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 3033,
									"name": "nonce",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3034,
									"name": "fee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3100,
								"name": "MultiSigSpendingCondition"
							}
						}
					]
				},
				{
					"id": 4099,
					"name": "createPoisonPayload",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 128,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 4100,
							"name": "createPoisonPayload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 4129,
								"name": "PoisonPayload"
							}
						}
					]
				},
				{
					"id": 3022,
					"name": "createSingleSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 188,
							"character": 48
						}
					],
					"signatures": [
						{
							"id": 3023,
							"name": "createSingleSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3024,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3759,
										"name": "SingleSigHashMode"
									}
								},
								{
									"id": 3025,
									"name": "pubKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3026,
									"name": "nonce",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3027,
									"name": "fee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3093,
								"name": "SingleSigSpendingCondition"
							}
						}
					]
				},
				{
					"id": 4095,
					"name": "createSmartContractPayload",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 104,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 4096,
							"name": "createSmartContractPayload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4097,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4402,
												"name": "LengthPrefixedString"
											}
										]
									}
								},
								{
									"id": 4098,
									"name": "codeBody",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4402,
												"name": "LengthPrefixedString"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4124,
								"name": "SmartContractPayload"
							}
						}
					]
				},
				{
					"id": 4084,
					"name": "createTokenTransferPayload",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 41,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 4085,
							"name": "createTokenTransferPayload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4086,
									"name": "recipient",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 3631,
												"name": "PrincipalCV"
											}
										]
									}
								},
								{
									"id": 4087,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 4088,
									"name": "memo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4407,
												"name": "MemoString"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4111,
								"name": "TokenTransferPayload"
							}
						}
					]
				},
				{
					"id": 3012,
					"name": "createTransactionAuthField",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 100,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 3013,
							"name": "createTransactionAuthField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3014,
									"name": "pubKeyEncoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3766,
										"name": "PubKeyEncoding"
									}
								},
								{
									"id": 3015,
									"name": "contents",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3088,
										"name": "TransactionAuthFieldContents"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3089,
								"name": "TransactionAuthField"
							}
						}
					]
				},
				{
					"id": 3542,
					"name": "cvToJSON",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 138,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 3543,
							"name": "cvToJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3544,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3564,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 3535,
					"name": "cvToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 58,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 3536,
							"name": "cvToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3537,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3564,
										"name": "ClarityValue"
									}
								},
								{
									"id": 3538,
									"name": "encoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "tryAscii"
											},
											{
												"type": "literal",
												"value": "hex"
											}
										]
									},
									"defaultValue": "'hex'"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3539,
					"name": "cvToValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 100,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 3540,
							"name": "cvToValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3541,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3564,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 3566,
					"name": "default",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/deserialize.ts",
							"line": 24,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 3567,
							"name": "default",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3568,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3223,
												"name": "BufferReader"
											},
											{
												"type": "reference",
												"name": "Buffer"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3564,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 3009,
					"name": "deserializeMessageSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 79,
							"character": 43
						}
					],
					"signatures": [
						{
							"id": 3010,
							"name": "deserializeMessageSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3011,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3223,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3085,
								"name": "MessageSignature"
							}
						}
					]
				},
				{
					"id": 3048,
					"name": "deserializeMultiSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 299,
							"character": 52
						}
					],
					"signatures": [
						{
							"id": 3049,
							"name": "deserializeMultiSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3050,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3760,
										"name": "MultiSigHashMode"
									}
								},
								{
									"id": 3051,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3223,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3100,
								"name": "MultiSigSpendingCondition"
							}
						}
					]
				},
				{
					"id": 4107,
					"name": "deserializePayload",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 181,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 4108,
							"name": "deserializePayload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4109,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3223,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4110,
								"name": "Payload"
							}
						}
					]
				},
				{
					"id": 3044,
					"name": "deserializeSingleSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 277,
							"character": 53
						}
					],
					"signatures": [
						{
							"id": 3045,
							"name": "deserializeSingleSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3046,
									"name": "hashMode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3759,
										"name": "SingleSigHashMode"
									}
								},
								{
									"id": 3047,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3223,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3093,
								"name": "SingleSigSpendingCondition"
							}
						}
					]
				},
				{
					"id": 3055,
					"name": "deserializeSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 330,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 3056,
							"name": "deserializeSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3057,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3223,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3107,
								"name": "SpendingCondition"
							}
						}
					]
				},
				{
					"id": 3019,
					"name": "deserializeTransactionAuthField",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 137,
							"character": 47
						}
					],
					"signatures": [
						{
							"id": 3020,
							"name": "deserializeTransactionAuthField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3021,
									"name": "bufferReader",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3223,
										"name": "BufferReader"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3089,
								"name": "TransactionAuthField"
							}
						}
					]
				},
				{
					"id": 3004,
					"name": "emptyMessageSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 66,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 3005,
							"name": "emptyMessageSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 3085,
								"name": "MessageSignature"
							}
						}
					]
				},
				{
					"id": 3941,
					"name": "encodeClarityValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 141,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 3942,
							"name": "encodeClarityValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3943,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								},
								{
									"id": 3944,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3564,
								"name": "ClarityValue"
							}
						},
						{
							"id": 3945,
							"name": "encodeClarityValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3946,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3901,
										"name": "ClarityAbiTypeUnion"
									}
								},
								{
									"id": 3947,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3564,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 3298,
					"name": "estimateContractDeploy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 465,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 3299,
							"name": "estimateContractDeploy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Estimate the total transaction fee in microstacks for a contract deploy",
								"returns": "a promise that resolves to number of microstacks per byte\n"
							},
							"parameters": [
								{
									"id": 3300,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token transfer transaction to estimate fees for"
									},
									"type": {
										"type": "reference",
										"id": 4213,
										"name": "StacksTransaction"
									}
								},
								{
									"id": 3301,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the Stacks network to estimate transaction for\n"
									},
									"type": {
										"type": "reference",
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BigNum"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3305,
					"name": "estimateContractFunctionCall",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 652,
							"character": 50
						}
					],
					"signatures": [
						{
							"id": 3306,
							"name": "estimateContractFunctionCall",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Estimate the total transaction fee in microstacks for a contract function call",
								"returns": "a promise that resolves to number of microstacks per byte\n"
							},
							"parameters": [
								{
									"id": 3307,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token transfer transaction to estimate fees for"
									},
									"type": {
										"type": "reference",
										"id": 4213,
										"name": "StacksTransaction"
									}
								},
								{
									"id": 3308,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the Stacks network to estimate transaction for\n"
									},
									"type": {
										"type": "reference",
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BigNum"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3273,
					"name": "estimateTransfer",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 100,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 3274,
							"name": "estimateTransfer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Estimate the total transaction fee in microstacks for a token transfer",
								"returns": "a promise that resolves to number of microstacks per byte\n"
							},
							"parameters": [
								{
									"id": 3275,
									"name": "transaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the token transfer transaction to estimate fees for"
									},
									"type": {
										"type": "reference",
										"id": 4213,
										"name": "StacksTransaction"
									}
								},
								{
									"id": 3276,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the Stacks network to estimate transaction for\n"
									},
									"type": {
										"type": "reference",
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BigNum"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3287,
					"name": "getAbi",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 220,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 3288,
							"name": "getAbi",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Fetch a contract's ABI",
								"returns": "that resolves to a ClarityAbi if the operation succeeds\n"
							},
							"parameters": [
								{
									"id": 3289,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the contracts address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3290,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the contracts name"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3291,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the Stacks network to broadcast transaction to\n"
									},
									"type": {
										"type": "reference",
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 3977,
										"name": "ClarityAbi"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3545,
					"name": "getCVTypeString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/clarityValue.ts",
							"line": 149,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 3546,
							"name": "getCVTypeString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3547,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3564,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3269,
					"name": "getNonce",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 72,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 3270,
							"name": "getNonce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Lookup the nonce for an address from a core node",
								"returns": "a promise that resolves to an integer\n"
							},
							"parameters": [
								{
									"id": 3271,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address to look up"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3272,
									"name": "network",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "the Stacks network to look up address on\n"
									},
									"type": {
										"type": "reference",
										"name": "StacksNetwork"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "BigNum"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3805,
					"name": "getTypeString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 194,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 3806,
							"name": "getTypeString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3807,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3802,
					"name": "getTypeUnion",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 105,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 3803,
							"name": "getTypeUnion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3804,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3901,
								"name": "ClarityAbiTypeUnion"
							}
						}
					]
				},
				{
					"id": 3880,
					"name": "isClarityAbiBuffer",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 75,
							"character": 31
						}
					],
					"signatures": [
						{
							"id": 3881,
							"name": "isClarityAbiBuffer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3882,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3819,
									"name": "ClarityAbiTypeBuffer"
								}
							}
						}
					]
				},
				{
					"id": 3898,
					"name": "isClarityAbiList",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 87,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 3899,
							"name": "isClarityAbiList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3900,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3849,
									"name": "ClarityAbiTypeList"
								}
							}
						}
					]
				},
				{
					"id": 3892,
					"name": "isClarityAbiOptional",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 83,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 3893,
							"name": "isClarityAbiOptional",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3894,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3840,
									"name": "ClarityAbiTypeOptional"
								}
							}
						}
					]
				},
				{
					"id": 3877,
					"name": "isClarityAbiPrimitive",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 73,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 3878,
							"name": "isClarityAbiPrimitive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3879,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3861,
									"name": "ClarityAbiTypePrimitive"
								}
							}
						}
					]
				},
				{
					"id": 3889,
					"name": "isClarityAbiResponse",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 81,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 3890,
							"name": "isClarityAbiResponse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3891,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3834,
									"name": "ClarityAbiTypeResponse"
								}
							}
						}
					]
				},
				{
					"id": 3883,
					"name": "isClarityAbiStringAscii",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 77,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 3884,
							"name": "isClarityAbiStringAscii",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3885,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3824,
									"name": "ClarityAbiTypeStringAscii"
								}
							}
						}
					]
				},
				{
					"id": 3886,
					"name": "isClarityAbiStringUtf8",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 79,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 3887,
							"name": "isClarityAbiStringUtf8",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3888,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3829,
									"name": "ClarityAbiTypeStringUtf8"
								}
							}
						}
					]
				},
				{
					"id": 3895,
					"name": "isClarityAbiTuple",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 85,
							"character": 30
						}
					],
					"signatures": [
						{
							"id": 3896,
							"name": "isClarityAbiTuple",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3897,
									"name": "val",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "val",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3843,
									"name": "ClarityAbiTypeTuple"
								}
							}
						}
					]
				},
				{
					"id": 3217,
					"name": "isEnum",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/bufferReader.ts",
							"line": 33,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 3218,
							"name": "isEnum",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Type guard to check if a given value is a valid enum value.",
								"tags": [
									{
										"tag": "example",
										"text": "\n```ts\nenum Color {\n  Purple = 3,\n  Orange = 5\n}\nconst val: number = 3;\nif (isEnum(Color, val)) {\n  // `val` is known as enum type `Color`, e.g.:\n  const colorVal: Color = val;\n}\n```\n"
									}
								]
							},
							"typeParameter": [
								{
									"id": 3219,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3220,
									"name": "TEnumValue",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"parameters": [
								{
									"id": 3221,
									"name": "enumVariable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Literal `enum` type."
									},
									"type": {
										"type": "mapped",
										"parameter": "key",
										"parameterType": {
											"type": "reference",
											"name": "T"
										},
										"templateType": {
											"type": "reference",
											"name": "TEnumValue"
										}
									}
								},
								{
									"id": 3222,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A value to check against the enum's values."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "value",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"name": "TEnumValue"
								}
							}
						}
					]
				},
				{
					"id": 3035,
					"name": "isSingleSig",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 232,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 3036,
							"name": "isSingleSig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3037,
									"name": "condition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3107,
										"name": "SpendingCondition"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "condition",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 3093,
									"name": "SingleSigSpendingCondition"
								}
							}
						}
					]
				},
				{
					"id": 3312,
					"name": "makeContractCall",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 812,
							"character": 38
						}
					],
					"signatures": [
						{
							"id": 3313,
							"name": "makeContractCall",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a Clarity smart contract function call transaction",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3314,
									"name": "txOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an options object for the contract function call\n\nReturns a signed Stacks smart contract function call transaction.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3472,
												"name": "SignedContractCallOptions"
											},
											{
												"type": "reference",
												"id": 3503,
												"name": "SignedMultiSigContractCallOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4213,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3302,
					"name": "makeContractDeploy",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 518,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 3303,
							"name": "makeContractDeploy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a Clarity smart contract deploy transaction",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3304,
									"name": "txOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an options object for the contract deploy\n\nReturns a signed Stacks smart contract deploy transaction.\n"
									},
									"type": {
										"type": "reference",
										"id": 3432,
										"name": "ContractDeployOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4213,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3332,
					"name": "makeContractFungiblePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 928,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 3333,
							"name": "makeContractFungiblePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a fungible token post condition with a contract principal",
								"text": "Returns a fungible token post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3334,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3335,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name of the contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3336,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3769,
										"name": "FungibleConditionCode"
									}
								},
								{
									"id": 3337,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the amount of fungible tokens"
									},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3338,
									"name": "assetInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset info describing the fungible token\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4410,
												"name": "AssetInfo"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4167,
								"name": "FungiblePostCondition"
							}
						}
					]
				},
				{
					"id": 3345,
					"name": "makeContractNonFungiblePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 982,
							"character": 52
						}
					],
					"signatures": [
						{
							"id": 3346,
							"name": "makeContractNonFungiblePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a non-fungible token post condition with a contract principal",
								"text": "Returns a non-fungible token post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3347,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3348,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name of the contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3349,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3775,
										"name": "NonFungibleConditionCode"
									}
								},
								{
									"id": 3350,
									"name": "assetInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset info describing the non-fungible token"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4410,
												"name": "AssetInfo"
											}
										]
									}
								},
								{
									"id": 3351,
									"name": "assetName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset name describing the non-fungible token\n"
									},
									"type": {
										"type": "reference",
										"id": 3564,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4174,
								"name": "NonFungiblePostCondition"
							}
						}
					]
				},
				{
					"id": 3320,
					"name": "makeContractSTXPostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 876,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 3321,
							"name": "makeContractSTXPostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a STX post condition with a contract principal",
								"text": "Returns a STX post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3322,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address of the contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3323,
									"name": "contractName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the name of the contract"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3324,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3769,
										"name": "FungibleConditionCode"
									}
								},
								{
									"id": 3325,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the amount of STX tokens\n"
									},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4161,
								"name": "STXPostCondition"
							}
						}
					]
				},
				{
					"id": 3295,
					"name": "makeSTXTokenTransfer",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 397,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 3296,
							"name": "makeSTXTokenTransfer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a signed Stacks token transfer transaction",
								"text": "Returns a signed Stacks token transfer transaction.\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3297,
									"name": "txOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an options object for the token transfer\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3393,
												"name": "SignedTokenTransferOptions"
											},
											{
												"type": "reference",
												"id": 3418,
												"name": "SignedMultiSigTokenTransferOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4213,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3058,
					"name": "makeSigHashPreSign",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 342,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 3059,
							"name": "makeSigHashPreSign",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3060,
									"name": "curSigHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3061,
									"name": "authType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3751,
										"name": "AuthType"
									}
								},
								{
									"id": 3062,
									"name": "fee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3063,
									"name": "nonce",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3326,
					"name": "makeStandardFungiblePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 901,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 3327,
							"name": "makeStandardFungiblePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a fungible token post condition with a standard principal",
								"text": "Returns a fungible token post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3328,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3329,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3769,
										"name": "FungibleConditionCode"
									}
								},
								{
									"id": 3330,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the amount of fungible tokens"
									},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3331,
									"name": "assetInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset info describing the fungible token\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4410,
												"name": "AssetInfo"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4167,
								"name": "FungiblePostCondition"
							}
						}
					]
				},
				{
					"id": 3339,
					"name": "makeStandardNonFungiblePostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 955,
							"character": 52
						}
					],
					"signatures": [
						{
							"id": 3340,
							"name": "makeStandardNonFungiblePostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a non-fungible token post condition with a standard principal",
								"text": "Returns a non-fungible token post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3341,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3342,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3775,
										"name": "NonFungibleConditionCode"
									}
								},
								{
									"id": 3343,
									"name": "assetInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset info describing the non-fungible token"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 4410,
												"name": "AssetInfo"
											}
										]
									}
								},
								{
									"id": 3344,
									"name": "assetName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "asset name describing the non-fungible token\n"
									},
									"type": {
										"type": "reference",
										"id": 3564,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4174,
								"name": "NonFungiblePostCondition"
							}
						}
					]
				},
				{
					"id": 3315,
					"name": "makeStandardSTXPostCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 856,
							"character": 44
						}
					],
					"signatures": [
						{
							"id": 3316,
							"name": "makeStandardSTXPostCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates a STX post condition with a standard principal",
								"text": "Returns a STX post condition object\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3317,
									"name": "address",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the c32check address"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3318,
									"name": "conditionCode",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the condition code"
									},
									"type": {
										"type": "reference",
										"id": 3769,
										"name": "FungibleConditionCode"
									}
								},
								{
									"id": 3319,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the amount of STX tokens\n"
									},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 4161,
								"name": "STXPostCondition"
							}
						}
					]
				},
				{
					"id": 3309,
					"name": "makeUnsignedContractCall",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 703,
							"character": 46
						}
					],
					"signatures": [
						{
							"id": 3310,
							"name": "makeUnsignedContractCall",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates an unsigned Clarity smart contract function call transaction",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3311,
									"name": "txOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an options object for the contract call\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3457,
												"name": "UnsignedContractCallOptions"
											},
											{
												"type": "reference",
												"id": 3487,
												"name": "UnsignedMultiSigContractCallOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4213,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3292,
					"name": "makeUnsignedSTXTokenTransfer",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 307,
							"character": 50
						}
					],
					"signatures": [
						{
							"id": 3293,
							"name": "makeUnsignedSTXTokenTransfer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Generates an unsigned Stacks token transfer transaction",
								"text": "Returns a Stacks token transfer transaction.\n",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3294,
									"name": "txOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "an options object for the token transfer\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 3381,
												"name": "UnsignedTokenTransferOptions"
											},
											{
												"type": "reference",
												"id": 3405,
												"name": "UnsignedMultiSigTokenTransferOptions"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4213,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3064,
					"name": "nextSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 394,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 3065,
							"name": "nextSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3066,
									"name": "curSigHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3067,
									"name": "authType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3751,
										"name": "AuthType"
									}
								},
								{
									"id": 3068,
									"name": "fee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3069,
									"name": "nonce",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3070,
									"name": "privateKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4080,
										"name": "StacksPrivateKey"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3071,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3072,
											"name": "nextSig",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/authorization.ts",
													"line": 401,
													"character": 9
												}
											],
											"type": {
												"type": "reference",
												"id": 3085,
												"name": "MessageSignature"
											}
										},
										{
											"id": 3073,
											"name": "nextSigHash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "packages/transactions/src/authorization.ts",
													"line": 402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3072,
												3073
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/transactions/src/authorization.ts",
											"line": 400,
											"character": 2
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3074,
					"name": "nextVerification",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 416,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 3075,
							"name": "nextVerification",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3076,
									"name": "initialSigHash",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3077,
									"name": "authType",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3751,
										"name": "AuthType"
									}
								},
								{
									"id": 3078,
									"name": "fee",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3079,
									"name": "nonce",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "BigNum"
									}
								},
								{
									"id": 3080,
									"name": "pubKeyEncoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3766,
										"name": "PubKeyEncoding"
									}
								},
								{
									"id": 3081,
									"name": "signature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3085,
										"name": "MessageSignature"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3082,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 3084,
											"name": "nextSigHash",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3083,
											"name": "pubKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 4077,
												"name": "StacksPublicKey"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3084,
												3083
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 3627,
					"name": "optionalCVOf",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/optionalCV.ts",
							"line": 16,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 3628,
							"name": "optionalCVOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3629,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 3564,
										"name": "ClarityValue"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3616,
								"name": "OptionalCV"
							}
						}
					]
				},
				{
					"id": 3815,
					"name": "parseToCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 417,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 3816,
							"name": "parseToCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Convert string input to Clarity value based on contract ABI data. Only handles Clarity\nprimitives and buffers. Responses, optionals, tuples and lists are not supported.",
								"returns": "returns a Clarity value\n"
							},
							"parameters": [
								{
									"id": 3817,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "string to be parsed into Clarity value"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3818,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the contract function argument object\n"
									},
									"type": {
										"type": "reference",
										"id": 3862,
										"name": "ClarityAbiType"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3564,
								"name": "ClarityValue"
							}
						}
					]
				},
				{
					"id": 3639,
					"name": "principalCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
							"line": 35,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 3640,
							"name": "principalCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3641,
									"name": "principal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 3631,
								"name": "PrincipalCV"
							}
						}
					]
				},
				{
					"id": 3642,
					"name": "principalToString",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/principalCV.ts",
							"line": 24,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 3643,
							"name": "principalToString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3644,
									"name": "principal",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3631,
										"name": "PrincipalCV"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3006,
					"name": "serializeMessageSignature",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 73,
							"character": 41
						}
					],
					"signatures": [
						{
							"id": 3007,
							"name": "serializeMessageSignature",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3008,
									"name": "messageSignature",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3085,
										"name": "MessageSignature"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3041,
					"name": "serializeMultiSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 261,
							"character": 50
						}
					],
					"signatures": [
						{
							"id": 3042,
							"name": "serializeMultiSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3043,
									"name": "condition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3100,
										"name": "MultiSigSpendingCondition"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 4104,
					"name": "serializePayload",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/payload.ts",
							"line": 145,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 4105,
							"name": "serializePayload",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 4106,
									"name": "payload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 4110,
										"name": "Payload"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3038,
					"name": "serializeSingleSigSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 250,
							"character": 51
						}
					],
					"signatures": [
						{
							"id": 3039,
							"name": "serializeSingleSigSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3040,
									"name": "condition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3093,
										"name": "SingleSigSpendingCondition"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3052,
					"name": "serializeSpendingCondition",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 322,
							"character": 42
						}
					],
					"signatures": [
						{
							"id": 3053,
							"name": "serializeSpendingCondition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3054,
									"name": "condition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3107,
										"name": "SpendingCondition"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3016,
					"name": "serializeTransactionAuthField",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/authorization.ts",
							"line": 111,
							"character": 45
						}
					],
					"signatures": [
						{
							"id": 3017,
							"name": "serializeTransactionAuthField",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3018,
									"name": "field",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 3089,
										"name": "TransactionAuthField"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Buffer"
							}
						}
					]
				},
				{
					"id": 3355,
					"name": "sponsorTransaction",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/builders.ts",
							"line": 1103,
							"character": 40
						}
					],
					"signatures": [
						{
							"id": 3356,
							"name": "sponsorTransaction",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Constructs and signs a sponsored transaction as the sponsor",
								"returns": "\n"
							},
							"parameters": [
								{
									"id": 3357,
									"name": "sponsorOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "the sponsor options object\n\nReturns a signed sponsored transaction.\n"
									},
									"type": {
										"type": "reference",
										"id": 3527,
										"name": "SponsorOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 4213,
										"name": "StacksTransaction"
									}
								],
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 3690,
					"name": "stringCV",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "packages/transactions/src/clarity/types/stringCV.ts",
							"line": 21,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 3691,
							"name": "stringCV",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 3692,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3693,
									"name": "encoding",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ascii"
											},
											{
												"type": "literal",
												"value": "utf8"
											}
										]
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 3678,
										"name": "StringAsciiCV"
									},
									{
										"type": "reference",
										"id": 3681,
										"name": "StringUtf8CV"
									}
								]
							}
						}
					]
				},
				{
					"id": 3811,
					"name": "validateContractCall",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "packages/transactions/src/contract-abi.ts",
							"line": 370,
							"character": 36
						}
					],
					"signatures": [
						{
							"id": 3812,
							"name": "validateContractCall",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Validates a contract-call payload with a contract ABI",
								"returns": "true if the payloads functionArgs type check against those in the ABI\n"
							},
							"parameters": [
								{
									"id": 3813,
									"name": "payload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a contract-call payload"
									},
									"type": {
										"type": "reference",
										"id": 4117,
										"name": "ContractCallPayload"
									}
								},
								{
									"id": 3814,
									"name": "abi",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "a contract ABI\n"
									},
									"type": {
										"type": "reference",
										"id": 3977,
										"name": "ClarityAbi"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"kind": 16777216,
					"children": [
						4905,
						4911,
						4704,
						5005,
						4709,
						4763,
						4760,
						4908,
						4718,
						4706,
						4707,
						4912,
						4909,
						4719,
						4910,
						4711,
						4710,
						4762,
						4764,
						4906,
						4716,
						5018,
						5019,
						5017,
						4713,
						4715,
						4714,
						4761,
						4712,
						4904,
						4836,
						4835,
						4748,
						4907,
						4717,
						4721,
						4722,
						4759,
						4978,
						4705,
						4720,
						4708,
						4880,
						4881,
						4878,
						4879,
						4882,
						4727,
						4728,
						4999,
						4893,
						4825,
						4735,
						4736,
						4737,
						4876,
						4898,
						4887,
						4877,
						4765,
						4901,
						4890,
						4894,
						4766,
						4767,
						4827,
						4818,
						4886,
						5003,
						4884,
						4900,
						4744,
						4903,
						4892,
						4896,
						4769,
						4889,
						4826,
						4875,
						4749,
						5011,
						4724,
						4816,
						4817,
						4832,
						4830,
						5014,
						5015,
						5016,
						5010,
						5004,
						4725,
						5009,
						5001,
						4821,
						5006,
						5007,
						4738,
						4828,
						4729,
						5000,
						4897,
						4885,
						5020,
						4831,
						4833,
						4824,
						4820,
						4819,
						4834,
						4822,
						4732,
						4731,
						5008,
						4883,
						4899,
						4743,
						4902,
						4891,
						4895,
						4768,
						4888,
						4823,
						4874,
						5012,
						4829,
						4730,
						4733,
						4734,
						4740,
						4741,
						4723,
						4739,
						5013,
						4726,
						5021
					]
				},
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						3754,
						3761,
						3733,
						3778,
						3751,
						3712,
						3863,
						3548,
						3769,
						3775,
						3727,
						3740,
						3747,
						3743,
						3766,
						3715,
						3737,
						3782
					]
				},
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						3108,
						3223,
						3992,
						3996,
						3988,
						4000,
						3180,
						3984,
						3145,
						4004
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						3977,
						3948,
						3962,
						3972,
						3974,
						3958,
						3443,
						3432,
						4167,
						3085,
						3366,
						3100,
						4174,
						3520,
						4161,
						3472,
						3503,
						3418,
						3393,
						3093,
						3527,
						3370,
						3089,
						3457,
						3487,
						3405,
						3381
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						3862,
						3857,
						3819,
						3856,
						3849,
						3860,
						3840,
						3861,
						3858,
						3834,
						3824,
						3829,
						3859,
						3843,
						3855,
						3901,
						3564,
						3760,
						4110,
						3759,
						3107,
						3088,
						3365,
						3358,
						3359
					]
				},
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						3703,
						3704,
						3708,
						3705,
						3711,
						3706,
						3702,
						3710,
						3707,
						3709
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3808,
						3282,
						3277,
						3352,
						4101,
						4089,
						3001,
						3028,
						4099,
						3022,
						4095,
						4084,
						3012,
						3542,
						3535,
						3539,
						3566,
						3009,
						3048,
						4107,
						3044,
						3055,
						3019,
						3004,
						3941,
						3298,
						3305,
						3273,
						3287,
						3545,
						3269,
						3805,
						3802,
						3880,
						3898,
						3892,
						3877,
						3889,
						3883,
						3886,
						3895,
						3217,
						3035,
						3312,
						3302,
						3332,
						3345,
						3320,
						3295,
						3058,
						3326,
						3339,
						3315,
						3309,
						3292,
						3064,
						3074,
						3627,
						3815,
						3639,
						3642,
						3006,
						3041,
						4104,
						3038,
						3052,
						3016,
						3355,
						3690,
						3811
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/transactions/src/authorization.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"kind": 1,
			"children": [
				1,
				256,
				417,
				1032,
				1358,
				1829,
				2252,
				2433,
				2629,
				2837,
				3000
			]
		}
	]
}